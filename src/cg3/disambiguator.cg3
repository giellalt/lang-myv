# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2013 The University of Tromsø 
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# =============================================================== #
#    E R Z Y A  D I S A M B I G U A T O R               
# =============================================================== #
# ================================================================ 




      # =========================================== #
      #      Short table of contents                #
      # =========================================== #

      # Delimiters
      # Tags and sets
      # Disambiguation rules
       # One-cohort disambiguation - cycle 0
       # Local disambiguation - cycles 1 and 2
       # Cycle 1a: Special cases 
       # Cycle 1b: Cleaning up after the special cases
       # Cycle 2: Other local disambiguation 
       # Mapping of COMP-CS<, CC and CS
       # More diambiguation
       # Verb mappings 
       # Disambiguating nouns
       # Mainly mapping-rules   
       # Disambiguating nouns
  	   # Case disambiguation
       # Cycle 3: Global disambiguation 
	   # Cycle 4: Syntactic disambiguation 
	   # Cycle 5: Post-syntactic morphological disambiguation



# =============== #
#!! # DELIMITERS 
# =============== #
SUBREADINGS = LTR ; #What is this 2021-09-14

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" "<..>" "<!.>" "<?.>" "<¶.>" "<❡>" (sent) sent ; 

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ================== #
#!! # TAGS AND SETS
# ================== #


SETS


#!! ## Tags


#!! This section lists all the tags inherited from the fst, and used as tags
#!! in the syntactic analysis. The next section, **Sets**, contains sets defined
#!! on the basis of the tags listed here, those set names are not visible in the output.



# Tags declared as single-membered LISTs
# ======================================

#!! ### Beginning and end of sentence
LIST BOS = (>>>) (<s>) (sent) ;  #!! BOS
LIST EOS = (<<<) (</s>) (sent) ("❡") ("¬") ; #!! EOS

# We define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.
# CG3 doesn´t function without >>> and <<< !


#!! ### Parts of speech tags

#!! * Sets for parts of speech
# ---------------

LIST N = N ;
LIST A = A ;
LIST Adv = Adv ;
LIST V = V ;
LIST Pron = Pron ;
LIST CS = CS ;
LIST CC = CC ;
SET CC-CS = CC OR CS ;
LIST Po = Po ;
LIST Adp = Adp ;
#LIST Pr = Pr ;
LIST Pcle = Pcle ;
LIST Num = Num ;
LIST Interj = Interj ;
LIST ABBR = ABBR ;
LIST ACR = ACR ;
LIST CLB = CLB clb ; #!! * CLB clb (clb because of apertium)
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;
LIST WEB = WEB ;
LIST PPUNCT = LEFT RIGHT PUNCT guio ; #!! * LEFT RIGHT because of apertium
LIST QMARK = """ ; # " syntax colouring reset.
SET PUNCT = PPUNCT - QMARK ;
LIST DASH = "–" "—" "-" ;

LIST COMMA = "," ;
LIST Comma = "," ;
LIST ¶ = ¶;
LIST HEADLINEMARK = "❡" ":" ;

#LIST V* = V* ;





LIST CC = CC ;

LIST Det = Det ;
LIST Qnt = Qnt ;

LIST HYPHEN = "-" ;
LIST QUEST = "?" ;

#!! * ### Tags for POS sub-categories

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;
LIST Indef = Indef (ind) ;
LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;
LIST Coll = Coll ;
LIST NomAg = NomAg ;
LIST G3 = G3 ;
LIST Prop = Prop ;
LIST Arab = Arab ; #!! * Arab
LIST Rom = Rom ; #!! * Romertall
LIST Subqst = Subqst ; #!! * Subqst
LIST CLBfinal = CLBfinal ; #!! * CLBfinal

LIST Relator = Relator ;

LIST Deg = Deg ;
LIST Manner = Manner ;
LIST AssocColl = AssocColl;

#!! * ### Tags for morphosyntactic properties

LIST Abe = Abe ;
LIST Abl = Abl ;
LIST Com = Com ;
LIST Cmpr = Cmpr ;
LIST Dat = Dat ;
LIST Ela = Ela ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Ine = Ine ;
LIST Lat = Lat ;
LIST Loc = Loc ;
LIST Nom = Nom ;
LIST Prl = Prl ;
LIST TempCx = TempCx ;
LIST Tra = Tra ;
LIST Voc = Voc ;
LIST Sg = Sg ;
LIST Pl = Pl ;
LIST SP = SP ;

LIST Cmp/SplitR = Cmp/SplitR ;     #!! * Cmp/SplitR
LIST Cmp/Attr = Cmp/Attr ;         #!! * Cmp/Attr
LIST Cmp/Cit = Cmp/Cit ;           #!! * Cmp/Cit
LIST Cmpnd = Cmpnd ;       #!! * Cmpnd
LIST Cmp/SgNom = Cmp/SgNom ; #!! * Cmp/SgNom Cmp/SgGen
LIST Cmp/SgGen = Cmp/SgGen ; #!! * Cmp/SgGen
LIST Cmp/PlGen = Cmp/PlGen ; #!! * Cmp/PlGen
LIST Cmp/Sh = Cmp/Sh ;     #!! * Cmp/Sh
LIST Cmp = Cmp ;           #!! * Cmp

# these may need removing RCmpnd, RCmpnd , SgNomCmp, SgGenCmp, ShCmp
LIST RCmpnd = RCmpnd ;
LIST SgNomCmp = SgNomCmp ;
LIST SgGenCmp = SgGenCmp ;
LIST ShCmp = ShCmp ;

LIST Def = Def ;
LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;
LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;

# Erzya has implicit comparison, i.e. with relation to Joe, Sue is tall.
LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;
LIST Ord = Ord ;
LIST Iter = Iter ;
LIST Mult = Mult ;
LIST Qst = Qst ;
LIST IV = IV ;
LIST TV = TV ;
LIST BV = IV TV ;

LIST Prs = Prs ;
LIST Prt1 = Prt1;
LIST Prt2 = Prt2;


LIST Cond = Cond ;
LIST Conj = Conj ;
LIST CondConj = CondConj ;
LIST Des = Des ;
LIST Ind = Ind ;
LIST Oblig = Oblig ;
LIST Opt = Opt ;
LIST Prec = Prec ;
LIST Proh = Proh ;


LIST Imprt = Imprt ;

LIST ScSg1 = ScSg1 (s_p1 s_sg) (a_p1 a_sg) ;
LIST ScSg2 = ScSg2 (s_p2 s_sg) (a_p2 a_sg) ;
LIST ScSg3 = ScSg3 (s_p3 s_sg) (a_p3 a_sg) ;
 
LIST ScPl1 = ScPl1 (s_p1 s_pl) (a_p1 a_pl) ;
LIST ScPl2 = ScPl2 (s_p2 s_pl) (a_p2 a_pl) ;
LIST ScPl3 = ScPl3 (s_p3 s_pl) (a_p3 a_pl) ;

LIST OcSg1 = OcSg1 (o_p1 o_sg) ;
LIST OcSg2 = OcSg2 (o_p2 o_sg) ;
LIST OcSg3 = OcSg3 (o_p3 o_sg) ;
 
LIST OcPl1 = OcPl1 (o_p1 o_pl) ;
LIST OcPl2 = OcPl2 (o_p2 o_pl) ;
LIST OcPl3 = OcPl3 (o_p3 o_pl) ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 (pl3) ;

LIST Inf = Inf ;
LIST ConNeg = ConNeg ;
LIST ConNegII = ConNegII ;
LIST Neg = Neg ;
LIST Aux = Aux ;
LIST Comp = Comp ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;

LIST PrsPrc = PrsPrc ;
 

LIST Ger = Ger ;
LIST Sup = Sup ;
LIST Actio = Actio ;

# The ("ge" Pcle) etc. are used in Apertium
LIST Foc/Гак = Foc/Гак ;
LIST Clt/Га = Clt/Га ;
LIST Clt/Гая = Clt/Гая ;
LIST Clt/Гаять = Clt/Гаять ;
LIST Clt/Гаятя = Clt/Гаятя ;
LIST Clt/Гатя = Clt/Гатя ;
LIST Clt/Гака = Clt/Гака ;
LIST Clt/Гакая = Clt/Гакая ;
LIST Clt/Add = Clt/Add ; # Гак
LIST Clt/Cop = Clt/Cop ;

#!! * ### Derivation tags

LIST Der/PassL = Der/PassL ;
LIST Der/NomAg = Der/NomAg ;
LIST Der/NomAct = Der/NomAct ;
LIST Der/Ozj = Der/Ozj ;
LIST Actor = NomAg Der/NomAg ;
LIST VAbess = VAbess ;
LIST ActPrcShort = ActPrcShort ;


LIST Der/ВтОмО = Der/ВтОмО ;
LIST Der/шка = Der/шка ;
LIST Der/Онь = Der/Онь ;
LIST Der/ай = Der/ай ;
LIST Der/кай = Der/кай ;
LIST Der/Y = Der/Y ;
LIST Der/Yj = Der/Yj ;
LIST Der/Ycja = Der/Ycja ;
LIST Der/стО = Der/стО ;
LIST Der/OvOms = Der/OvOms ; #Der/ОвОмс 
LIST Der/OvtOms = Der/OvtOms ; #Der/ОвтОмс
LIST Der/ОвтОмс = Der/ОвтОмс ;
LIST Der/Cond = Der/Cond ;
LIST Der/Dimin = Der/Dimin ;

LIST Der = Der ;
LIST Der/MWN = Der/MWN (der subst) ;
LIST Der/Dem = Der/Dem ;
LIST Der/Pr = Der/Pr ;


LIST Err/Orth = Err/Orth Err/Orth-no-linking-vowel ;

#!! ### Semantic tags


LIST Sur = Sur ;
LIST Sem/Sur = Sem/Sur ;
LIST Sem/Fem = Sem/Fem ;
LIST Sem/Mal = Sem/Mal ;

LIST Sem/Ant = Sem/Ant ;
LIST ANT = Sem/Ant Sem/Ant_Fem Sem/Ant_Mal ;
LIST SUR = Sem/Sur_Mal Sem/Sur_Fem ;
LIST Ani = Ani Sem/Kin Hum Fem Mal Sur ;
LIST Fem = Fem ;
LIST Mal = Mal ;

LIST Obj = Obj ;
LIST Org = Org ;
LIST Plc = Plc ;

LIST Time = Time ;
LIST Temp = Temp ;
LIST Hum = Hum ;
LIST Date = Date ;

LIST Hom1 = Hom1 ;
LIST Hom2 = Hom2 ;
LIST Hom3 = Hom3 ;
LIST Hom4 = Hom4 ;


#!! ###  Syntactic tags

LIST @+FAUXV = @+FAUXV ;	         #!! * @+FAUXV : finite auxiliary verb 
									 #!!     - ferte: Son ferte oaidnit ollislaš gova. - She must see the whole picture.
LIST @+FMAINV = @+FMAINV ;	         #!! * @+FMAINV : finite main verb
									 #!!     - oaidná: Son oaidná ollislaš gova. - She sees the whole picture	
LIST @-FAUXV = @-FAUXV ;	         #!! * @-FAUXV : infinite auxiliary verb
									 #!!     - sáhte: In sáhte gáhku borrat. - I cannot eat cake.	
LIST @-FMAINV = @-FMAINV ;	         #!! * @-FMAINV : infinite main verb
									 #!!     - oaidnit: Son ferte oaidnit ollislaš gova. - She must see the whole picture.
LIST @-FSUBJ> = @-FSUBJ> ;	         #!! * @-FSUBJ> : Subject of infinite verb outside the verbal.
									 #!!     - mu: Diet dáhpáhuvai mu dieđikeahttá. - It happened without me knowing about it.
LIST @-F<OBJ = @-F<OBJ ;	         #!! * @-F<OBJ : Subject of infinite verb outside the verbal.
									 #!!     - nuppi: Ulbmil lea oažžut nuppi boagustit. - The goal is to get the other one to laugh.
LIST @-FOBJ> = @-FOBJ> ;	         #!! * @-FOBJ> : Object of infinite verb outside the verbal.
									 #!!     - váldovuoittuid: Sii vurde váldovuoittuid fasket. - They waited to grab the main prizes.
LIST @SPRED<OBJ = @SPRED<OBJ ;       #!! * @-FSPRED<OBJ
LIST @-F<ADVL = @-F<ADVL ;	         #!! * @-F<ADVL
LIST @-FADVL> = @-FADVL> ;	         #!! * @-FADVL>
LIST @-F<SPRED = @-F<SPRED ;         #!! * @-F<SPRED
LIST @-F<OPRED = @-F<OPRED ;         #!! * @-F<OPRED
LIST @-FSPRED> = @-FSPRED> ;         #!! * @-FSPRED>
LIST @-FOPRED> = @-FOPRED> ;         #!! * @-FOPRED>
LIST @>ADVL = @>ADVL ;               #!! * @>ADVL
LIST @ADVL< = @ADVL< ;               #!! * @ADVL<
LIST @<ADVL = @<ADVL ;               #!! * @<ADVL
LIST @ADVL> = @ADVL> ;               #!! * @ADVL>
LIST @>N = @>N ;		      #!! * @>N
LIST @Interj = @Interj ;    #!! * @Interj
LIST @N< = @N< ;		      #!! * @N<
LIST @>A = @>A ;		      #!! * @>A
LIST @P< = @P< ;		      #!! * @P<
LIST @>P = @>P ;		      #!! * @>P
LIST @HNOUN = @HNOUN ;	      #!! * @HNOUN
LIST @INTERJ = @INTERJ ;      #!! * @INTERJ
LIST @>Num = @>Num;		      #!! * @>Num
LIST @Pron< = @Pron< ;	      #!! * @Pron<
LIST @>Pron = @>Pron ;	      #!! * @>Pron
LIST @Num< = @Num< ;	      #!! * @Num<
LIST @OBJ = @OBJ ;			  #!! * @OBJ
LIST @<OBJ = @<OBJ ;		  #!! * @<OBJ
LIST @OBJ> = @OBJ> ;		  #!! * @OBJ>
LIST @OPRED = @OPRED ;		  #!! * @OPRED
LIST @<OPRED = @<OPRED ;	  #!! * @<OPRED
LIST @OPRED> = @OPRED> ;	  #!! * @OPRED>
LIST @PCLE = @PCLE ;		  #!! * @PCLE
LIST @COMP-CS< = @COMP-CS< ;  #!! * @COMP-CS<
LIST @SPRED = @SPRED ;		  #!! * @SPRED
LIST @<SPRED = @<SPRED ;	  #!! * @<SPRED
LIST @SPRED> = @SPRED> ;	  #!! * @SPRED>
LIST @SUBJ = @SUBJ ;		  #!! * @SUBJ
LIST @<SUBJ = @<SUBJ ;		  #!! * @<SUBJ
LIST @SUBJ> = @SUBJ> ;		  #!! * @SUBJ>
LIST @PPRED = @PPRED ;        #!! * @PPRED
LIST @APP = @APP ;			   #!! * @APP
LIST @APP-N< = @APP-N< ;	   #!! * @APP-N<
LIST @APP-Pron< = @APP-Pron< ; #!! * @APP-Pron<
LIST @APP>Pron = @APP>Pron ;   #!! * @APP>Pron
LIST @APP-Num< = @APP-Num< ;   #!! * @APP-Num<
LIST @APP-ADVL< = @APP-ADVL< ; #!! * @APP-ADVL<
LIST @VOC = @VOC ;			   #!! * @VOC : Vocative
							   #!!     - Miss Turner : Bures boahtin deike, Miss Turner! - Welcome here, Miss Turner!
LIST @CVP = @CVP ;			   #!! * @CVP : Conjunction or subjunction that conjoins finite verb phrases.
							   #!!     - go : Leago guhkes áigi dassá go Máreha oidnet? - Is it a long time since you saw Máret?
LIST @CNP = @CNP ;			   #!! * @CNP : Local conjunction or subjunction.
							   #!!     - vai : Leago nieida vai bárdni? - Is it a girl or a boy?
LIST @X = @X ;    			   #!! * @X : unknown
LIST ADVL = @ADVL @ADVL> @ADVL< @<ADVL @>ADVL @-F<ADVL @-FADVL> ;  
SET SUBJ = @<SUBJ OR @SUBJ> OR @SUBJ ;
SET SPRED = @<SPRED OR @SPRED> OR @SPRED ;
SET OPRED = @<OPRED OR @OPRED> OR @OPRED ;
SET FOBJ = @-F<OBJ OR @-FOBJ> ; 
SET FMAINV = @-FMAINV OR @+FMAINV ;
SET FAUXV = @-FAUXV OR @+FAUXV ;
SET OBJ = (@<OBJ) OR (@OBJ>) OR (@OBJ) OR (@-F<OBJ) OR (@-FOBJ>) ;
LIST <OBJ = @-F<OBJ @<OBJ ;    
LIST OBJ> = @OBJ> @-FOBJ> ;    
SET <OBJ-OTHERS = <OBJ OR (Gen) OR (Nom) OR (Ess) OR (Loc) OR (Adv) ;
SET OBJ>-OTHERS = OBJ> OR (Gen) OR (Nom) OR (Ess) OR (Loc) OR (Adv) ;
SET NOT-FAUXV = FMAINV OR OBJ + V OR ADVL + V ;
# Works after the mapping rules for verbs.
SET SYN-V = FMAINV OR FAUXV OR V + SUBJ OR OBJ + V OR ADVL + V OR (V @>N) OR (V @N<) OR (V @A<) ;

LIST WORDLEMMA = (".*"r) ;

# Where does this go 2021-09-16
#!! Upper and lower case
LIST Upper = "<[А-ЯЁ][а-яё]*>"r ;
LIST Lower = "<[а-яё]+>"r ;

# ========
  SETS
# ========

#!! ## Sets containing sets of lists and tags

#!! This part of the file lists a large number of sets based partly upon the tags defined above, and 
#!! partly upon lexemes drawn from the lexicon.
#!! See the sourcefile itself to inspect the sets, what follows here is an overview of the set types.

#!! ### Sets for Single-word sets

#!! the set INITIAL for initial letters 
LIST INITIAL = "а" "б" "в" "г" "д" "е" "ё" "ж" "з" "и" "й" "к" "л"
        "м" "н" "о" "п" "р" "с" "т" "у" "ф" "х" "ц" "ч" "ш"
        "щ" "ъ" "ы" "ь" "э" "ю" "я" ; #!! INITIAL


#!! ### Sets for word or not

SET WORD = N | V | A | Po | Pron | Adv | CC | CS | Interj | Num | ("\?") ;


#!! ### Derivational affixes

#LIST Der/Pass = Der/PassL Der/PassS ;


#!! ### Case sets
# ---------

SET ADVLCASE = Abl OR Ela OR Ill OR Ine OR Loc OR Prl OR Temp ; #!! ADLVCASE

LIST CASE = Nom Gen Abl Dat Com Ine Ill Ela Tra Abe Prl Loc Lat Cmpr ;
SET OBLCASE = CASE - Nom ;



#!! ### Verb sets
# ---------

# Verbs and their complements
# - - - - - - - - - - - - - -

SET NOT-V = WORD - V ; #!! NOT-V

#!! ### Sets for finiteness and mood
# - - - - - - - - - -

SET MOOD-V = Cond OR Conj OR CondConj OR Des OR Imprt OR Ind OR Opt OR Prec  ; #!! MOOD-V

SET VFIN =  MOOD-V - ConNeg ; #!! VFIN
#LIST VFIN = Prs Prt1 Prt2 Cond Conj CondConj Des Imprt Opt  ; 

SET VFIN-POS = MOOD-V - ConNeg - Neg ; #!! VFIN-POS

SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - Neg ;
  # this might be to strict, besides, "iige" can be written "ii ge"

SET NOT-PRFPRC = WORD - PrfPrc ;


#!! ### Sets for person
# - - - - 

LIST SG1-V = (V Ind Prs ScSg1)  (V Ind Prt1 ScSg1) (V Ind Prt2 ScSg1)
             (V Cond Prs ScSg1) (V Cond Prt1 ScSg1) (V Cond Prt2 ScSg1)
             (V Conj ScSg1) (V CondConj ScSg1) (V Des ScSg1) (V Opt ScSg1)
             (V Aux Neg Ind Prt1 ScSg1) (V Aux Neg Ind Prt2 ScSg1)
             (V Aux Neg Conj ScSg1);

LIST SG2-V =  (V Ind Prs ScSg2)  (V Ind Prt1 ScSg2) (V Ind Prt2 ScSg2)
             (V Cond Prs ScSg2) (V Cond Prt1 ScSg2) (V Cond Prt2 ScSg2)
             (V Conj ScSg2) (V CondConj ScSg2) (V Des ScSg2) (V Opt ScSg2)
             (V Aux Neg Ind Prt1 ScSg2) (V Aux Neg Ind Prt2 ScSg2)
             (V Aux Neg Conj ScSg2);

LIST SG3-V =  (V Ind Prs ScSg3)  (V Ind Prt1 ScSg3) (V Ind Prt2 ScSg3)
             (V Cond Prs ScSg3) (V Cond Prt1 ScSg3) (V Cond Prt2 ScSg3)
             (V Conj ScSg3) (V CondConj ScSg3) (V Des ScSg3) (V Opt ScSg3)
             (V Aux Neg Ind Prt1 ScSg3) (V Aux Neg Ind Prt2 ScSg3)
             (V Aux Neg Conj ScSg3);

LIST PL1-V = (V Ind Prs ScPl1)  (V Ind Prt1 ScPl1) (V Ind Prt2 ScPl1)
             (V Cond Prs ScPl1) (V Cond Prt1 ScPl1) (V Cond Prt2 ScPl1)
             (V Conj ScPl1) (V CondConj ScPl1) (V Des ScPl1) (V Opt ScPl1)
             (V Aux Neg Ind Prt1 ScPl1) (V Aux Neg Ind Prt2 ScPl1)
             (V Aux Neg Conj ScPl1);

LIST PL2-V =  (V Ind Prs ScPl2)  (V Ind Prt1 ScPl2) (V Ind Prt2 ScPl2)
             (V Cond Prs ScPl2) (V Cond Prt1 ScPl2) (V Cond Prt2 ScPl2)
             (V Conj ScPl2) (V CondConj ScPl2) (V Des ScPl2) (V Opt ScPl2)
             (V Aux Neg Ind Prt1 ScPl2) (V Aux Neg Ind Prt2 ScPl2)
             (V Aux Neg Conj ScPl2);

LIST PL3-V =  (V Ind Prs ScPl3)  (V Ind Prt1 ScPl3) (V Ind Prt2 ScPl3)
             (V Cond Prs ScPl3) (V Cond Prt1 ScPl3) (V Cond Prt2 ScPl3)
             (V Conj ScPl3) (V CondConj ScPl3) (V Des ScPl3) (V Opt ScPl3)
             (V Aux Neg Ind Prt1 ScPl3) (V Aux Neg Ind Prt2 ScPl3)
             (V Aux Neg Conj ScPl3);


 # Note that imperative verbs are not included in these sets!

# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
SET V-SG = SG1-V OR SG2-V OR SG3-V ;
SET V-PL = PL1-V OR PL2-V OR PL3-V ;

SET V-NOT-SG1 = VFIN-NOT-IMP - SG1-V ;
SET V-NOT-SG2 = VFIN-NOT-IMP - SG2-V ;
SET V-NOT-SG3 = VFIN-NOT-IMP - SG3-V ;
SET V-NOT-PL1 = VFIN-NOT-IMP - PL1-V ;
SET V-NOT-PL2 = VFIN-NOT-IMP - PL2-V ;
SET V-NOT-PL3 = VFIN-NOT-IMP - PL3-V ;

SET V-1-2 = SG1-V OR SG2-V OR PL1-V OR PL2-V ;
SET V-3  = SG3-V OR PL3-V ;

# Sets consisting of LEAT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


# We can define sets for common tag clusters
LIST Case = (n sg) (n pl) ; # A set that matches either a Noun Singular or a Noun Plural


LIST SCONJ = ScSg1 ScSg2 ScSg3 ScPl1 ScPl2 ScPl3 ;
LIST OCONJ = OcSg1 OcSg2 OcSg3 OcPl1 OcPl2 OcPl3 ;


#!! ### Pronoun sets
# ------------

LIST MON = (Pron Pers Sg1 Nom);
LIST TON = (Pron Pers Sg2 Nom);
LIST SON = ("сон" Pron Pers Sg3 Nom);
LIST MINJ = (Pron Pers Pl1 Nom);
LIST TINJ = (Pron Pers Pl2 Nom);
LIST SINJ = ("сон" Pron Pers Pl3 Nom);

SET PPRON-NOM-NOT-DAT = MON OR TON OR SON OR MINJ OR TINJ OR SINJ ;

SET PPRON-NOT-DAT = (Pron Pers) - ("dat") ;

SET PPRON-PL = MINJ OR TINJ OR SINJ ;

SET PPRON-NOT-SINJ = MON OR TON OR SON OR MINJ OR TINJ ;

LIST PPRON-GEN = (Sg1 Gen) (Sg2 Gen) (Sg3 Gen)
        (Pl1 Gen) (Pl2 Gen) (Pl3 Gen);

SET PPRON-NOT-GEN = (Pron Pers) - PPRON-GEN ;

LIST DEM-SG = (Pron Dem Sg Nom);
LIST DEM-PL = (Pron Dem Pl Nom);
SET NOT-DEM = WORD - Dem ;

LIST SGPRON = (Pron Sg1) (Pron Sg2) (Pron Sg3) (Pron Sg) (Pron PxSg1) (Pron PxSg2) (Pron PxSg3);
LIST PLPRON = (Pron Pl1) (Pron Pl2) (Pron Pl3) (Pron Pl) (Pron PxPl1) (Pron PxPl2) (Pron PxPl3);



LIST NUM = Sg Pl SP ;

#LIST Indef = Indef ; already exists

LIST PXPERSON = PxSg1 PxSg2 PxSg3 PxPl1 PxPl2 PxPl3 ; 

LIST PXPERSONNOMGEN = PxSg1 PxSg2 PxPl1 PxPl2 PxPl3 ;

LIST ADPWITHPX = (Adp CASE PXPERSON) ;

SET PXPERSONGEN = Gen + PXPERSON ;

SET ADPNOPX = Adp - ADPWITHPX ;




LIST SCPERSON = ScSg1 ScSg2 ScSg3 ScPl1 ScPl2 ScPl3 ;

LIST SCPERSON12 = ScSg1 ScSg2 ScPl1 ScPl2 ;

LIST PERSON = Sg1 Sg2 Sg3 Pl1 Pl2 Pl3 ;



LIST <vdic> = <vdic> ;



LIST KUROK = "курок" ;
LIST MARTO = "марто" ;
LIST PESHKSE = "пешксе" ;
LIST SEDE = "седе" ;
LIST CARDNUM = "вейке" "кавто" "колмо" "ниле" "вете" "кото" ;
LIST PERSPRONSG = "мон" "тон" "сон" "монсь" "тонсь" "сонсь" ;
LIST PERSPRONPL = "минь" "тынь" "сынь" "минсь" "тынсь" "сынсь" ;
LIST ULEMS = "улемс" ;
LIST ULYNEMS = "ульнемс" ;
LIST JALGA = "ялга" ;
LIST JAKAMS = "молемс" "якамс" ;
LIST NONCOUNT = "кекше" "сод" "сода"  ;
LIST RELATORSNomGen =  "бока" "бокасо" "бокас" "бокасто" "ваксс" "вакссо" "вакссто" "вакска"  "ланга" "ланго" "лангс" "лангсо" "лангсто" "маласо" "малас" "маласто" "малава" "чире" "чирева" "чирес" "чиресэ" "чирестэ"  ;
LIST NONSENSESURANT = "Ней" ;
LIST NONLATIVENOUN = "аржо" "ал" "буря" "ваз" "вал" "варма" "ваце" "ведь" "верь" "вий" "давол" "зыян" "ёрок" "каворькс" "кажо" "кал" "качамо" "кев" "кедьал" "кеж" "кель" "кеска" "кикс" "конь" "кошт" "кудря" "куя" "левкс" "лекш" "лем" "ливезь" "лов" "ловажа" "ловсо" "лом" "лопа" "макшо" "медь" "морго" "нарде" "нолго" "норо" "нузякс" "нула" "нулготькс" "нулко" "нупонь" "ой" "орга" "панкс" "пежеть" "пиземе" "питне" "пона" "поп" "пуль" "ризкс" "роса" "рудаз" "сакал" "сакало" "сал" "сан" "сардо" "сельведь" "сёвонь" "сёлмо" "сёрма" "сий" "сильге" "сильдей" "сод" "солдат" "сув" "сукс" "сэкс" "сэпе" "сярдо" "таз" "тарькс" "терьге" "теште" "тикше" "толга" "топо" "туман" "ундо" "цеця" "часия" "чекерь" "чемень" "чечена" "чине" "числа" "чов" "чувар" "эй" "яд" "Як" "ярмак" ; #!! This will be expanded for homonymy at first

LIST TEMPORALNOUN = "буря" "валдо" "валске" "варма" "ве" "давол" "ёндол" "ие" "истямо" "кизэ" "ков" "минута" "пиземе" "пизем" "пинге" "погода" "пора" "пси" "раз" "рудаз" "сув" "тундо" "чадыведь" "чи" "чопода" "шка" "якшам" "якшамо" ; #!! This will be expanded for homonymy at first, i.e., diminutives
SET NOT-TEMPORALNOUN = N - TEMPORALNOUN  ;

LIST NOTFIRSTSECONDCOPULA = "вал" "кандо" "кем" "коз" "кундо" "лов" "максо" "ниле" "пандо" "пона" "ранг" "сал" ; #!!This will be expanded for homonymy at first. This is not a final solution 

LIST ADDAMBPRONS = "кодамо" ; #!!pronouns that do not take addetive particle, as these are indefinite pronouns, e.g., кодамояк

LIST VAMBNOUNS = "каса" "кекше" "код" "сод" ; #!!nouns highly unlikely to take Sg1 Sg2 copula

LIST VERBWITHMO = "арсемс" "кармамс" "лоткамс" "маштомс" "мадемс" "озамс" "пульзямс" "самс" "туемс" "якамс" ; #!!озамс ярсамо Distinguish from Der/NomAct

LIST VERBWITHMODS = "кучомс" "озавтомс" "тердемс" ; #!!озавтомс ярсамо Distinguish	from Der/NomAct

LIST ANCOLORS = "ашо" "пиже" "сэнь" "тюжа" "якстере" ;

LIST KINTERM = "ава" "тетя" ;

LIST ADJTAKESMAMOABL = "бойка" ;
LIST NOUNTAKESABL = "ёвкс" "куля" "мель" "приказ" "тема" "указания" "чумо" "эпизод" ; #пленс понгомадо мельтне
LIST IVERBTAKESABL = "абунгадомс" "авардемс" "ландявомс" "олякстомтомс" "пелемс" "пешкедемс" "покордавомс" "ракамс" "рангомс" "сыргоземс" "таргоземс";
LIST VERBTAKESABL = "арсемс" "бредямс" "ванстомс" "видькстамс" "визделгадомс" "виздемс" "ёвтнемс" "кортамс" "кортнемс" "ледстнемс" "ледстямс" "ловномс" "марсемс" "марямс" "меремс" "мернемс" "пачтнемс" "пачтямс" "сёрмадомс" "содамс" "толковамс" "энялдомс" ; 
LIST VERBTAKESMAMOABL = "лоткамс" "лотксемс" "удаламс" ;

LIST VERBTAKESDATILL = "радовамс" ;

SET NOT-KINTERM = N - KINTERM ; #!! used with Dat PxSg1


LIST APAK = "апак" ;

#LIST EZJ = "эзь" ;
LIST EZJ = "а" ;

#2013-05-22

# Phrasal groups
# --------------


LIST OBLNMN = Abe Abl Cau Com Cmpr Dat Gen Lat Loc Prl Temp Tra ;

LIST NMNNB = Sg Pl SP ;

# Sets
# ====

SET PL-SUBJ-INDEF = (Pl Nom Indef);
SET PL-SUBJ-DEF = (Pl Nom Def);
SET PL-SUBJ-PX =  (Pl Nom PxSg1) OR (Pl Nom PxSg2) OR (Pl Nom PxSg3) OR (Pl Nom PxPl1) OR (Pl Nom PxPl2) OR (Pl Nom PxSg3) ; # forms that can be subject with possessive marking
SET PL-SUBJ = PL-SUBJ-INDEF OR PL-SUBJ-DEF OR PL-SUBJ-PX ;


#!! ### Derivation tags
LIST 2VDerTag = Der/njems Der/немс Der/OvtOms ; #!! 2VDerTag
LIST 2NDerTag = Der/кс ; #!! 2NDerTag
LIST DerGenAttr = Der/GenAttr ;

LIST DerTag = Der/MWN Der/njems Der/немс Der/Y ; #!! DerTag

LIST ShortPrsPrc = Der/Y Der/Yj ;

# Noun sets


# Adjective sets

# Nominal sets



########################                  #########################
########################                  #########################
                        # disambiguation #
########################                  #########################
########################                  #########################

SECTION

SUBSTITUTE (Hom1) (*) TARGET (*) ;
SUBSTITUTE (Hom2) (*) TARGET (*) ;
SUBSTITUTE (Hom3) (*) TARGET (*) ;
SUBSTITUTE (Hom4) (*) TARGET (*) ;
#
SUBSTITUTE (Sem/Kin) (*) TARGET (*) ;
SUBSTITUTE (Sem/Sur) (*) TARGET (*) ;
SUBSTITUTE (Sem/Mal) (*) TARGET (*) ;
SUBSTITUTE (Sem/Fem) (*) TARGET (*) ;
SUBSTITUTE (Sem/Plc) (*) TARGET (*) ;
#
SUBSTITUTE (IV) (*) TARGET (*) ;
SUBSTITUTE (TV) (*) TARGET (*) ;
#


REMOVE Err/Orth ; # If any other reading is possible.

REMOVE:NoNonsenseName Prop IF (0 NONSENSESURANT) ; 

#ЛЕНИН
REMOVE:NoAcrIfProp ACR IF (0 N + Prop) ;

REMOVE TV IF (0 ("меремс"))(NOT 0 OCONJ) ;

REMOVE:IndefLookalike ADDAMBPRONS IF (0  Clt/Add) ;

# иляка ветя
REMOVE:LeaveImpOrPrecNeg ("илямс") IF (0 Aux + Neg) (1 ConNeg) ;

# пельнеть
REMOVE Der/Dimin (0C N ) ;

# тетянзо-аванзо THIS is not working 2019-11-25
#REMOVE Cmp (0C N ) ;

REMOVE:notShortDatFirst Pers IF (-1 BOS) (0 ("мон"));

# short participles should be written with the following noun? new orthographic practice 1993
#REMOVE:RemoveShortPrc Der/Y (0 VFIN) ;
REMOVE:RemoveShortPrc ShortPrsPrc (0 VFIN) ;

# псакась совась кудос
# this may be too powerful
REMOVE:NoSova N IF (NOT -1* VFIN BARRIER BOS) (0 ("совамс")) (NOT 1* VFIN BARRIER EOS) ;

#Ракасть кавто мирде мартонть лангсо,... the one with two husbands
REMOVE Der/MWN (0C Num OR Ine + Def) ; # 2017-10-25
REMOVE:NoNSgNomIndefIfAdvTemp Der/MWN IF (0 Adv + Temp) ; # 2017-10-25

REMOVE:NumIter Num + Iter IF (0 Adv + Iter) ;

#Сёлминензэ кадовсть панжадо.
REMOVE Gen IF (NOT -1* PL-SUBJ BARRIER BOS) (0 PL-SUBJ-PX) (1* ScPl3 BARRIER EOS)
       	      	       	       (NOT 1* PL-SUBJ BARRIER EOS)
			       (NOT 1 Der/Ozj + Ger);
# 
#REMOVE Der/ОвОмс (0C V) ;
REMOVE Der/OvOms (0C V) ;

# кортавтома
REMOVE Der/OvtOms (0C V) ;


# Pair disambiguation

# Телень ве (стихть)
REMOVE:veNumIfNextNotN Num IF (0 ("ве")) (NOT 1 N);


# пачкодинек Бланка леенть трокс ютамо
REMOVE:troksNIfPo N IF (0 ("трокс")) (-1 Gen);

# эль-эль усксть стака крандазонть
REMOVE:stamsIfStaka ("стамс") IF (0 ("стака")) ((-1* VFIN BARRIER BOS) OR (1* VFIN BARRIER EOS));

#Лиясто кевкстнить эйсэнь.
REMOVE 2VDerTag (0 V) ; #2017-11-05

#мон сынь эсь ёжос
REMOVE:Pl3persWhenSg1Pron Pron + Pers + Pl3 + Nom IF (0 ("самс")) ((-1* Pron + Pers + Sg1 + Nom BARRIER BOS) OR (1* Pron + Pers + Sg1 + Nom BARRIER EOS));

#Сынь пурнасть урьвакстомо-венчамо.
#(NOT -1* VFIN BARRIER EOS);
#REMOVE:verbPrt1Sg1Sams Prt1 IF (0 Pron + Pers + Pl3 + Nom)(0 ("самс")) ((-1* ScPl3 BARRIER BOS) OR (1* ScPl3 BARRIER EOS));
SELECT:PronPl3Nom Pron IF (0 Pron + Pers + Pl3 + Nom) ((-1* ScPl3 BARRIER BOS) OR (1* ScPl3 BARRIER EOS));

# сынь пек вечкить налксемс
REMOVE:verbScSg2IfSubjPl3PronAvailable ScSg2 IF (0 V + BV + Ind + Prs + ScPl3)((-1* Pron + Pers + Pl3 + Nom BARRIER BOS) OR (1* Pron + Pers + Pl3 + Nom BARRIER EOS)) ;

# Ломанень кевкстеманзо свал лиядыть апак пандо, зярдо кортыть киска марто!
REMOVE:verbScSg2IfSubjPlAvailable Gen + PXPERSON IF (0C Nom + PXPERSON) ((-1* V + IV + Ind + Prs + ScPl3 BARRIER BOS) OR (1* V + IV + Ind + Prs + ScPl3 BARRIER EOS));
REMOVE:verbScSg2IfSubjPlAvailable ScSg2 IF (0C V + BV + Ind + Prs + ScPl3) ((-1* N + Pl + Nom BARRIER BOS) OR (1* N + Pl + Nom BARRIER EOS));

# Чоледить нармунть тусто чувттнэнь прява,...
# но минектне кундымизь прамсто...
REMOVE:verbScSg2IfSubjPlIndef ScSg2 IF (0 ScPl3) ((-1* Pl + Nom + Indef BARRIER BOS) OR (-1* Pl + Nom + Def BARRIER BOS) OR  (1* Pl + Nom + Indef BARRIER EOS) OR (1* Pl + Nom + Def BARRIER EOS));
#REMOVE:verbScSg2IfSubjPlIndef Prt1 + ScSg2 IF (0 Prs + ScPl3) ((-1* N + Pl + Nom + Indef BARRIER BOS) OR (1* N + Pl + Nom + Indef BARRIER EOS))
#                              (NOT (-1* VFIN BARRIER BOS) OR (1* VFIN BARRIER EOS));

# ловонть ланга
REMOVE:lanIfPo ("лан") IF (0 N + Relator + Prl) ((-1 Gen + Def) OR (-1 Sg + Nom + Indef));

# тень лангс
REMOVE:pronPersSg1Dat Pers IF (0 Pron + Dem + Sg + Gen)(1 Adp);

# мон кодан
REMOVE:NotVAmbNounsIFVerb Clt/Cop IF (0C ScSg1 OR ScSg2) (0 VAMBNOUNS) ;

#ёнкссонть
REMOVE 2NDerTag (0C N) ; #2017-11-05

#Кода пангт эли нормальть?
REMOVE ConNeg (-1 BOS) ;

#Лездасть тень сёрмадомо аволь ансяк умонь читне.
REMOVE Aux + Neg + Conj IF (0 Pcle + Neg) (NOT 1 ConNeg) ;

# Пургине паздонть апак пеле
SELECT ConNeg (-1 APAK) ;

#Кува?
REMOVE Rel IF (1 QUEST) ;
#«Ков сыргить?»
REMOVE Rel IF (0 Upper) (NOT 0 Prop) ;

#изнявкстнэ, конатнень теинзе
REMOVE Interr IF (-1 PUNCT)(0 Rel);

#Эйкакшонь масторга.
REMOVE DerGenAttr IF (0 N + SP + Gen) ;

# рестань сывель 
REMOVE:VGenIfNoSubsequentN VGen IF (NOT 1 N) ;

#Ды те истя улияк.

## Nouns

#Vocative
SELECT:VocComrade N + Pl + Nom + Indef (0 JALGA) (-2 BOS) (-1 PUNCT) (1 CLB) ;

# поладыцякс < поладомс from verb
SELECT:NoReadyNomAg0 Der/Ycja IF (0 N + NomAg) ;

#REMOVE PxSg1 IF (0 SP + Dat + Indef) (0 ANT OR SUR) ;
REMOVE:NoPxWhenNotKin PxSg1 IF (0 SP + Dat + Indef OR  SP + Gen + Indef ) (0 NOT-KINTERM) ;

#Genitive readings

#Микол таргизе кисетэнзэ.
#REMOVE Nom (*-1C Nom) (0 Gen) ; too powerful

#Prolative
#^кудованть/кудо<n><sg><prl><def>/кудо<n><sp><prl><ind><der><subst><sg><gen><def>
REMOVE Prl + Indef + Der + Der/MWN IF (0 Sg + Prl + Def) ((-1* ("якамс") BARRIER BOS) OR (1* ("якамс") BARRIER EOS)) ;

#цёрась якась кудованть
REMOVE  SP + Prl + Indef  IF (0 Sg + Prl + Def);

#  Истя Марянь кевкстемазо лияды апак пандо.
REMOVE Der/NomAct IF (0C N)(0 Nom)(0 PXPERSON) ;

# весемеде мазый
# пек кельмель
REMOVE:NoNIfAwithPreviousSuperl N ((-1 Superl) OR (-1 ("пек"))) (0 A);

SELECT:DegIfNextAdv Deg IF (0 ("пек")) (1 (A) OR (Adv)) ;

# сынь пек вечкить налксемс
REMOVE:NoDegIfNextVerb Deg IF (0 Adv) (1 V) ;


# весемеде мазый
REMOVE:NoPronIfSuperlwithFollowingA Pron (0 ("весемеде")) (1 A OR Adv);

# Исяк тень таркас пек кельмель!
#"<тень>"      "мон" Pron Pers Sg1 Dat Short  VS  "те" Det Dem Sg Gen Indef
#REMOVE Sg1 IF (0 Dem) (1 ("таркас"));

#Молян верев.
REMOVE:NotLat NONLATIVENOUN (0  N + SP + Lat) ;

# Сон паро мельсэ муевлизе Ванянь.
#  ташто кудосо
REMOVE:NoIndefNomSgNIfNextOblN N IF (0 A + Sg + Nom + Indef) (1 OBLNMN) ; # Too powerful? 2020-03-31
#REMOVE N IF (0 A + Sg + Nom + Indef) (1 N) ; # Too powerful? 2020-03-31

# verb finite form
#кискатне аштить ташто кудосо.
#ташто кудосонть аштить кискатне.
REMOVE:NotScSg2WhenDefNomPl ScSg2 IF (0 V + IV + Ind + Prs + ScPl3) ((-1* N + Pl + Nom + Def) OR (1* N + Pl + Nom + Def)) ;

#
REMOVE:NotTemp TempCx (0 N + Sg + Nom + Indef OR N + Pl + Nom + Def) (0 NOT-TEMPORALNOUN) ;

#Ранган
REMOVE:NotCop12Pers NOTFIRSTSECONDCOPULA (0 Ind + Prs + SCPERSON12 OR Ind + Prt2 + SCPERSON12 ) ;

#валдодо пешксе
REMOVE:NotAWhenNFollowedByPeshkse A IF (0 N) (0 Abl) (1 PESHKSE) ;


## Numerals

# "кавто" Num AssocColl PxPl3
REMOVE CARDNUM (0 AssocColl ) ;


## Adjectives
# ковгак
REMOVE:NotAdvInterrIfAdvIndef Adv + Interr IF (0 Adv + Indef ) ;

# седе мазы, седе мазыстэ
REMOVE:NotCompN N (-1 SEDE ) ;

#Цёрась сон а берянь.
REMOVE:NotAttrAtEOS Attr (1 EOS) ;

# If there is a conjunction followed by a certain cohort of the same CASE as me, choose me.
SELECT $$Case IF (1 CC LINK 1C $$Case) ;

# hmm, this needs some work
# умаринась ды атямаресь
# NOT WORKING 2017-11-08REMOVE:NotPcleWhenLeftAndRightSameForm Pcle IF (-1 N + $$CASE) (0 ("ды")) (1 N + $$CASE);

# Verbs
# Кудонть потс кадовсть ансяк
REMOVE Der/OvOms IF (0 V + IV) ;

# улить
REMOVE Prt1 IF (0 ULEMS) ; 

# ульнить
REMOVE Prs IF (0 ULYNEMS) ; 

# тынь эзимизь кадо
SELECT ScPl2 IF (-1 Pron + Pers + Pl2 + Nom) (0 V) ;

# эзинь прядо
SELECT ConNeg IF (-1 Aux + Neg OR Aux + Proh ) ;

# Минь пурнатано вий.
REMOVE ConNeg IF (NOT -1 Aux + Neg OR Aux + Proh ) ;

# якамонзо якизе
#REMOVE TV IF (0 JAKAMS) ((NOT *-1) OR (NOT *1  )) ;

# иля сёвно
#Кода понгсь минь сынст ней а виднесынек.
# — Кияк эзь учне тень.
#Problem: Ваня марто Марят садпиресэть.
#REMOVE Clt/Cop ((-1 Aux + Proh) OR (*-1 VFIN BARRIER CLB OR HYPHEN) OR (*1 VFIN BARRIER CLB OR HYPHEN) OR (0  Prs + ScSg3)) ;

#REMOVE Clt/Cop IF (0 ConNeg) (-1 VFIN) ;

# цёра
#REMOVE:NoCopSgNom ScSg3 IF (0 Clt/Cop + Prs) ;

# содан = V not N for 1st and 2nd person
REMOVE:NotNIfVSc1Sc2 NONCOUNT (0 V) (0 SCPERSON12) ;

# невтемстэ
REMOVE Der/ОвтОмс IF (0 V + TV) ;

# озась ярсамо
#SELECT Inf + Loc IF ((-1 VERBWITHMO + VFIN OR VERBWITHMODS + VFIN) OR (1 VERBWITHMO + VFIN OR VERBWITHMODS + VFIN));

#Сторужось лиссь алтарьстэнть, попось кармась обеднянь служамо.
SELECT Inf + Loc IF (-2 VERBWITHMO + VFIN) (-1 N + SP + Gen + Indef) (0 TV) ;

# А кискась, кода содатано, а машты кортамо!
# А кискась, кода содатано,  кортамо машты!
# А кискась, кода содатано,  кортамо а машты!
REMOVE:NoNomActWhenInfLocContext Der/NomAct IF (0 Inf + Loc)(0 Sg + Nom + Indef) ((-1* VERBWITHMO OR VERBWITHMODS BARRIER BOS) OR (1* VERBWITHMO OR VERBWITHMODS BARRIER EOS));
REMOVE:NoNAbsWhenInfLocContext Sg + Nom + Indef IF (0 Inf + Loc) ((-1* VERBWITHMO OR VERBWITHMODS BARRIER BOS) OR (1* VERBWITHMO OR VERBWITHMODS BARRIER EOS)) ;

# А кискась, кода содатано, а машты кортамо!
REMOVE:NoTVIfCauseInfLoc TV IF (0 VERBWITHMO) ((-1*  Inf + Loc BARRIER BOS) OR (1*  Inf + Loc BARRIER EOS)) ;

#молить V TV Der/Y Der/NomAg N Pl Gen PxSg2
REMOVE Der/Y + Der/NomAg IF (0 PXPERSON) ;


#Der/MWN N Sg Gen Def
REMOVE:mwnSgGenDef Der/MWN + N + Sg + Gen + Def IF (0 N + Sg + Ela + Def) ;
# седе курок
REMOVE N IF (0 KUROK) (-1 SEDE) ;

#согласясь мартонзо
REMOVE N IF (0 MARTO) (0 PXPERSON) ;

# марто
REMOVE N + Sg + Nom + Indef IF (0 MARTO) ;

#Ваня марто Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 MARTO) (-2 Prop + Sg + Nom + Indef) ;

#Ваня марто Марят
REMOVE:NoNWMIfAdp Der/MWN IF (0C MARTO)(0 Adp + Der/MWN + Sg + Nom + Indef) ;



#Ванят-Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 HYPHEN) (-2 Prop + Pl + Nom + Indef) ;

# Сестэ Ванят-Марят эзть лисеве ушов налксеме.
SELECT Nom IF (0 Prop + Pl + Nom + Indef) (-1 HYPHEN) (-2 Prop + Pl + Nom + Indef) ((-1* ScPl3 BARRIER EOS) OR (1* ScPl3 BARRIER EOS)) ;
SELECT Nom IF (0 Prop + Pl + Nom + Indef) (-1 MARTO) (-2 Prop + Sg + Nom + Indef) ((-1* ScPl3 BARRIER EOS) OR (1* ScPl3 BARRIER EOS)) ;

#а неиль
#SELECT Pcle + Neg (1 Prs OR Prt2) ;
SELECT V + Aux + Neg (1 Prs OR Prt2 OR Conj OR Des) ;

# мазыйстэ
REMOVE Der/стО IF (0 Adv) ;

#Микол ульнесь
REMOVE Clt/Cop (1 VFIN) ;
REMOVE Clt/Cop (-1 VFIN) ;

#Дёбаень Микол
SELECT Prop + SP + Gen (1C ANT) ;

#REMOVE IV IF (0 OCONJ) ;

# истямо лем ало
#REMOVE Gen IF (0 Nom OR Gen) ; # argh fix!
#SELECT Gen IF (1C Adp) ; # too strong!


#<псаказояк> remove n sg gen pxsg3 if Ani and n sg nom pxsg3
REMOVE Gen IF (0 Ani + Sg + Nom + PxSg3) ;

SELECT Interj IF (0 Upper) (1 Comma) ;

# Select the proper noun reading if the current word can be
# a proper noun or a noun, and if it is in upper case, 
# and the previous word is only in lower case
SELECT Prop IF (0 Prop) (0 Upper) (-1 Lower) ;
SELECT Prop IF (0 Prop) (0 Upper) (-1 Comma) ;

# Истя Марянь..
SELECT Prop IF (0 Prop + Upper) (-1C Adv) ;


# Ваня марто Марят has a correlating conjunction марто
SELECT CC IF (0 CC) (-1 ANT + Sg + Nom ) (1 ANT + Pl + Nom ) ;

# Select the postposition марто when it is preceded by genitive definite 
SELECT Adp IF (0 MARTO) (-1 Gen + Def) (1 CLB) ;

# Remove the nominative reading of possessum with PX if followed by Po
# неизь Эйкакшонть Мария аванзо марто
REMOVE:NoNomPossessumWithFollowingAdp Nom IF (0 PXPERSONGEN) (1 ADPNOPX) ;


# яла икелев
REMOVE:NoSentInitBaseAdp Adp IF (0 Adv) (0 ADPNOPX ) (NOT -1 N OR Pron ) ;

# Иванка прась можот тонь кедеть лангс
REMOVE:RelatorWithNomPx Nom IF (0 PXPERSONNOMGEN) (1 Relator);

# пандо лангсо
REMOVE:NoAblPrecedingLangS Abl IF (0 Nom OR Gen) (1 RELATORSNomGen ) ; 

# пандо лангсо
REMOVE:NoCopPrecedingLangS Clt/Cop IF (0C Nom) (1 RELATORSNomGen ) ;

# Remove der_pr vblex ind prs scsg3 reading if following word is finite verb Careful
# шказо сась
REMOVE Der/Pr IF (1C V + SCPERSON ) ;

# Remove Der/Pr from determiner if following is Sg+Nom+Indef
# аламошка ведне
REMOVE Der/Pr IF (0 Det + Qnt) (1C N + Sg + Nom + Indef ) ;

# Remove ConNeg if following word is finite verb, Careful
# Маря раказевсь
REMOVE ConNeg IF (1C V + SCPERSON ) ;

# actprcshort
REMOVE Der/Y IF (0 SCPERSON) (1 Adv) ;

## Determiners

# remove Determiner
# те аволь сэрей
REMOVE:DetIfPronFollowingNotN Det IF (0 Pron) (NOT 1 N OR A ) ;

## Pronouns

# те цецянть
# REMOVE

# remove plural stems
REMOVE PERSPRONPL IF (0 PERSPRONSG) ;


## Adpositions

# кедьсэнь
REMOVE:PoIfAdp Po IF (0 Adp) ;

# тыньгак каршо а ультядо
REMOVE Adp (-1 Pron + Pers + PERSON + Nom OR VFIN) (0 Adv) ;

# сюконякшнось партизантнэнь каршо
SELECT Adp (-1 N + Pl + Gen OR N + Sg + Gen OR N + Sg + Nom + Indef OR N + SP + Gen OR Pron + Pers + PERSON + Gen OR Pron + Dem + NUM + Gen OR Pron + Interr + NUM + Gen) ;

# васттано тынк марто
REMOVE:NoCopWhenNextAdp Prs (0 Pron + Pers + PERSON + Gen) (1 Adp) ;
