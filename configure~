#! /bin/sh
# From configure.ac Revision.
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.71 for Giella myv 0.2.0.
#
# Report bugs to <feedback@divvun.no>.
#
#
# Copyright (C) 1992-1996, 1998-2017, 2020-2021 Free Software Foundation,
# Inc.
#
#
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi


# Use a proper internal environment variable to ensure we don't fall
  # into an infinite loop, continuously re-executing ourselves.
  if test x"${_as_can_reexec}" != xno && test "x$CONFIG_SHELL" != x; then
    _as_can_reexec=no; export _as_can_reexec;
    # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
  fi
  # We don't want this to propagate to other subprocesses.
          { _as_can_reexec=; unset _as_can_reexec;}
if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="as_nop=:
if test \${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else \$as_nop
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" )
then :

else \$as_nop
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
blah=\$(echo \$(echo blah))
test x\"\$blah\" = xblah || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1"
  if (eval "$as_required") 2>/dev/null
then :
  as_have_required=yes
else $as_nop
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null
then :

else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    as_run=a "$as_shell" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if as_run=a "$as_shell" -c "$as_bourne_compatible""$as_suggested" 2>/dev/null
then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :

else $as_nop
  if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      as_run=a "$SHELL" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi
fi


      if test "x$CONFIG_SHELL" != x
then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno
then :
  printf "%s\n" "$0: This script requires a shell more modern than all"
  printf "%s\n" "$0: the shells that I found on your system."
  if test ${ZSH_VERSION+y} ; then
    printf "%s\n" "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    printf "%s\n" "$0: be upgraded to zsh 4.3.4 or later."
  else
    printf "%s\n" "$0: Please tell bug-autoconf@gnu.org and feedback@divvun.no
$0: about your system, including any error possibly output
$0: before this message. Then install a modern shell, or
$0: manually run the script under such a shell if you do
$0: have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit
# as_fn_nop
# ---------
# Do nothing but, unlike ":", preserve the value of $?.
as_fn_nop ()
{
  return $?
}
as_nop=as_fn_nop

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith

# as_fn_nop
# ---------
# Do nothing but, unlike ":", preserve the value of $?.
as_fn_nop ()
{
  return $?
}
as_nop=as_fn_nop

# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { printf "%s\n" "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'


rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


test -n "$DJDIR" || exec 7<&0 </dev/null
exec 6>&1

# Name of the host.
# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_clean_files=
ac_config_libobj_dir=.
LIBOBJS=
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=

# Identity of this package.
PACKAGE_NAME='Giella myv'
PACKAGE_TARNAME='giella-myv'
PACKAGE_VERSION='0.2.0'
PACKAGE_STRING='Giella myv 0.2.0'
PACKAGE_BUGREPORT='feedback@divvun.no'
PACKAGE_URL='http://divvun.no'

ac_subst_vars='LTLIBOBJS
LIBOBJS
WANT_TTS_FALSE
WANT_TTS_TRUE
WANT_CUSTOM_FSTS_FALSE
WANT_CUSTOM_FSTS_TRUE
WANT_DIALECTS_FALSE
WANT_DIALECTS_TRUE
WANT_MORPHER_FALSE
WANT_MORPHER_TRUE
WANT_ANL_TOOL_FALSE
WANT_ANL_TOOL_TRUE
WANT_TOKENISERS_FALSE
WANT_TOKENISERS_TRUE
WANT_ABBR_FALSE
WANT_ABBR_TRUE
CAN_CGMT_FALSE
CAN_CGMT_TRUE
WANT_APERTIUM_FALSE
WANT_APERTIUM_TRUE
WANT_PHONETIC_FALSE
WANT_PHONETIC_TRUE
WANT_DOWNCASEERROR_FALSE
WANT_DOWNCASEERROR_TRUE
WANT_L2_FALSE
WANT_L2_TRUE
WANT_OAHPA_FALSE
WANT_OAHPA_TRUE
WANT_DICTIONARIES_FALSE
WANT_DICTIONARIES_TRUE
WANT_PATTERN_HYPHENATORS_FALSE
WANT_PATTERN_HYPHENATORS_TRUE
WANT_FST_HYPHENATOR_FALSE
WANT_FST_HYPHENATOR_TRUE
WANT_VFST_SPELLER_FALSE
WANT_VFST_SPELLER_TRUE
WANT_HFST_MOBILE_SPELLER_FALSE
WANT_HFST_MOBILE_SPELLER_TRUE
CAN_FOMA_SPELLER_FALSE
CAN_FOMA_SPELLER_TRUE
HFST_MINIMIZE_SPELLER
WANT_HFST_DESKTOP_SPELLER_FALSE
WANT_HFST_DESKTOP_SPELLER_TRUE
WANT_SPELLERS_FALSE
WANT_SPELLERS_TRUE
WANT_GRAMCHECK_FALSE
WANT_GRAMCHECK_TRUE
WANT_SYNTAX_FALSE
WANT_SYNTAX_TRUE
WANT_TRANSCRIPTORS_FALSE
WANT_TRANSCRIPTORS_TRUE
WANT_GLOSSERS_FALSE
WANT_GLOSSERS_TRUE
WANT_GENERATION_FALSE
WANT_GENERATION_TRUE
WANT_MORPHOLOGY_FALSE
WANT_MORPHOLOGY_TRUE
WANT_REVERSED_INTERSECT_FALSE
WANT_REVERSED_INTERSECT_TRUE
WANT_TWOSTEP_INTERSECT_FALSE
WANT_TWOSTEP_INTERSECT_TRUE
WANT_LEXC_ALIGNMENT_FALSE
WANT_LEXC_ALIGNMENT_TRUE
WANT_HYPERMINIMISATION_FALSE
WANT_HYPERMINIMISATION_TRUE
CAN_XZ_FALSE
CAN_XZ_TRUE
XZ
PERL
PATGEN
TAR
GZIP
ZIP
CAN_JAVA_FALSE
CAN_JAVA_TRUE
CAN_SAXON_FALSE
CAN_SAXON_TRUE
SAXONJAR
JV
SAXON
CAN_VISLCG_FALSE
CAN_VISLCG_TRUE
CG_MWESPLIT
CG_RELABEL
VISLCG3_COMP
VISLCG3
CAN_VFST_FALSE
CAN_VFST_TRUE
VOIKKOVFSTC
VOIKKOGC
VOIKKOHYPHENATE
VOIKKOSPELL
WITH_FOMA_FALSE
WITH_FOMA_TRUE
WITH_SFST_FALSE
WITH_SFST_TRUE
WITH_OFST_LOG_FALSE
WITH_OFST_LOG_TRUE
WITH_OFST_TROPICAL_FALSE
WITH_OFST_TROPICAL_TRUE
HFST_FORMAT_NAME
CAN_HFST_FALSE
CAN_HFST_TRUE
HFST_OSPELL
HFST_XFST
HFST_TXT2FST
HFST_TWOLC
HFST_TOKENISE
HFST_SUMMARIZE
HFST_SUBTRACT
HFST_SUBSTITUTE
HFST_STRINGS2FST
HFST_SPLIT
HFST_REWEIGHT
HFST_REVERSE
HFST_REPEAT
HFST_REMOVE_EPSILONS
HFST_REGEXP2FST
HFST_PUSH_WEIGHTS
HFST_PRUNE_ALPHABET
HFST_PROJECT
HFST_PMATCH2FST
HFST_PROC
HFST_PAIR_TEST
HFST_OPTIMIZED_LOOKUP
HFST_NAME
HFST_MULTIPLY
HFST_MINUS
HFST_MINIMIZE
HFST_LOOKUP
HFST_LEXC
HFST_INVERT
HFST_INTERSECT
HFST_INFO
HFST_FST2TXT
HFST_FST2STRINGS
HFST_FST2FST
HFST_FOMA
HFST_DISJUNCT
HFST_DETERMINIZE
HFST_CONJUNCT
HFST_CONCATENATE
HFST_COMPOSE_INTERSECT
HFST_COMPOSE
HAS_FOMA_FALSE
HAS_FOMA_TRUE
CAN_FOMA_FALSE
CAN_FOMA_TRUE
CGFLOOKUP
FLOOKUP
FOMA
CAN_XFST_FALSE
CAN_XFST_TRUE
LOOKUP
LEXC
TWOLC
XFST
PRINTF
DIVVUN_CHECKER
DIVVUN_VALIDATE_SUGGEST
SEE
CYGWINJAVAPATH
ifGNUmake
host_os
host_vendor
host_cpu
host
build_os
build_vendor
build_cpu
build
CAN_MERGE_FALSE
CAN_MERGE_TRUE
DIFFTOOL
CAN_REMOTE_SYNC_FALSE
CAN_REMOTE_SYNC_TRUE
CAN_LOCALSYNC_FALSE
CAN_LOCALSYNC_TRUE
WGET
RSYNC
DIVVUN_ACCURACY
R
NPM
CAN_FORREST_VALIDATE_FALSE
CAN_FORREST_VALIDATE_TRUE
FORREST
SED
GAWK
CAN_YAML_TEST_FALSE
CAN_YAML_TEST_TRUE
pkgpyexecdir
pyexecdir
pkgpythondir
pythondir
PYTHON_PLATFORM
PYTHON_EXEC_PREFIX
PYTHON_PREFIX
PYTHON_VERSION
PYTHON
BC
GIELLA_LIBS
GIELLA_SHARED
GIELLA_CORE_VERSION
GTCORE
GIELLA_CORE
GTCORESH
DEFAULT_CUSTOM_FSTS
DEFAULT_GENERATORS
DEFAULT_ANALYSERS
DEFAULT_SPELLER_MINIMISATION
DEFAULT_HFST_BACKEND
DEFAULT_REVERCI
DEFAULT_HYPERMIN
DEFAULT_XFST
DEFAULT_HFST
DEFAULT_FOMA
LEXREF_IN_PHONOLOGY_FALSE
LEXREF_IN_PHONOLOGY_TRUE
LEXREF_IN_XFSCRIPT
SKIP_PHONOLOGY_FALSE
SKIP_PHONOLOGY_TRUE
NO_PHONOLOGY
HAVE_DIALECTS_FALSE
HAVE_DIALECTS_TRUE
DIALECTS
DEFAULT_CASE_HANDLING_FALSE
DEFAULT_CASE_HANDLING_TRUE
WANT_ALT_ORTH_PROOFTOOLS_FALSE
WANT_ALT_ORTH_PROOFTOOLS_TRUE
HAVE_ALT_ORTHS_FALSE
HAVE_ALT_ORTHS_TRUE
ALT_ORTHS
DEFAULT_ORTH
HAVE_AREAS_FALSE
HAVE_AREAS_TRUE
AREAS
HAVE_ALT_WSS_FALSE
HAVE_ALT_WSS_TRUE
ALT_WSS
DEFAULT_WS
GTLANGUAGE
GLANGUAGE
GTLANG2
GLANG2
GTLANG
GLANG
SPELLERVERSION
AM_BACKSLASH
AM_DEFAULT_VERBOSITY
AM_DEFAULT_V
AM_V
am__untar
am__tar
AMTAR
am__leading_dot
SET_MAKE
AWK
mkdir_p
MKDIR_P
INSTALL_STRIP_PROGRAM
STRIP
install_sh
MAKEINFO
AUTOHEADER
AUTOMAKE
AUTOCONF
ACLOCAL
VERSION
PACKAGE
CYGPATH_W
am__isrc
INSTALL_DATA
INSTALL_SCRIPT
INSTALL_PROGRAM
target_alias
host_alias
build_alias
LIBS
ECHO_T
ECHO_N
ECHO_C
DEFS
mandir
localedir
libdir
psdir
pdfdir
dvidir
htmldir
infodir
docdir
oldincludedir
includedir
runstatedir
localstatedir
sharedstatedir
sysconfdir
datadir
datarootdir
libexecdir
sbindir
bindir
program_transform_name
prefix
exec_prefix
PACKAGE_URL
PACKAGE_BUGREPORT
PACKAGE_STRING
PACKAGE_VERSION
PACKAGE_TARNAME
PACKAGE_NAME
PATH_SEPARATOR
SHELL'
ac_subst_files=''
ac_user_opts='
enable_option_checking
enable_silent_rules
with_giella_core
with_giella_shared
with_giella_libs
enable_yamltests
with_forrest
with_npm
with_divvunspell
with_xfst
with_foma
with_hfst
with_backend_format
with_voikko
with_vislcg3
with_saxon
enable_hyperminimisation
enable_alignment
enable_twostep_intersect
enable_reversed_intersect
enable_ci
enable_all_tools
enable_analysers
enable_generators
enable_glossers
enable_transcriptors
enable_syntax
enable_grammarchecker
enable_spellers
enable_hfst_desktop_spellers
enable_minimised_spellers
enable_fomaspeller
enable_hfst_mobile_speller
enable_vfstspeller
enable_pattern_hyphenators
enable_fst_hyphenator
enable_dicts
enable_oahpa
enable_L2
enable_downcaseerror
enable_phonetic
enable_apertium
enable_cgmt
enable_abbr
enable_tokenisers
enable_analyser_tool
enable_morpher
enable_dialects
enable_custom_fsts
enable_tts
'
      ac_precious_vars='build_alias
host_alias
target_alias
GIELLA_CORE
GTCORE
GIELLA_SHARED
GIELLA_LIBS
PYTHON'


# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
ac_unrecognized_opts=
ac_unrecognized_sep=
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
# (The list follows the same order as the GNU Coding Standards.)
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datarootdir='${prefix}/share'
datadir='${datarootdir}'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
runstatedir='${localstatedir}/run'
includedir='${prefix}/include'
oldincludedir='/usr/include'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
infodir='${datarootdir}/info'
htmldir='${docdir}'
dvidir='${docdir}'
pdfdir='${docdir}'
psdir='${docdir}'
libdir='${exec_prefix}/lib'
localedir='${datarootdir}/locale'
mandir='${datarootdir}/man'

ac_prev=
ac_dashdash=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval $ac_prev=\$ac_option
    ac_prev=
    continue
  fi

  case $ac_option in
  *=?*) ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
  *=)   ac_optarg= ;;
  *)    ac_optarg=yes ;;
  esac

  case $ac_dashdash$ac_option in
  --)
    ac_dashdash=yes ;;

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=*)
    datadir=$ac_optarg ;;

  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
  | --dataroo | --dataro | --datar)
    ac_prev=datarootdir ;;
  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
    datarootdir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=no ;;

  -docdir | --docdir | --docdi | --doc | --do)
    ac_prev=docdir ;;
  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
    docdir=$ac_optarg ;;

  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
    ac_prev=dvidir ;;
  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
    dvidir=$ac_optarg ;;

  -enable-* | --enable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=\$ac_optarg ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
    ac_prev=htmldir ;;
  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
  | --ht=*)
    htmldir=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localedir | --localedir | --localedi | --localed | --locale)
    ac_prev=localedir ;;
  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
    localedir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst | --locals)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
    ac_prev=pdfdir ;;
  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
    pdfdir=$ac_optarg ;;

  -psdir | --psdir | --psdi | --psd | --ps)
    ac_prev=psdir ;;
  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
    psdir=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -runstatedir | --runstatedir | --runstatedi | --runstated \
  | --runstate | --runstat | --runsta | --runst | --runs \
  | --run | --ru | --r)
    ac_prev=runstatedir ;;
  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \
  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \
  | --run=* | --ru=* | --r=*)
    runstatedir=$ac_optarg ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=\$ac_optarg ;;

  -without-* | --without-*)
    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=no ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) as_fn_error $? "unrecognized option: \`$ac_option'
Try \`$0 --help' for more information"
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    case $ac_envvar in #(
      '' | [0-9]* | *[!_$as_cr_alnum]* )
      as_fn_error $? "invalid variable name: \`$ac_envvar'" ;;
    esac
    eval $ac_envvar=\$ac_optarg
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    printf "%s\n" "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      printf "%s\n" "$as_me: WARNING: invalid host type: $ac_option" >&2
    : "${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}"
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  as_fn_error $? "missing argument to $ac_option"
fi

if test -n "$ac_unrecognized_opts"; then
  case $enable_option_checking in
    no) ;;
    fatal) as_fn_error $? "unrecognized options: $ac_unrecognized_opts" ;;
    *)     printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
  esac
fi

# Check all directory arguments for consistency.
for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
		datadir sysconfdir sharedstatedir localstatedir includedir \
		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
		libdir localedir mandir runstatedir
do
  eval ac_val=\$$ac_var
  # Remove trailing slashes.
  case $ac_val in
    */ )
      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
      eval $ac_var=\$ac_val;;
  esac
  # Be sure to have absolute directory names.
  case $ac_val in
    [\\/$]* | ?:[\\/]* )  continue;;
    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
  esac
  as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val"
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


ac_pwd=`pwd` && test -n "$ac_pwd" &&
ac_ls_di=`ls -di .` &&
ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
  as_fn_error $? "working directory cannot be determined"
test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
  as_fn_error $? "pwd does not report name of working directory"


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then the parent directory.
  ac_confdir=`$as_dirname -- "$as_myself" ||
$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_myself" : 'X\(//\)[^/]' \| \
	 X"$as_myself" : 'X\(//\)$' \| \
	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_myself" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r "$srcdir/$ac_unique_file"; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r "$srcdir/$ac_unique_file"; then
  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
  as_fn_error $? "cannot find sources ($ac_unique_file) in $srcdir"
fi
ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
ac_abs_confdir=`(
	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error $? "$ac_msg"
	pwd)`
# When building in place, set srcdir=.
if test "$ac_abs_confdir" = "$ac_pwd"; then
  srcdir=.
fi
# Remove unnecessary trailing slashes from srcdir.
# Double slashes in file names in object file debugging info
# mess up M-x gdb in Emacs.
case $srcdir in
*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
esac
for ac_var in $ac_precious_vars; do
  eval ac_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_env_${ac_var}_value=\$${ac_var}
  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_cv_env_${ac_var}_value=\$${ac_var}
done

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures Giella myv 0.2.0 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/giella-myv]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]
_ACEOF

  cat <<\_ACEOF

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of Giella myv 0.2.0:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-yamltests      enable yaml tests [default=check]
  --enable-hyperminimisation
                          enable hyperminimisation of lexical fst
                          [default=$DEFAULT_HYPERMIN]
  --enable-alignment      enable symbol alignment when parsing lexc
                          [default=yes]
  --enable-twostep-intersect
                          enable two-step compose-intersect (more correct in
                          rare cases, might be slower) [default=no]
  --enable-reversed-intersect
                          enable reversed compose-intersect (faster and takes
                          less RAM in some cases) [default=$DEFAULT_REVERCI]
  --enable-ci             build nothing unless explicitly enabled [default=no]
  --enable-all-tools      build all tools (excluding unstable or experimental
                          tools, which must be explicitly enabled with
                          --enable-dialects, --enable-glossers,
                          --enable-phonetic, --enable-downcaseerror,
                          --enable-L2, --enable-pattern-hyphenators,
                          --enable-fomaspeller, --enable-vfstspeller)
                          [default=no]
  --enable-analysers      build morphological analysers [default=yes]
  --enable-generators     build morphological generators [default=yes]
  --enable-glossers       build glossing morphological analysers [default=no]
  --enable-transcriptors  build text transcriptors [default=yes]
  --enable-syntax         build syntax parsing tools [default=yes]
  --enable-grammarchecker enable grammar checker [default=no]
  --enable-spellers       build any/all spellers [default=no]
  --enable-hfst-desktop-spellers
                          build hfst desktop spellers (dependent on
                          --enable-spellers) [default=yes]
  --enable-minimised-spellers
                          minimise hfst spellers
                          [default=$DEFAULT_SPELLER_MINIMISATION]
  --enable-fomaspeller    build foma speller (dependent on --enable-spellers)
                          [default=no]
  --enable-hfst-mobile-speller
                          build hfst mobile spellers (dependent on
                          --enable-spellers) [default=no]
  --enable-vfstspeller    build vfst speller (dependent on
                          --enable-hfst-mobile-speller) [default=no]
  --enable-pattern-hyphenators
                          build pattern-based hyphenators (requires fst
                          hyphenator) [default=no]
  --enable-fst-hyphenator build fst-based hyphenator [default=no]
  --enable-dicts          enable dictionary transducers [default=no]
  --enable-oahpa          enable oahpa transducers [default=no]
  --enable-L2             enable L2 analyser for Oahpa [default=no]
  --enable-downcaseerror  enable downcaseerror analyser for Oahpa [default=no]
  --enable-phonetic       enable phonetic transducers [default=no]
  --enable-apertium       enable apertium transducers [default=no]
  --enable-cgmt           enable cg-based machine translation [default=no]
  --enable-abbr           enable generation of abbr.txt [default=no]
  --enable-tokenisers     enable tokenisers [default=no]
  --enable-analyser-tool  enable analyser tool [default=no]
  --enable-morpher        enable morphological segmenter [default=no]
  --enable-dialects       build dialect specific fst’s and spellers
                          [default=no]
  --enable-custom-fsts    build custom fst’s [default=no]
  --enable-tts            enable tts transcriptors [default=no]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-giella-core=DIRECTORY
                          set giella-core to DIRECTORY [default=PATH]
  --with-giella-shared=DIRECTORY
                          search giella-shared data in DIRECTORY
                          [default=PATH]
  --with-giella-libs=DIRECTORY
                          search giella-libs data in DIRECTORY [default=PATH]
  --with-forrest=DIRECTORY
                          search forrest in DIRECTORY [default=PATH]
  --with-npm=DIRECTORY    search npm in DIRECTORY [default=PATH]
  --with-divvunspell=DIRECTORY
                          search divvunspell in DIRECTORY [default=PATH]
  --with-xfst=DIRECTORY   search xfst in DIRECTORY [default=PATH]
  --with-foma=DIRECTORY   search foma in DIRECTORY [default=PATH]
  --with-hfst=DIRECTORY   define HFST binary path if not in PATH [default=no]
  --with-backend-format=FORMAT
                          enable the hfst backend format specified (one of:
                          sfst, foma, openfst-tropical, openfst-log)
                          [default=$DEFAULT_HFST_BACKEND]
  --with-voikko=DIRECTORY search voikko in DIRECTORY [default=PATH]
  --with-vislcg3=DIRECTORY
                          search vislcg3 in DIRECTORY [default=PATH]
  --with-saxon=DIRECTORY  search saxon wrapper script in DIRECTORY
                          [default=PATH]

Some influential environment variables:
  GIELLA_CORE directory for the Giella infra core scripts and other required
              resources
  GTCORE      GTCORE = GIELLA_CORE, retained for backwards compatibility while
              being cleaned out
  GIELLA_SHARED
              directory for giella shared data, like proper nouns and regexes
  GIELLA_LIBS directory containing precompiled libraries for proofing tools
  PYTHON      the Python interpreter

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <feedback@divvun.no>.
Giella myv home page: <http://divvun.no>.
_ACEOF
ac_status=$?
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d "$ac_dir" ||
      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
      continue
    ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix

    cd "$ac_dir" || { ac_status=$?; continue; }
    # Check for configure.gnu first; this name is used for a wrapper for
    # Metaconfig's "Configure" on case-insensitive file systems.
    if test -f "$ac_srcdir/configure.gnu"; then
      echo &&
      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
    elif test -f "$ac_srcdir/configure"; then
      echo &&
      $SHELL "$ac_srcdir/configure" --help=recursive
    else
      printf "%s\n" "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi || ac_status=$?
    cd "$ac_pwd" || { ac_status=$?; break; }
  done
fi

test -n "$ac_init_help" && exit $ac_status
if $ac_init_version; then
  cat <<\_ACEOF
Giella myv configure 0.2.0
generated by GNU Autoconf 2.71

Copyright (C) 2021 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.
_ACEOF
  exit
fi

## ------------------------ ##
## Autoconf initialization. ##
## ------------------------ ##
ac_configure_args_raw=
for ac_arg
do
  case $ac_arg in
  *\'*)
    ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
  esac
  as_fn_append ac_configure_args_raw " '$ac_arg'"
done

case $ac_configure_args_raw in
  *$as_nl*)
    ac_safe_unquote= ;;
  *)
    ac_unsafe_z='|&;<>()$`\\"*?[ ''	' # This string ends in space, tab.
    ac_unsafe_a="$ac_unsafe_z#~"
    ac_safe_unquote="s/ '\\([^$ac_unsafe_a][^$ac_unsafe_z]*\\)'/ \\1/g"
    ac_configure_args_raw=`      printf "%s\n" "$ac_configure_args_raw" | sed "$ac_safe_unquote"`;;
esac

cat >config.log <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Giella myv $as_me 0.2.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ $0$ac_configure_args_raw

_ACEOF
exec 5>>config.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    printf "%s\n" "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *\'*)
      ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
    2)
      as_fn_append ac_configure_args1 " '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      as_fn_append ac_configure_args " '$ac_arg'"
      ;;
    esac
  done
done
{ ac_configure_args0=; unset ac_configure_args0;}
{ ac_configure_args1=; unset ac_configure_args1;}

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Use '\'' to represent an apostrophe within the trap.
# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
trap 'exit_status=$?
  # Sanitize IFS.
  IFS=" ""	$as_nl"
  # Save into config.log some information that might help in debugging.
  {
    echo

    printf "%s\n" "## ---------------- ##
## Cache variables. ##
## ---------------- ##"
    echo
    # The following way of writing the cache mishandles newlines in values,
(
  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done
  (set) 2>&1 |
    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      sed -n \
	"s/'\''/'\''\\\\'\'''\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
      ;; #(
    *)
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
)
    echo

    printf "%s\n" "## ----------------- ##
## Output variables. ##
## ----------------- ##"
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=\$$ac_var
      case $ac_val in
      *\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
      esac
      printf "%s\n" "$ac_var='\''$ac_val'\''"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      printf "%s\n" "## ------------------- ##
## File substitutions. ##
## ------------------- ##"
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=\$$ac_var
	case $ac_val in
	*\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
	esac
	printf "%s\n" "$ac_var='\''$ac_val'\''"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      printf "%s\n" "## ----------- ##
## confdefs.h. ##
## ----------- ##"
      echo
      cat confdefs.h
      echo
    fi
    test "$ac_signal" != 0 &&
      printf "%s\n" "$as_me: caught signal $ac_signal"
    printf "%s\n" "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core core.conftest.* &&
    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -f -r conftest* confdefs.h

printf "%s\n" "/* confdefs.h */" > confdefs.h

# Predefined preprocessor variables.

printf "%s\n" "#define PACKAGE_NAME \"$PACKAGE_NAME\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_VERSION \"$PACKAGE_VERSION\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_STRING \"$PACKAGE_STRING\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_URL \"$PACKAGE_URL\"" >>confdefs.h


# Let the site file select an alternate cache file if it wants to.
# Prefer an explicitly selected file to automatically selected ones.
if test -n "$CONFIG_SITE"; then
  ac_site_files="$CONFIG_SITE"
elif test "x$prefix" != xNONE; then
  ac_site_files="$prefix/share/config.site $prefix/etc/config.site"
else
  ac_site_files="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
fi

for ac_site_file in $ac_site_files
do
  case $ac_site_file in #(
  */*) :
     ;; #(
  *) :
    ac_site_file=./$ac_site_file ;;
esac
  if test -f "$ac_site_file" && test -r "$ac_site_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
printf "%s\n" "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file" \
      || { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "failed to load site script $ac_site_file
See \`config.log' for more details" "$LINENO" 5; }
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special files
  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
printf "%s\n" "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . "$cache_file";;
      *)                      . "./$cache_file";;
    esac
  fi
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
printf "%s\n" "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi


# Auxiliary files required by this configure script.
ac_aux_files="config.guess config.sub missing install-sh"

# Locations in which to look for auxiliary files.
ac_aux_dir_candidates="${srcdir}/build-aux"

# Search for a directory containing all of the required auxiliary files,
# $ac_aux_files, from the $PATH-style list $ac_aux_dir_candidates.
# If we don't find one directory that contains all the files we need,
# we report the set of missing files from the *first* directory in
# $ac_aux_dir_candidates and give up.
ac_missing_aux_files=""
ac_first_candidate=:
printf "%s\n" "$as_me:${as_lineno-$LINENO}: looking for aux files: $ac_aux_files" >&5
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in $ac_aux_dir_candidates
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:

  printf "%s\n" "$as_me:${as_lineno-$LINENO}:  trying $as_dir" >&5
  ac_aux_dir_found=yes
  ac_install_sh=
  for ac_aux in $ac_aux_files
  do
    # As a special case, if "install-sh" is required, that requirement
    # can be satisfied by any of "install-sh", "install.sh", or "shtool",
    # and $ac_install_sh is set appropriately for whichever one is found.
    if test x"$ac_aux" = x"install-sh"
    then
      if test -f "${as_dir}install-sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install-sh found" >&5
        ac_install_sh="${as_dir}install-sh -c"
      elif test -f "${as_dir}install.sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install.sh found" >&5
        ac_install_sh="${as_dir}install.sh -c"
      elif test -f "${as_dir}shtool"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}shtool found" >&5
        ac_install_sh="${as_dir}shtool install -c"
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} install-sh"
        else
          break
        fi
      fi
    else
      if test -f "${as_dir}${ac_aux}"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}${ac_aux} found" >&5
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} ${ac_aux}"
        else
          break
        fi
      fi
    fi
  done
  if test "$ac_aux_dir_found" = yes; then
    ac_aux_dir="$as_dir"
    break
  fi
  ac_first_candidate=false

  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :

else $as_nop
  as_fn_error $? "cannot find required auxiliary files:$ac_missing_aux_files" "$LINENO" 5
fi


# These three variables are undocumented and unsupported,
# and are intended to be withdrawn in a future Autoconf release.
# They can cause serious problems if a builder's source tree is in a directory
# whose full name contains unusual characters.
if test -f "${ac_aux_dir}config.guess"; then
  ac_config_guess="$SHELL ${ac_aux_dir}config.guess"
fi
if test -f "${ac_aux_dir}config.sub"; then
  ac_config_sub="$SHELL ${ac_aux_dir}config.sub"
fi
if test -f "$ac_aux_dir/configure"; then
  ac_configure="$SHELL ${ac_aux_dir}configure"
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
printf "%s\n" "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
printf "%s\n" "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
printf "%s\n" "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	  ac_cache_corrupted=:
	else
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
printf "%s\n" "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
	  eval $ac_var=\$ac_old_val
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
printf "%s\n" "$as_me:   former value:  \`$ac_old_val'" >&2;}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
printf "%s\n" "$as_me:   current value: \`$ac_new_val'" >&2;}
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`printf "%s\n" "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
printf "%s\n" "$as_me: error: changes in the environment can compromise the build" >&2;}
  as_fn_error $? "run \`${MAKE-make} distclean' and/or \`rm $cache_file'
	    and start over" "$LINENO" 5
fi
## -------------------- ##
## Main body of script. ##
## -------------------- ##

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


# AC_REVISION is used to get SVN revision into bug reports

# These configuration dirs hide some extra cruft


# AM_INIT_AUTOMAKE sets up make conventions
am__api_version='1.16'



  # Find a good install program.  We prefer a C program (faster),
# so one script is as good as another.  But avoid the broken or
# incompatible versions:
# SysV /etc/install, /usr/sbin/install
# SunOS /usr/etc/install
# IRIX /sbin/install
# AIX /bin/install
# AmigaOS /C/install, which installs bootblocks on floppy discs
# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
# AFS /usr/afsws/bin/install, which mishandles nonexistent args
# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
# OS/2's system install, which has a completely different semantic
# ./install, which can be erroneously created by make from ./install.sh.
# Reject install programs that cannot install multiple files.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
printf %s "checking for a BSD-compatible install... " >&6; }
if test -z "$INSTALL"; then
if test ${ac_cv_path_install+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    # Account for fact that we put trailing slashes in our PATH walk.
case $as_dir in #((
  ./ | /[cC]/* | \
  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
  /usr/ucb/* ) ;;
  *)
    # OSF1 and SCO ODT 3.0 have their own names for install.
    # Don't use installbsd from OSF since it installs stuff as root
    # by default.
    for ac_prog in ginstall scoinst install; do
      for ac_exec_ext in '' $ac_executable_extensions; do
	if as_fn_executable_p "$as_dir$ac_prog$ac_exec_ext"; then
	  if test $ac_prog = install &&
	    grep dspmsg "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # AIX install.  It has an incompatible calling convention.
	    :
	  elif test $ac_prog = install &&
	    grep pwplus "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # program-specific install script used by HP pwplus--don't use.
	    :
	  else
	    rm -rf conftest.one conftest.two conftest.dir
	    echo one > conftest.one
	    echo two > conftest.two
	    mkdir conftest.dir
	    if "$as_dir$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir/" &&
	      test -s conftest.one && test -s conftest.two &&
	      test -s conftest.dir/conftest.one &&
	      test -s conftest.dir/conftest.two
	    then
	      ac_cv_path_install="$as_dir$ac_prog$ac_exec_ext -c"
	      break 3
	    fi
	  fi
	fi
      done
    done
    ;;
esac

  done
IFS=$as_save_IFS

rm -rf conftest.one conftest.two conftest.dir

fi
  if test ${ac_cv_path_install+y}; then
    INSTALL=$ac_cv_path_install
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for INSTALL within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    INSTALL=$ac_install_sh
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
printf "%s\n" "$INSTALL" >&6; }

# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
# It thinks the first close brace ends the variable substitution.
test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'

test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'

test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
printf %s "checking whether build environment is sane... " >&6; }
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[\\\"\#\$\&\'\`$am_lf]*)
    as_fn_error $? "unsafe absolute working directory name" "$LINENO" 5;;
esac
case $srcdir in
  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
    as_fn_error $? "unsafe srcdir value: '$srcdir'" "$LINENO" 5;;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$*" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$*" != "X $srcdir/configure conftest.file" \
	&& test "$*" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	as_fn_error $? "ls -t appears to fail.  Make sure there is not a broken
  alias in your environment" "$LINENO" 5
     fi
     if test "$2" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$2" = conftest.file
   )
then
   # Ok.
   :
else
   as_fn_error $? "newly created file is older than distributed files!
Check your system clock" "$LINENO" 5
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi

rm -f conftest.file

test "$program_prefix" != NONE &&
  program_transform_name="s&^&$program_prefix&;$program_transform_name"
# Use a double $ so make ignores it.
test "$program_suffix" != NONE &&
  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
# Double any \ or $.
# By default was `s,x,x', remove it if useless.
ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
program_transform_name=`printf "%s\n" "$program_transform_name" | sed "$ac_script"`


# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`


  if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: 'missing' script is too old or missing" >&5
printf "%s\n" "$as_me: WARNING: 'missing' script is too old or missing" >&2;}
fi

if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi

# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
if test "$cross_compiling" != no; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
set dummy ${ac_tool_prefix}strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$STRIP"; then
  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
STRIP=$ac_cv_prog_STRIP
if test -n "$STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
printf "%s\n" "$STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_STRIP"; then
  ac_ct_STRIP=$STRIP
  # Extract the first word of "strip", so it can be a program name with args.
set dummy strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_STRIP"; then
  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_STRIP="strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
if test -n "$ac_ct_STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
printf "%s\n" "$ac_ct_STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_STRIP" = x; then
    STRIP=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    STRIP=$ac_ct_STRIP
  fi
else
  STRIP="$ac_cv_prog_STRIP"
fi

fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a race-free mkdir -p" >&5
printf %s "checking for a race-free mkdir -p... " >&6; }
if test -z "$MKDIR_P"; then
  if test ${ac_cv_path_mkdir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in mkdir gmkdir; do
	 for ac_exec_ext in '' $ac_executable_extensions; do
	   as_fn_executable_p "$as_dir$ac_prog$ac_exec_ext" || continue
	   case `"$as_dir$ac_prog$ac_exec_ext" --version 2>&1` in #(
	     'mkdir ('*'coreutils) '* | \
	     'BusyBox '* | \
	     'mkdir (fileutils) '4.1*)
	       ac_cv_path_mkdir=$as_dir$ac_prog$ac_exec_ext
	       break 3;;
	   esac
	 done
       done
  done
IFS=$as_save_IFS

fi

  test -d ./--version && rmdir ./--version
  if test ${ac_cv_path_mkdir+y}; then
    MKDIR_P="$ac_cv_path_mkdir -p"
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for MKDIR_P within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    MKDIR_P="$ac_install_sh -d"
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
printf "%s\n" "$MKDIR_P" >&6; }

for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_AWK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_AWK="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
printf "%s\n" "$AWK" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$AWK" && break
done

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
printf %s "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
set x ${MAKE-make}
ac_make=`printf "%s\n" "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
if eval test \${ac_cv_prog_make_${ac_make}_set+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat >conftest.make <<\_ACEOF
SHELL = /bin/sh
all:
	@echo '@@@%%%=$(MAKE)=@@@%%%'
_ACEOF
# GNU make sometimes prints "make[1]: Entering ...", which would confuse us.
case `${MAKE-make} -f conftest.make 2>/dev/null` in
  *@@@%%%=?*=@@@%%%*)
    eval ac_cv_prog_make_${ac_make}_set=yes;;
  *)
    eval ac_cv_prog_make_${ac_make}_set=no;;
esac
rm -f conftest.make
fi
if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
  SET_MAKE=
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
  SET_MAKE="MAKE=${MAKE-make}"
fi

rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null

# Check whether --enable-silent-rules was given.
if test ${enable_silent_rules+y}
then :
  enableval=$enable_silent_rules;
fi

case $enable_silent_rules in # (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=1;;
esac
am_make=${MAKE-make}
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables" >&5
printf %s "checking whether $am_make supports nested variables... " >&6; }
if test ${am_cv_make_support_nested_variables+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if printf "%s\n" 'TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables" >&5
printf "%s\n" "$am_cv_make_support_nested_variables" >&6; }
if test $am_cv_make_support_nested_variables = yes; then
    AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AM_BACKSLASH='\'

if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  am__isrc=' -I$(srcdir)'
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    as_fn_error $? "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi


# Define the identity of the package.
 PACKAGE='giella-myv'
 VERSION='0.2.0'


printf "%s\n" "#define PACKAGE \"$PACKAGE\"" >>confdefs.h


printf "%s\n" "#define VERSION \"$VERSION\"" >>confdefs.h

# Some tools Automake needs.

ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}


AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}


AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}


AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}


MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}

# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
mkdir_p='$(MKDIR_P)'

# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AMTAR='$${TAR-tar}'


# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar  pax cpio none'



  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to create a pax tar archive" >&5
printf %s "checking how to create a pax tar archive... " >&6; }

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_pax-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        { echo "$as_me:$LINENO: $_am_tar --version" >&5
   ($_am_tar --version) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } && break
      done
      am__tar="$_am_tar --format=posix -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=posix -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x pax -w "$$tardir"'
      am__tar_='pax -L -x pax -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H pax -L'
      am__tar_='find "$tardir" -print | cpio -o -H pax -L'
      am__untar='cpio -i -H pax -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_pax}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    { echo "$as_me:$LINENO: tardir=conftest.dir && eval $am__tar_ >conftest.tar" >&5
   (tardir=conftest.dir && eval $am__tar_ >conftest.tar) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
    rm -rf conftest.dir
    if test -s conftest.tar; then
      { echo "$as_me:$LINENO: $am__untar <conftest.tar" >&5
   ($am__untar <conftest.tar) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
      { echo "$as_me:$LINENO: cat conftest.dir/file" >&5
   (cat conftest.dir/file) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  if test ${am_cv_prog_tar_pax+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_prog_tar_pax=$_am_tool
fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_tar_pax" >&5
printf "%s\n" "$am_cv_prog_tar_pax" >&6; }






# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    as_fn_error $? "Your 'rm' program is bad, sorry." "$LINENO" 5
  fi
fi

# Check whether --enable-silent-rules was given.
if test ${enable_silent_rules+y}
then :
  enableval=$enable_silent_rules;
fi

case $enable_silent_rules in # (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=0;;
esac
am_make=${MAKE-make}
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables" >&5
printf %s "checking whether $am_make supports nested variables... " >&6; }
if test ${am_cv_make_support_nested_variables+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if printf "%s\n" 'TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables" >&5
printf "%s\n" "$am_cv_make_support_nested_variables" >&6; }
if test $am_cv_make_support_nested_variables = yes; then
    AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AM_BACKSLASH='\'


### Speller release version (usually different from the package version,
### typically spellers are released more often than the language package):
SPELLERVERSION=0.1.1


########## LANGUAGE SPECIFIC SETTINGS ##########
# GLANG is the language code used to identify this project; it should be the
# same as the directory name in $GIELLA_HOME/*langs/ and the same as the ISO 639
# three-letter code for the language.
# GTLANG is deprecated, defined for backwards compatibility.
GLANG=myv

GTLANG=$GLANG

# GLANG2 is the shortest unambiguous language code for this project; it
# should be the ISO 639-1 two-letter code if available, otherwise usually the
# same as above:
# GTLANG2 is deprecated, defined for backwards compatibility.
GLANG2=myv

GTLANG2=$GLANG2

# GLANGUAGE is the full language name as given by the ISO 639-3 file.
# GTLANGUAGE is deprecated, defined for backwards compatibility.
GLANGUAGE="Erzya"

GTLANGUAGE=$GLANGUAGE


# Alternate writing system(s) should be listed here using the ISO 15924 code.
# Multiple alternate WS's should be space separated. For a list of such codes
# see http://en.wikipedia.org/wiki/ISO_15924 and
# http://www.unicode.org/iso15924/codelists.html
# It is assumed that conversion from the default WS to the alternate WS(s)
# can be done programmatically with a regex or xfscript. If not, resources
# for multiple WS's must be developed and maintained as separate languages.
DEFAULT_WS="Latn"

ALT_WSS=""

 if test "x$ALT_WSS" != "x"; then
  HAVE_ALT_WSS_TRUE=
  HAVE_ALT_WSS_FALSE='#'
else
  HAVE_ALT_WSS_TRUE='#'
  HAVE_ALT_WSS_FALSE=
fi


# Specify the ISO 3166-1 alpha-2 codes for countries as pr BCP-47. A list of
# codes can be found at http://en.wikipedia.org/wiki/ISO_3166-1.
# Only specify country codes if there is a real difference between and real need
# for country-specific normative tools. E.g. in SMJ, people write æ or ä
# depending on whether they are in Norway or Sweden, and restricting a speller
# to only the relevant variant will improve the overall quality of the speller.
AREAS=""

 if test "x$AREAS" != "x"; then
  HAVE_AREAS_TRUE=
  HAVE_AREAS_FALSE='#'
else
  HAVE_AREAS_TRUE='#'
  HAVE_AREAS_FALSE=
fi


# Names for default and alternate orthographies. The names must follow the BCP
# 47 rules for private use subtags, which requires that the names must be at
# most eight - 8 - characters long, and only contain ascii letters and digits.
# If only one orthography is used, leave both variables empty. If there are
# alternate orthographies, also the default must have a name.
# It is assumed that conversion from the default orthography to the alternate
# orthographies can be done programmatically with a regex or xfscript.
DEFAULT_ORTH=""

ALT_ORTHS=""

 if test "x$ALT_ORTHS" != "x" \
                                    -a "x$DEFAULT_ORTH" != "x"; then
  HAVE_ALT_ORTHS_TRUE=
  HAVE_ALT_ORTHS_FALSE='#'
else
  HAVE_ALT_ORTHS_TRUE='#'
  HAVE_ALT_ORTHS_FALSE=
fi

# Specify whether spellers for alternative orthographies should be built, the
# default is to build them. Change the value below from 'true' to 'false' if
# such spellers are NOT wanted.
 if  true ; then
  WANT_ALT_ORTH_PROOFTOOLS_TRUE=
  WANT_ALT_ORTH_PROOFTOOLS_FALSE='#'
else
  WANT_ALT_ORTH_PROOFTOOLS_TRUE='#'
  WANT_ALT_ORTH_PROOFTOOLS_FALSE=
fi


# Case handling: the default is to assume an orthography with case distinctions:
# upper vs lower case. That is not always true, or the case handling is such
# that the default system doesn't cut it. In those cases, change the value
# below from 'true' to 'false':
 if  true ; then
  DEFAULT_CASE_HANDLING_TRUE=
  DEFAULT_CASE_HANDLING_FALSE='#'
else
  DEFAULT_CASE_HANDLING_TRUE='#'
  DEFAULT_CASE_HANDLING_FALSE=
fi


# Specify the tags for all dialects in this variable, leave it empty if you do
# NOT support dialectal variant fst's. Use upper case, separate with space.
# Dialects are presently only used in Oahpa fst's, and only support dialectal
# variation within the -norm- fst's.
DIALECTS=""

 if test "x$DIALECTS" != "x"; then
  HAVE_DIALECTS_TRUE=
  HAVE_DIALECTS_FALSE='#'
else
  HAVE_DIALECTS_TRUE='#'
  HAVE_DIALECTS_FALSE=
fi


########## LANGUAGE SPECIFIC BUILD SETTINGS ##########

# NO_PHONOLOGY = yes
# ... makes the bulid process skip compilation of anything in the fst/
# dir. This is mainly useful when building from external sources such that the
# lexical fst built in the fst/ dir is actually the full analyser.
# The variable can also be set if a language is such that everything is
# encoded in lexc, and thus does not need any phonology processing.
# Default: empty, meaning that phonologies will be compiled.
NO_PHONOLOGY=""

 if test "x$NO_PHONOLOGY" != "x"; then
  SKIP_PHONOLOGY_TRUE=
  SKIP_PHONOLOGY_FALSE='#'
else
  SKIP_PHONOLOGY_TRUE='#'
  SKIP_PHONOLOGY_FALSE=
fi


# LEXICON_IN_PHONOLOGY
# Set this to 'yes' IFF a) your phonology is formulated using rewrite rules,
# AND b) your phonology file contains a reference to the lexical transducer in
# the following form:
#
# load stack fst/lexicon.&FST&
#
# where &FST& will be automatically replaced with the relevant fst suffix (xfst,
# hfst, foma). When done like that, the phonology rules will be composed with
# the lexicon directly, which should lead to much faster compilaton of xfst
# rewrite rules.
LEXREF_IN_XFSCRIPT=""

 if test "x$LEXREF_IN_XFSCRIPT" != "x"; then
  LEXREF_IN_PHONOLOGY_TRUE=
  LEXREF_IN_PHONOLOGY_FALSE='#'
else
  LEXREF_IN_PHONOLOGY_TRUE='#'
  LEXREF_IN_PHONOLOGY_FALSE=
fi


# Variables for language specific settings
# TODO: maybe some could be env.vars AC_ARG_VAR so power users know what
# they want to compile theirs stuff with
DEFAULT_FOMA=no

DEFAULT_HFST=yes

DEFAULT_XFST=no

DEFAULT_HYPERMIN=no

DEFAULT_REVERCI=yes

DEFAULT_HFST_BACKEND=foma

DEFAULT_SPELLER_MINIMISATION=no

DEFAULT_ANALYSERS=yes

DEFAULT_GENERATORS=yes

DEFAULT_CUSTOM_FSTS=yes


# Tests and sets up giella-core directories and scripts


  # Make sure we can run config.sub.
$SHELL "${ac_aux_dir}config.sub" sun4 >/dev/null 2>&1 ||
  as_fn_error $? "cannot run $SHELL ${ac_aux_dir}config.sub" "$LINENO" 5

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
printf %s "checking build system type... " >&6; }
if test ${ac_cv_build+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_build_alias=$build_alias
test "x$ac_build_alias" = x &&
  ac_build_alias=`$SHELL "${ac_aux_dir}config.guess"`
test "x$ac_build_alias" = x &&
  as_fn_error $? "cannot guess build type; you must specify one" "$LINENO" 5
ac_cv_build=`$SHELL "${ac_aux_dir}config.sub" $ac_build_alias` ||
  as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $ac_build_alias failed" "$LINENO" 5

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
printf "%s\n" "$ac_cv_build" >&6; }
case $ac_cv_build in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical build" "$LINENO" 5;;
esac
build=$ac_cv_build
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_build
shift
build_cpu=$1
build_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
build_os=$*
IFS=$ac_save_IFS
case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
printf %s "checking host system type... " >&6; }
if test ${ac_cv_host+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$host_alias" = x; then
  ac_cv_host=$ac_cv_build
else
  ac_cv_host=`$SHELL "${ac_aux_dir}config.sub" $host_alias` ||
    as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $host_alias failed" "$LINENO" 5
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
printf "%s\n" "$ac_cv_host" >&6; }
case $ac_cv_host in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical host" "$LINENO" 5;;
esac
host=$ac_cv_host
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_host
shift
host_cpu=$1
host_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
host_os=$*
IFS=$ac_save_IFS
case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac




# Extract the first word of "gt-core.sh", so it can be a program name with args.
set dummy gt-core.sh; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_GTCORESH+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $GTCORESH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GTCORESH="$GTCORESH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $GIELLA_CORE/scripts$PATH_SEPARATOR$GTHOME/giella-core/scripts$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_GTCORESH="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_GTCORESH" && ac_cv_path_GTCORESH="false"
  ;;
esac
fi
GTCORESH=$ac_cv_path_GTCORESH
if test -n "$GTCORESH"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GTCORESH" >&5
printf "%s\n" "$GTCORESH" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi




# Check whether --with-giella-core was given.
if test ${with_giella_core+y}
then :
  withval=$with_giella_core; with_giella_core=$withval
else $as_nop
  with_giella_core=false
fi


# Get the relative path from pwd to where src dir is:
MYSRCDIR=$srcdir
# Get the absolute path to the present dir:
BUILD_DIR_PATH=$(pwd)
# Combine to get the full path to the scrdir:
THIS_TOP_SRC_DIR=$BUILD_DIR_PATH/$MYSRCDIR

_giella_core_not_found_message="
GIELLA_CORE could not be set:

Could not set GIELLA_CORE and thus not find required scripts in:
       \$GIELLA_CORE/scripts
       \$GTHOME/giella-core/scripts
       $PATH

       Please do the following:
       1. svn co https://github.com/giellalt/giella-core.git/trunk
       2. then either:
         a: cd giella-core && ./autogen.sh && ./configure && make

          or:
         b: add the following to your ~/.bash_profile or ~/.profile:

       export \$GIELLA_CORE=/path/to/giella-core/checkout/dir

       (replace the path with the real path from 1. above)

          or:
         c: run configure as follows

       ./configure --with-giella-core=/path/to/giella-core/checkout/dir

       (replace the path with the real path from 1. above)
"

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we can set GIELLA_CORE" >&5
printf %s "checking whether we can set GIELLA_CORE... " >&6; }

# --with-giella-core overrides everything:
if test "x$with_giella_core" != "xfalse" -a \
          -d "$with_giella_core/scripts"
then :

    GIELLA_CORE=$with_giella_core

else $as_nop

    # If not, Look in the parent dir:
    if test -d "$THIS_TOP_SRC_DIR/../giella-core/scripts"
then :

        GIELLA_CORE=$THIS_TOP_SRC_DIR/../giella-core

else $as_nop

        # If nothing else works, try pkg-config:
        if pkg-config --exists giella-core
then :

            GIELLA_CORE=$(pkg-config --variable=dir giella-core)

else $as_nop

            as_fn_error $? "${_giella_core_not_found_message}" "$LINENO" 5

fi

fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GIELLA_CORE" >&5
printf "%s\n" "$GIELLA_CORE" >&6; }

### This is the version of the Giella Core that we require. Update as needed.
### It is possible to specify also subversion revision: 0.1.2-12345
_giella_core_min_version=0.12.0

# GIELLA_CORE/GTCORE env. variable, required by the infrastructure to find scripts:


GTCORE=${GIELLA_CORE}


##### Check the version of the giella-core, and stop with error message if too old:
# This is the error message:
giella_core_too_old_message="

The giella-core is too old, we require at least $_giella_core_min_version.

*** ==> PLEASE ENTER THE FOLLOWING COMMANDS: <== ***

cd $GTCORE
svn up
./autogen.sh # required only the first time
./configure  # required only the first time
make
"

# Identify the version of giella-core:
# Extract the first word of "gt-version.sh", so it can be a program name with args.
set dummy gt-version.sh; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_GIELLA_CORE_VERSION+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $GIELLA_CORE_VERSION in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GIELLA_CORE_VERSION="$GIELLA_CORE_VERSION" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $GTCORE/scripts$PATH_SEPARATOR$GTHOME/giella-core/scripts$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_GIELLA_CORE_VERSION="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_GIELLA_CORE_VERSION" && ac_cv_path_GIELLA_CORE_VERSION="no"
  ;;
esac
fi
GIELLA_CORE_VERSION=$ac_cv_path_GIELLA_CORE_VERSION
if test -n "$GIELLA_CORE_VERSION"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GIELLA_CORE_VERSION" >&5
printf "%s\n" "$GIELLA_CORE_VERSION" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking the version of the Giella Core" >&5
printf %s "checking the version of the Giella Core... " >&6; }
if test "x${GIELLA_CORE_VERSION}" != xno
then :
  _giella_core_version=$( "${GIELLA_CORE_VERSION}" )
else $as_nop
  as_fn_error $? "gt-version.sh could not be found, installation is incomplete!" "$LINENO" 5

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $_giella_core_version" >&5
printf "%s\n" "$_giella_core_version" >&6; }

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the Giella Core version is at least $_giella_core_min_version" >&5
printf %s "checking whether the Giella Core version is at least $_giella_core_min_version... " >&6; }
# Compare it to the required version, and error out if too old:



  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.

  ax_compare_version_A=`echo "$_giella_core_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


  ax_compare_version_B=`echo "$_giella_core_min_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


    ax_compare_version=`echo "x$ax_compare_version_A
x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`



    if test "$ax_compare_version" = "true" ; then
    giella_core_version_ok=yes
    else giella_core_version_ok=no
  fi

if test "x${giella_core_version_ok}" != xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $giella_core_version_ok" >&5
printf "%s\n" "$giella_core_version_ok" >&6; }
else $as_nop
  as_fn_error $? "$giella_core_too_old_message" "$LINENO" 5
fi

################################
### Giella-shared dir:
################
# 1. check --with-giella-shared option
# 2. check env GIELLA_SHARED, then GIELLA_HOME, then GTHOME, then GTCORE
# 3. check using pkg-config
# 4. error if not found


# Check whether --with-giella-shared was given.
if test ${with_giella_shared+y}
then :
  withval=$with_giella_shared; with_giella_shared=$withval
else $as_nop
  with_giella_shared=false
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we can set GIELLA_SHARED" >&5
printf %s "checking whether we can set GIELLA_SHARED... " >&6; }
# --with-giella-shared overrides everything:
if test "x$with_giella_shared" != "xfalse" -a \
    -d "$with_giella_shared"/all_langs
then :

    GIELLA_SHARED="$with_giella_shared"

else $as_nop

    # Check in the parent directory:
    if test -d "$THIS_TOP_SRC_DIR"/../giella-shared/all_langs
then :

        GIELLA_SHARED="$THIS_TOP_SRC_DIR"/../giella-shared

else $as_nop

        if pkg-config --exists giella-common
then :

            GIELLA_SHARED="$(pkg-config --variable=dir giella-common)"

else $as_nop

     as_fn_error $? "Could not find giella-common data dir to set GIELLA_SHARED" "$LINENO" 5

fi

fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GIELLA_SHARED" >&5
printf "%s\n" "$GIELLA_SHARED" >&6; }

### This is the version of the Giella Shared that we require. Update as needed.
### It is possible to specify also subversion revision: 0.1.2-12345
_giella_shared_min_version=0.2.0

# GIELLA_SHARED is required by the infrastructure to find shared data:


##### Check the version of giella-shared, and stop with error message if too old:
# This is the error message:
giella_shared_too_old_message="

The giella-shared is too old, we require at least $_giella_shared_min_version.

*** ==> PLEASE ENTER THE FOLLOWING COMMANDS: <== ***

cd $GIELLA_SHARED
svn up
./autogen.sh # required only the first time
./configure  # required only the first time
make
"

# Identify the version of giella-shared:
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking the version of Giella Shared" >&5
printf %s "checking the version of Giella Shared... " >&6; }
_giella_shared_version=$( pkg-config --modversion "$GIELLA_SHARED"/giella-common.pc )

# Check whether a version info string was found:
case "$_giella_shared_version" in    # branch to the first pattern
  "")
    _giella_shared_version_found=no  # do this if empty string
    ;;                               # end of this case branch
  *!0-9.*)                         # pattern = anything containing a non-digit
    _giella_shared_version_found=no  # do this if the pattern triggered
    ;;                               # end of this case branch
  *)                                 # pattern = anything (else)
    _giella_shared_version_found=yes # do this when matching a version string
    ;;                               # end of this case branch
esac

# If not, recheck using standard pkg-config locations:
if test "x$_giella_shared_version_found" = xno
then :

    _giella_shared_version=$( pkg-config --modversion giella-common )

elif test "x$_giella_shared_version_found" = xyes
then :

    true

else $as_nop
  as_fn_error $? "Could not identify version of giella-common shared data" "$LINENO" 5
fi

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $_giella_shared_version" >&5
printf "%s\n" "$_giella_shared_version" >&6; }

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the version of Giella Shared is at least $_giella_shared_min_version" >&5
printf %s "checking whether the version of Giella Shared is at least $_giella_shared_min_version... " >&6; }
# Compare it to the required version, and error out if too old:



  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.

  ax_compare_version_A=`echo "$_giella_shared_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


  ax_compare_version_B=`echo "$_giella_shared_min_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


    ax_compare_version=`echo "x$ax_compare_version_A
x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`



    if test "$ax_compare_version" = "true" ; then
    giella_shared_version_ok=yes
    else giella_shared_version_ok=no
  fi

if test "x${giella_shared_version_ok}" != xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $giella_shared_version_ok" >&5
printf "%s\n" "$giella_shared_version_ok" >&6; }
else $as_nop
  as_fn_error $? "$giella_shared_too_old_message" "$LINENO" 5
fi


################################
### Giella-libs dir:
################
# 1. check --with-giella-libs option
# 2. check env GIELLA_LIBS, then GIELLA_HOME, then GTHOME
# 3. empty if not found


# Check whether --with-giella-libs was given.
if test ${with_giella_libs+y}
then :
  withval=$with_giella_libs; with_giella_libs=$withval
else $as_nop
  with_giella_libs=false
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we can set GIELLA_LIBS" >&5
printf %s "checking whether we can set GIELLA_LIBS... " >&6; }
# --with-giella-libs overrides everything:
if test "x$with_giella_libs" != "xfalse" -a \
          -d "$with_giella_libs"
then :

    GIELLA_LIBS=$with_giella_libs

else $as_nop

    # GIELLA_LIBS is the env. variable for this dir:
    if test "x$GIELLA_LIBS" != "x" -a \
              -d "$GIELLA_LIBS"
then :

else $as_nop

        # GIELLA_HOME is the new GTHOME:
        if test "x$GIELLA_HOME" != "x" -a \
                  -d "$GIELLA_HOME/giella-libs"
then :

            GIELLA_LIBS=$GIELLA_HOME/giella-libs

else $as_nop

            # GTHOME for backwards compatibility - it is deprecated:
            if test "x$GTHOME" != "x" -a \
                      -d "$GTHOME/giella-libs"
then :

                GIELLA_LIBS=$GTHOME/giella-libs

else $as_nop

                GIELLA_LIBS=no

fi

fi

fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GIELLA_LIBS" >&5
printf "%s\n" "$GIELLA_LIBS" >&6; }

# GIELLA_LIBS is needed for speller builds, but if not found, we'll try to fetch over the net:


################################
### Some software that we either depend on or we need for certain functionality:
################

################ Weighted fst's ################
# Extract the first word of "bc", so it can be a program name with args.
set dummy bc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_BC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $BC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_BC="$BC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_bc
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_BC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_BC" && ac_cv_path_BC="false"
  ;;
esac
fi
BC=$ac_cv_path_BC
if test -n "$BC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $BC" >&5
printf "%s\n" "$BC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



################ YAML-based testing ################
# Check whether --enable-yamltests was given.
if test ${enable_yamltests+y}
then :
  enableval=$enable_yamltests; enable_yamltests=$enableval
else $as_nop
  enable_yamltests=check
fi


if test "x$enable_yamltests" = "xcheck"
then :






        if test -n "$PYTHON"; then
      # If the user set $PYTHON, use it and don't search something else.
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $PYTHON version is >= 3.5" >&5
printf %s "checking whether $PYTHON version is >= 3.5... " >&6; }
      prog="import sys
# split strings by '.' and convert to numeric.  Append some zeros
# because we need at least 4 digits for the hex conversion.
# map returns an iterator in Python 3.0 and a list in 2.x
minver = list(map(int, '3.5'.split('.'))) + [0, 0, 0]
minverhex = 0
# xrange is not present in Python 3.0 and range returns an iterator
for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
sys.exit(sys.hexversion < minverhex)"
  if { echo "$as_me:$LINENO: $PYTHON -c "$prog"" >&5
   ($PYTHON -c "$prog") >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			       as_fn_error $? "Python interpreter is too old" "$LINENO" 5
fi
      am_display_PYTHON=$PYTHON
    else
      # Otherwise, try each interpreter until we find one that satisfies
      # VERSION.
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a Python interpreter with version >= 3.5" >&5
printf %s "checking for a Python interpreter with version >= 3.5... " >&6; }
if test ${am_cv_pathless_PYTHON+y}
then :
  printf %s "(cached) " >&6
else $as_nop

	for am_cv_pathless_PYTHON in python python2 python3  python3.9 python3.8 python3.7 python3.6 python3.5 python3.4 python3.3  python3.2 python3.1 python3.0  python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1  python2.0 none; do
	  test "$am_cv_pathless_PYTHON" = none && break
	  prog="import sys
# split strings by '.' and convert to numeric.  Append some zeros
# because we need at least 4 digits for the hex conversion.
# map returns an iterator in Python 3.0 and a list in 2.x
minver = list(map(int, '3.5'.split('.'))) + [0, 0, 0]
minverhex = 0
# xrange is not present in Python 3.0 and range returns an iterator
for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
sys.exit(sys.hexversion < minverhex)"
  if { echo "$as_me:$LINENO: $am_cv_pathless_PYTHON -c "$prog"" >&5
   ($am_cv_pathless_PYTHON -c "$prog") >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
then :
  break
fi
	done
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_pathless_PYTHON" >&5
printf "%s\n" "$am_cv_pathless_PYTHON" >&6; }
      # Set $PYTHON to the absolute path of $am_cv_pathless_PYTHON.
      if test "$am_cv_pathless_PYTHON" = none; then
	PYTHON=:
      else
        # Extract the first word of "$am_cv_pathless_PYTHON", so it can be a program name with args.
set dummy $am_cv_pathless_PYTHON; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PYTHON+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PYTHON in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PYTHON="$PYTHON" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PYTHON="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PYTHON=$ac_cv_path_PYTHON
if test -n "$PYTHON"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON" >&5
printf "%s\n" "$PYTHON" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


      fi
      am_display_PYTHON=$am_cv_pathless_PYTHON
    fi


  if test "$PYTHON" = :; then
      :
  else


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON version" >&5
printf %s "checking for $am_display_PYTHON version... " >&6; }
if test ${am_cv_python_version+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_version=`$PYTHON -c "import sys; print('%u.%u' % sys.version_info[:2])"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
printf "%s\n" "$am_cv_python_version" >&6; }
  PYTHON_VERSION=$am_cv_python_version



  PYTHON_PREFIX='${prefix}'

  PYTHON_EXEC_PREFIX='${exec_prefix}'



  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON platform" >&5
printf %s "checking for $am_display_PYTHON platform... " >&6; }
if test ${am_cv_python_platform+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_platform=`$PYTHON -c "import sys; sys.stdout.write(sys.platform)"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_platform" >&5
printf "%s\n" "$am_cv_python_platform" >&6; }
  PYTHON_PLATFORM=$am_cv_python_platform


  # Just factor out some code duplication.
  am_python_setup_sysconfig="\
import sys
# Prefer sysconfig over distutils.sysconfig, for better compatibility
# with python 3.x.  See automake bug#10227.
try:
    import sysconfig
except ImportError:
    can_use_sysconfig = 0
else:
    can_use_sysconfig = 1
# Can't use sysconfig in CPython 2.7, since it's broken in virtualenvs:
# <https://github.com/pypa/virtualenv/issues/118>
try:
    from platform import python_implementation
    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
        can_use_sysconfig = 0
except ImportError:
    pass"


            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON script directory" >&5
printf %s "checking for $am_display_PYTHON script directory... " >&6; }
if test ${am_cv_python_pythondir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$prefix" = xNONE
     then
       am_py_prefix=$ac_default_prefix
     else
       am_py_prefix=$prefix
     fi
     am_cv_python_pythondir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
    sitedir = sysconfig.get_path('purelib')
else:
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(0, 0)
sys.stdout.write(sitedir)"`
     case $am_cv_python_pythondir in
     $am_py_prefix*)
       am__strip_prefix=`echo "$am_py_prefix" | sed 's|.|.|g'`
       am_cv_python_pythondir=`echo "$am_cv_python_pythondir" | sed "s,^$am__strip_prefix,$PYTHON_PREFIX,"`
       ;;
     *)
       case $am_py_prefix in
         /usr|/System*) ;;
         *)
	  am_cv_python_pythondir=$PYTHON_PREFIX/lib/python$PYTHON_VERSION/site-packages
	  ;;
       esac
       ;;
     esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_pythondir" >&5
printf "%s\n" "$am_cv_python_pythondir" >&6; }
  pythondir=$am_cv_python_pythondir



  pkgpythondir=\${pythondir}/$PACKAGE


        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON extension module directory" >&5
printf %s "checking for $am_display_PYTHON extension module directory... " >&6; }
if test ${am_cv_python_pyexecdir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$exec_prefix" = xNONE
     then
       am_py_exec_prefix=$am_py_prefix
     else
       am_py_exec_prefix=$exec_prefix
     fi
     am_cv_python_pyexecdir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
    sitedir = sysconfig.get_path('platlib')
else:
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(1, 0)
sys.stdout.write(sitedir)"`
     case $am_cv_python_pyexecdir in
     $am_py_exec_prefix*)
       am__strip_prefix=`echo "$am_py_exec_prefix" | sed 's|.|.|g'`
       am_cv_python_pyexecdir=`echo "$am_cv_python_pyexecdir" | sed "s,^$am__strip_prefix,$PYTHON_EXEC_PREFIX,"`
       ;;
     *)
       case $am_py_exec_prefix in
         /usr|/System*) ;;
         *)
	   am_cv_python_pyexecdir=$PYTHON_EXEC_PREFIX/lib/python$PYTHON_VERSION/site-packages
	   ;;
       esac
       ;;
     esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_pyexecdir" >&5
printf "%s\n" "$am_cv_python_pyexecdir" >&6; }
  pyexecdir=$am_cv_python_pyexecdir



  pkgpyexecdir=\${pyexecdir}/$PACKAGE



  fi



    if test -z $PYTHON;
    then
        PYTHON="python"
    fi
    PYTHON_NAME=`basename $PYTHON`
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking $PYTHON_NAME module: yaml" >&5
printf %s "checking $PYTHON_NAME module: yaml... " >&6; }
	$PYTHON -c "import yaml" 2>/dev/null
	if test $? -eq 0;
	then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		eval HAVE_PYMOD_YAML=yes
	else
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		eval HAVE_PYMOD_YAML=no
		#
		if test -n ""
		then
			as_fn_error $? "failed to find required module yaml" "$LINENO" 5
			exit 1
		fi
	fi

     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable yaml-based test" >&5
printf %s "checking whether to enable yaml-based test... " >&6; }
     if test "$PYTHON" = ":"
then :
  enable_yamltests=no
            new_enough_python_available=no
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no, python is missing or old" >&5
printf "%s\n" "no, python is missing or old" >&6; }

else $as_nop
  if test "x$HAVE_PYMOD_YAML" != "xyes"
then :
  enable_yamltests=no
                   new_enough_python_available=yes
                   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no, yaml is missing" >&5
printf "%s\n" "no, yaml is missing" >&6; }

else $as_nop
  enable_yamltests=yes
                   new_enough_python_available=yes
                   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
fi
fi
fi

 if test "x$enable_yamltests" != xno; then
  CAN_YAML_TEST_TRUE=
  CAN_YAML_TEST_FALSE='#'
else
  CAN_YAML_TEST_TRUE='#'
  CAN_YAML_TEST_FALSE=
fi


################ Generated documentation ################
# Check for awk with required feature:
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for awk that supports gensub" >&5
printf %s "checking for awk that supports gensub... " >&6; }
if test ${ac_cv_path_GAWK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$GAWK"; then
  ac_path_GAWK_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in awk mawk nawk gawk
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_GAWK="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_GAWK" || continue
awkout=`$ac_path_GAWK 'BEGIN{gensub(/a/,"b","g");}'; exvalue=$?; echo $exvalue`
      test "x$awkout" = x0 \
      && ac_cv_path_GAWK=$ac_path_GAWK ac_path_GAWK_found=:
      $ac_path_GAWK_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_GAWK"; then
    as_fn_error $? "could not find awk that supports gensub - please install GNU awk. hint: sudo port install gawk" "$LINENO" 5
  fi
else
  ac_cv_path_GAWK=$GAWK
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GAWK" >&5
printf "%s\n" "$ac_cv_path_GAWK" >&6; }
GAWK=$ac_cv_path_GAWK

# Check for sed with required feature:
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for sed that supports newlines and pipes" >&5
printf %s "checking for sed that supports newlines and pipes... " >&6; }
if test ${ac_cv_path_SED+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$SED"; then
  ac_path_SED_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in sed gsed gnused
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_SED="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_SED" || continue
m4out=`echo aaa | $ac_path_SED 's/a/\n/g' | wc -l | tr -d '[:space:] '`
                test "x$m4out" = x4\
      && ac_cv_path_SED=$ac_path_SED ac_path_SED_found=:
      $ac_path_SED_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_SED"; then
    as_fn_error $? "could not find sed that supports stuff - please install GNU sed. hint: sudo port install gsed./c" "$LINENO" 5
  fi
else
  ac_cv_path_SED=$SED
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
printf "%s\n" "$ac_cv_path_SED" >&6; }
SED=$ac_cv_path_SED


# Check for Forrest:

# Check whether --with-forrest was given.
if test ${with_forrest+y}
then :
  withval=$with_forrest; with_forrest=$withval
else $as_nop
  with_forrest=no
fi

# Extract the first word of "forrest", so it can be a program name with args.
set dummy forrest; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_FORREST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $FORREST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_FORREST="$FORREST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_forrest
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_FORREST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
FORREST=$ac_cv_path_FORREST
if test -n "$FORREST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $FORREST" >&5
printf "%s\n" "$FORREST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to do forrest validation of in-source documentation" >&5
printf %s "checking whether to do forrest validation of in-source documentation... " >&6; }
if test "x$GAWK" != x
then :

    if test "x$JV" != xfalse
then :

    	if test "x$with_forrest" = xyes
then :

        	if test "x$FORREST" != x
then :
  giellalt_forrest_validation=yes
else $as_nop
  giellalt_forrest_validation=no
fi

else $as_nop
  giellalt_forrest_validation=no
fi

else $as_nop
  giellalt_forrest_validation=no
fi

else $as_nop
  giellalt_forrest_validation=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $giellalt_forrest_validation" >&5
printf "%s\n" "$giellalt_forrest_validation" >&6; }
 if test "x$giellalt_forrest_validation" != xno; then
  CAN_FORREST_VALIDATE_TRUE=
  CAN_FORREST_VALIDATE_FALSE='#'
else
  CAN_FORREST_VALIDATE_TRUE='#'
  CAN_FORREST_VALIDATE_FALSE=
fi


# Check for npm etc. stuff for divvunspell stats

# Check whether --with-npm was given.
if test ${with_npm+y}
then :
  withval=$with_npm; with_npm=$withval
else $as_nop
  with_npm=no
fi

# Extract the first word of "npm", so it can be a program name with args.
set dummy npm; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_NPM+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $NPM in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_NPM="$NPM" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_npm
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_NPM="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
NPM=$ac_cv_path_NPM
if test -n "$NPM"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $NPM" >&5
printf "%s\n" "$NPM" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "R", so it can be a program name with args.
set dummy R; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_R+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $R in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_R="$R" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_R
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_R="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
R=$ac_cv_path_R
if test -n "$R"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $R" >&5
printf "%s\n" "$R" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



# Check whether --with-divvunspell was given.
if test ${with_divvunspell+y}
then :
  withval=$with_divvunspell; with_divvunspell=$withval
else $as_nop
  with_divvunspell=no
fi

# Extract the first word of "accuracy", so it can be a program name with args.
set dummy accuracy; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_DIVVUN_ACCURACY+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $DIVVUN_ACCURACY in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_DIVVUN_ACCURACY="$DIVVUN_ACCURACY" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_divvunspell
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_DIVVUN_ACCURACY="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
DIVVUN_ACCURACY=$ac_cv_path_DIVVUN_ACCURACY
if test -n "$DIVVUN_ACCURACY"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DIVVUN_ACCURACY" >&5
printf "%s\n" "$DIVVUN_ACCURACY" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi





################ can rsync oxt template? ################
# Extract the first word of "rsync", so it can be a program name with args.
set dummy rsync; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_RSYNC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $RSYNC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_RSYNC="$RSYNC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_rsync
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_RSYNC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_RSYNC" && ac_cv_path_RSYNC="no"
  ;;
esac
fi
RSYNC=$ac_cv_path_RSYNC
if test -n "$RSYNC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $RSYNC" >&5
printf "%s\n" "$RSYNC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "wget", so it can be a program name with args.
set dummy wget; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_WGET+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $WGET in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_WGET="$WGET" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_wget
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_WGET="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_WGET" && ac_cv_path_WGET="no"
  ;;
esac
fi
WGET=$ac_cv_path_WGET
if test -n "$WGET"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $WGET" >&5
printf "%s\n" "$WGET" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



if test "x$GIELLA_LIBS" != "xno" -a \
            "x$RSYNC"       != "xno"
then :
  can_local_sync=yes
else $as_nop

       can_local_sync=no
       if test "x$WGET" != "xno"
then :
  can_wget_giella_libs=yes
else $as_nop
  can_wget_giella_libs=no
fi

fi
 if test "x$can_local_sync" != xno ; then
  CAN_LOCALSYNC_TRUE=
  CAN_LOCALSYNC_FALSE='#'
else
  CAN_LOCALSYNC_TRUE='#'
  CAN_LOCALSYNC_FALSE=
fi

 if test "x$can_wget_giella_libs" != xno ; then
  CAN_REMOTE_SYNC_TRUE=
  CAN_REMOTE_SYNC_FALSE='#'
else
  CAN_REMOTE_SYNC_TRUE='#'
  CAN_REMOTE_SYNC_FALSE=
fi


################ Look for available diff and merge tools: ################
for ac_prog in opendiff kdiff3 meld diffuse kompare
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_DIFFTOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $DIFFTOOL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_DIFFTOOL="$DIFFTOOL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_difftool
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_DIFFTOOL="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
DIFFTOOL=$ac_cv_path_DIFFTOOL
if test -n "$DIFFTOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DIFFTOOL" >&5
printf "%s\n" "$DIFFTOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$DIFFTOOL" && break
done
test -n "$DIFFTOOL" || DIFFTOOL="no"


case $DIFFTOOL in
  *kdiff3 |\
  *meld   |\
  *opendiff )
        can_merge=yes
        ;;
  *)
        can_merge=no
        ;;
esac
 if test "x$can_merge" != xno ; then
  CAN_MERGE_TRUE=
  CAN_MERGE_FALSE='#'
else
  CAN_MERGE_TRUE='#'
  CAN_MERGE_FALSE=
fi


################ GNU Make at least 3.82 on non-OSX systems: ################
#
# Platform specific setup
#
#############################

# Check for which host we are on and setup a few things
# specifically based on the host
# This is the minimum GNU Make version required (except on OSX):
_GNU_make_min_version=3.82

# Then we check against different hosts:
case $host_os in
  darwin* )
        # Do nothing for mac: the included make is fine
        true
        ;;
    *)
        # Default Case: in all other cases check that we are using GNU make
        # and that it is new enough:
          for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_AWK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_AWK="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
printf "%s\n" "$AWK" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$AWK" && break
done

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU make" >&5
printf %s "checking for GNU make... " >&6; }
if test ${_cv_gnu_make_command+y}
then :
  printf %s "(cached) " >&6
else $as_nop
      _cv_gnu_make_command="" ;
    for a in "$MAKE" make gmake gnumake ; do
      if test -z "$a" ; then continue ; fi ;
      if "$a" --version 2> /dev/null | grep GNU 2>&1 > /dev/null ; then
        _cv_gnu_make_command=$a ;
        AX_CHECK_GNU_MAKE_HEADLINE=$("$a" --version 2> /dev/null | grep "GNU Make")
        ax_check_gnu_make_version=$(echo ${AX_CHECK_GNU_MAKE_HEADLINE} | ${AWK} -F " " '{ print $(NF); }')
        break ;
      fi
    done ;
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $_cv_gnu_make_command" >&5
printf "%s\n" "$_cv_gnu_make_command" >&6; }
  if test "x$_cv_gnu_make_command" = x""
then :
  ifGNUmake="#"
else $as_nop
  ifGNUmake=""
fi
  if test "x$_cv_gnu_make_command" = x""
then :
  { ax_cv_gnu_make_command=; unset ax_cv_gnu_make_command;}
else $as_nop
  ax_cv_gnu_make_command=${_cv_gnu_make_command}
fi


        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GNU make is at least $_GNU_make_min_version" >&5
printf %s "checking whether GNU make is at least $_GNU_make_min_version... " >&6; }



  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.

  ax_compare_version_A=`echo "$ax_check_gnu_make_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


  ax_compare_version_B=`echo "$_GNU_make_min_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


    ax_compare_version=`echo "x$ax_compare_version_A
x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`



    if test "$ax_compare_version" = "true" ; then

                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
                    # Reset the MAKE variable, to ensure we're using GNU make:
                    MAKE=$_cv_gnu_make_command

    else as_fn_error $? "GNU Make too old ($ax_check_gnu_make_version), please install at least $_GNU_make_min_version" "$LINENO" 5

  fi

        ;;
esac
################ END of GNU Make check ################

# We need special treatment of Java paths in Cygwin:

case "${host}" in
  *-cygwin* | *-mingw*)
    CYGWINJAVAPATH='cygpath -m'
    ;;
  *)
    # Assume Unix.
    CYGWINJAVAPATH=echo
    ;;
esac


# Check for SubEthaEdit/see
# Extract the first word of "see", so it can be a program name with args.
set dummy see; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_SEE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $SEE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SEE="$SEE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_see
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_SEE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SEE=$ac_cv_path_SEE
if test -n "$SEE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $SEE" >&5
printf "%s\n" "$SEE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



# Check for grammar checker validation tool:
# Extract the first word of "divvun-validate-suggest", so it can be a program name with args.
set dummy divvun-validate-suggest; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_DIVVUN_VALIDATE_SUGGEST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $DIVVUN_VALIDATE_SUGGEST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_DIVVUN_VALIDATE_SUGGEST="$DIVVUN_VALIDATE_SUGGEST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_divvun_validate_suggest
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_DIVVUN_VALIDATE_SUGGEST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_DIVVUN_VALIDATE_SUGGEST" && ac_cv_path_DIVVUN_VALIDATE_SUGGEST="no"
  ;;
esac
fi
DIVVUN_VALIDATE_SUGGEST=$ac_cv_path_DIVVUN_VALIDATE_SUGGEST
if test -n "$DIVVUN_VALIDATE_SUGGEST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DIVVUN_VALIDATE_SUGGEST" >&5
printf "%s\n" "$DIVVUN_VALIDATE_SUGGEST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Check for grammar checker (for self-test)
# Extract the first word of "divvun-checker", so it can be a program name with args.
set dummy divvun-checker; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_DIVVUN_CHECKER+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $DIVVUN_CHECKER in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_DIVVUN_CHECKER="$DIVVUN_CHECKER" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_divvun_validate_suggest
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_DIVVUN_CHECKER="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_DIVVUN_CHECKER" && ac_cv_path_DIVVUN_CHECKER="no"
  ;;
esac
fi
DIVVUN_CHECKER=$ac_cv_path_DIVVUN_CHECKER
if test -n "$DIVVUN_CHECKER"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DIVVUN_CHECKER" >&5
printf "%s\n" "$DIVVUN_CHECKER" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi





# Tests and sets up XFST

# Check whether --with-xfst was given.
if test ${with_xfst+y}
then :
  withval=$with_xfst; with_xfst=$withval
else $as_nop
  with_xfst=$DEFAULT_XFST
fi

# Extract the first word of "printf", so it can be a program name with args.
set dummy printf; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PRINTF+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PRINTF in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PRINTF="$PRINTF" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PRINTF="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_PRINTF" && ac_cv_path_PRINTF="echo -n"
  ;;
esac
fi
PRINTF=$ac_cv_path_PRINTF
if test -n "$PRINTF"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PRINTF" >&5
printf "%s\n" "$PRINTF" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "xfst", so it can be a program name with args.
set dummy xfst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_XFST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $XFST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_XFST="$XFST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_xfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_XFST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_XFST" && ac_cv_path_XFST="false"
  ;;
esac
fi
XFST=$ac_cv_path_XFST
if test -n "$XFST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $XFST" >&5
printf "%s\n" "$XFST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "twolc", so it can be a program name with args.
set dummy twolc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_TWOLC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $TWOLC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TWOLC="$TWOLC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_xfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_TWOLC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_TWOLC" && ac_cv_path_TWOLC="false"
  ;;
esac
fi
TWOLC=$ac_cv_path_TWOLC
if test -n "$TWOLC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $TWOLC" >&5
printf "%s\n" "$TWOLC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "lexc", so it can be a program name with args.
set dummy lexc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_LEXC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $LEXC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_LEXC="$LEXC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_xfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_LEXC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_LEXC" && ac_cv_path_LEXC="false"
  ;;
esac
fi
LEXC=$ac_cv_path_LEXC
if test -n "$LEXC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LEXC" >&5
printf "%s\n" "$LEXC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "lookup", so it can be a program name with args.
set dummy lookup; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_LOOKUP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $LOOKUP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_LOOKUP="$LOOKUP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_xfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_LOOKUP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_LOOKUP" && ac_cv_path_LOOKUP="false"
  ;;
esac
fi
LOOKUP=$ac_cv_path_LOOKUP
if test -n "$LOOKUP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LOOKUP" >&5
printf "%s\n" "$LOOKUP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable xfst building" >&5
printf %s "checking whether to enable xfst building... " >&6; }
if test x$with_xfst != xno
then :

    if test "x$XFST"   != xfalse -a \
                "x$TWOLC"  != xfalse -a \
                "x$LEXC"   != xfalse -a \
                "x$LOOKUP" != xfalse
then :
  gt_prog_xfst=yes
else $as_nop
  gt_prog_xfst=no
fi

else $as_nop
  gt_prog_xfst=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_prog_xfst" >&5
printf "%s\n" "$gt_prog_xfst" >&6; }
 if test "x$gt_prog_xfst" != xno; then
  CAN_XFST_TRUE=
  CAN_XFST_FALSE='#'
else
  CAN_XFST_TRUE='#'
  CAN_XFST_FALSE=
fi



# Tests and sets up FOMA

# Check whether --with-foma was given.
if test ${with_foma+y}
then :
  withval=$with_foma; with_foma=$withval
else $as_nop
  with_foma=$DEFAULT_FOMA
fi


# If Xerox tools and Hfst are not found, assume we want Foma:
if test x$gt_prog_xfst = xno \
         -a x$gt_prog_hfst = xno \
         -a "x$with_xfst" != xno \
         -a "x$with_hfst" != xno
then :

      with_foma=yes
      fallback_to_foma="INFO: Neither Xfst nor Hfst were found, falling back to using Foma"

fi

# Extract the first word of "printf", so it can be a program name with args.
set dummy printf; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PRINTF+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PRINTF in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PRINTF="$PRINTF" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PRINTF="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_PRINTF" && ac_cv_path_PRINTF="echo -n"
  ;;
esac
fi
PRINTF=$ac_cv_path_PRINTF
if test -n "$PRINTF"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PRINTF" >&5
printf "%s\n" "$PRINTF" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "foma", so it can be a program name with args.
set dummy foma; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_FOMA+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $FOMA in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_FOMA="$FOMA" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_foma
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_FOMA="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_FOMA" && ac_cv_path_FOMA="false"
  ;;
esac
fi
FOMA=$ac_cv_path_FOMA
if test -n "$FOMA"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $FOMA" >&5
printf "%s\n" "$FOMA" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "flookup", so it can be a program name with args.
set dummy flookup; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_FLOOKUP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $FLOOKUP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_FLOOKUP="$FLOOKUP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_foma
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_FLOOKUP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_FLOOKUP" && ac_cv_path_FLOOKUP="false"
  ;;
esac
fi
FLOOKUP=$ac_cv_path_FLOOKUP
if test -n "$FLOOKUP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $FLOOKUP" >&5
printf "%s\n" "$FLOOKUP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "cgflookup", so it can be a program name with args.
set dummy cgflookup; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_CGFLOOKUP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $CGFLOOKUP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CGFLOOKUP="$CGFLOOKUP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_foma
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_CGFLOOKUP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_CGFLOOKUP" && ac_cv_path_CGFLOOKUP="false"
  ;;
esac
fi
CGFLOOKUP=$ac_cv_path_CGFLOOKUP
if test -n "$CGFLOOKUP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CGFLOOKUP" >&5
printf "%s\n" "$CGFLOOKUP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable foma building" >&5
printf %s "checking whether to enable foma building... " >&6; }
if test x$with_foma != xno
then :

    if test "x$FOMA"      != xfalse -a \
                "x$FLOOKUP"   != xfalse -a \
                "x$CGFLOOKUP" != xfalse
then :
  gt_prog_foma=yes
else $as_nop
  gt_prog_foma=no
fi

else $as_nop
  gt_prog_foma=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_prog_foma" >&5
printf "%s\n" "$gt_prog_foma" >&6; }

if test x$gt_prog_foma = xyes \
      -a "x$(grep 'GT_PHONOLOGY_MAIN' ${srcdir}/src/fst/Makefile*.am \
      	| grep 'twolc')" != "x"
then :
  as_fn_error $? "You only have Foma, or you requested to use Foma, but \
your main phonology file is a twolc file, which Foma can not compile. You need \
to use either Hfst or the Xerox FSM tools when compiling transducers for \
$GLANG ($GLANGUAGE).
" "$LINENO" 5
fi

 if test "x$gt_prog_foma" != xno; then
  CAN_FOMA_TRUE=
  CAN_FOMA_FALSE='#'
else
  CAN_FOMA_TRUE='#'
  CAN_FOMA_FALSE=
fi

 if test "x$FOMA" != xfalse ; then
  HAS_FOMA_TRUE=
  HAS_FOMA_FALSE='#'
else
  HAS_FOMA_TRUE='#'
  HAS_FOMA_FALSE=
fi



# Tests and sets up HFST


### Required version of the Hfst tools:
_required_hfst_version=3.12.2


# Check whether --with-hfst was given.
if test ${with_hfst+y}
then :
  withval=$with_hfst; with_hfst=$withval
else $as_nop
  with_hfst=$DEFAULT_HFST
fi


# If Xerox tools are not found, assume we want Hfst:
if test "x$DEFAULT_HFST" = xno \
         -a "x$gt_prog_xfst" = xno \
         -a "x$gt_prog_foma" = xno
then :

         with_hfst=yes
         fallback_to_hfst="INFO: Xfst was not found, falling back to using Hfst"

fi

# Extract the first word of "hfst-compose", so it can be a program name with args.
set dummy hfst-compose; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_COMPOSE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_COMPOSE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_COMPOSE="$HFST_COMPOSE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_COMPOSE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_COMPOSE" && ac_cv_path_HFST_COMPOSE="false"
  ;;
esac
fi
HFST_COMPOSE=$ac_cv_path_HFST_COMPOSE
if test -n "$HFST_COMPOSE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_COMPOSE" >&5
printf "%s\n" "$HFST_COMPOSE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-compose-intersect", so it can be a program name with args.
set dummy hfst-compose-intersect; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_COMPOSE_INTERSECT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_COMPOSE_INTERSECT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_COMPOSE_INTERSECT="$HFST_COMPOSE_INTERSECT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_COMPOSE_INTERSECT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_COMPOSE_INTERSECT" && ac_cv_path_HFST_COMPOSE_INTERSECT="false"
  ;;
esac
fi
HFST_COMPOSE_INTERSECT=$ac_cv_path_HFST_COMPOSE_INTERSECT
if test -n "$HFST_COMPOSE_INTERSECT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_COMPOSE_INTERSECT" >&5
printf "%s\n" "$HFST_COMPOSE_INTERSECT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-concatenate", so it can be a program name with args.
set dummy hfst-concatenate; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_CONCATENATE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_CONCATENATE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_CONCATENATE="$HFST_CONCATENATE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_CONCATENATE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_CONCATENATE" && ac_cv_path_HFST_CONCATENATE="false"
  ;;
esac
fi
HFST_CONCATENATE=$ac_cv_path_HFST_CONCATENATE
if test -n "$HFST_CONCATENATE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_CONCATENATE" >&5
printf "%s\n" "$HFST_CONCATENATE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-conjunct", so it can be a program name with args.
set dummy hfst-conjunct; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_CONJUNCT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_CONJUNCT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_CONJUNCT="$HFST_CONJUNCT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_CONJUNCT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_CONJUNCT" && ac_cv_path_HFST_CONJUNCT="false"
  ;;
esac
fi
HFST_CONJUNCT=$ac_cv_path_HFST_CONJUNCT
if test -n "$HFST_CONJUNCT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_CONJUNCT" >&5
printf "%s\n" "$HFST_CONJUNCT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-determinize", so it can be a program name with args.
set dummy hfst-determinize; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_DETERMINIZE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_DETERMINIZE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_DETERMINIZE="$HFST_DETERMINIZE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_DETERMINIZE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_DETERMINIZE" && ac_cv_path_HFST_DETERMINIZE="false"
  ;;
esac
fi
HFST_DETERMINIZE=$ac_cv_path_HFST_DETERMINIZE
if test -n "$HFST_DETERMINIZE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_DETERMINIZE" >&5
printf "%s\n" "$HFST_DETERMINIZE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-disjunct", so it can be a program name with args.
set dummy hfst-disjunct; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_DISJUNCT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_DISJUNCT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_DISJUNCT="$HFST_DISJUNCT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_DISJUNCT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_DISJUNCT" && ac_cv_path_HFST_DISJUNCT="false"
  ;;
esac
fi
HFST_DISJUNCT=$ac_cv_path_HFST_DISJUNCT
if test -n "$HFST_DISJUNCT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_DISJUNCT" >&5
printf "%s\n" "$HFST_DISJUNCT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-foma", so it can be a program name with args.
set dummy hfst-foma; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_FOMA+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_FOMA in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_FOMA="$HFST_FOMA" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_FOMA="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_FOMA" && ac_cv_path_HFST_FOMA="false"
  ;;
esac
fi
HFST_FOMA=$ac_cv_path_HFST_FOMA
if test -n "$HFST_FOMA"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_FOMA" >&5
printf "%s\n" "$HFST_FOMA" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-fst2fst", so it can be a program name with args.
set dummy hfst-fst2fst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_FST2FST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_FST2FST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_FST2FST="$HFST_FST2FST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_FST2FST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_FST2FST" && ac_cv_path_HFST_FST2FST="false"
  ;;
esac
fi
HFST_FST2FST=$ac_cv_path_HFST_FST2FST
if test -n "$HFST_FST2FST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_FST2FST" >&5
printf "%s\n" "$HFST_FST2FST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-fst2strings", so it can be a program name with args.
set dummy hfst-fst2strings; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_FST2STRINGS+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_FST2STRINGS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_FST2STRINGS="$HFST_FST2STRINGS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_FST2STRINGS="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_FST2STRINGS" && ac_cv_path_HFST_FST2STRINGS="false"
  ;;
esac
fi
HFST_FST2STRINGS=$ac_cv_path_HFST_FST2STRINGS
if test -n "$HFST_FST2STRINGS"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_FST2STRINGS" >&5
printf "%s\n" "$HFST_FST2STRINGS" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-fst2txt", so it can be a program name with args.
set dummy hfst-fst2txt; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_FST2TXT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_FST2TXT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_FST2TXT="$HFST_FST2TXT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_FST2TXT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_FST2TXT" && ac_cv_path_HFST_FST2TXT="false"
  ;;
esac
fi
HFST_FST2TXT=$ac_cv_path_HFST_FST2TXT
if test -n "$HFST_FST2TXT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_FST2TXT" >&5
printf "%s\n" "$HFST_FST2TXT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-info", so it can be a program name with args.
set dummy hfst-info; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_INFO+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_INFO in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_INFO="$HFST_INFO" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_INFO="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_INFO" && ac_cv_path_HFST_INFO="false"
  ;;
esac
fi
HFST_INFO=$ac_cv_path_HFST_INFO
if test -n "$HFST_INFO"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_INFO" >&5
printf "%s\n" "$HFST_INFO" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-intersect", so it can be a program name with args.
set dummy hfst-intersect; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_INTERSECT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_INTERSECT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_INTERSECT="$HFST_INTERSECT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_INTERSECT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_INTERSECT" && ac_cv_path_HFST_INTERSECT="false"
  ;;
esac
fi
HFST_INTERSECT=$ac_cv_path_HFST_INTERSECT
if test -n "$HFST_INTERSECT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_INTERSECT" >&5
printf "%s\n" "$HFST_INTERSECT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-invert", so it can be a program name with args.
set dummy hfst-invert; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_INVERT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_INVERT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_INVERT="$HFST_INVERT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_INVERT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_INVERT" && ac_cv_path_HFST_INVERT="false"
  ;;
esac
fi
HFST_INVERT=$ac_cv_path_HFST_INVERT
if test -n "$HFST_INVERT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_INVERT" >&5
printf "%s\n" "$HFST_INVERT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-lexc", so it can be a program name with args.
set dummy hfst-lexc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_LEXC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_LEXC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_LEXC="$HFST_LEXC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_LEXC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_LEXC" && ac_cv_path_HFST_LEXC="false"
  ;;
esac
fi
HFST_LEXC=$ac_cv_path_HFST_LEXC
if test -n "$HFST_LEXC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_LEXC" >&5
printf "%s\n" "$HFST_LEXC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-lookup", so it can be a program name with args.
set dummy hfst-lookup; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_LOOKUP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_LOOKUP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_LOOKUP="$HFST_LOOKUP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_LOOKUP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_LOOKUP" && ac_cv_path_HFST_LOOKUP="false"
  ;;
esac
fi
HFST_LOOKUP=$ac_cv_path_HFST_LOOKUP
if test -n "$HFST_LOOKUP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_LOOKUP" >&5
printf "%s\n" "$HFST_LOOKUP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-minimize", so it can be a program name with args.
set dummy hfst-minimize; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_MINIMIZE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_MINIMIZE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_MINIMIZE="$HFST_MINIMIZE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_MINIMIZE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_MINIMIZE" && ac_cv_path_HFST_MINIMIZE="false"
  ;;
esac
fi
HFST_MINIMIZE=$ac_cv_path_HFST_MINIMIZE
if test -n "$HFST_MINIMIZE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_MINIMIZE" >&5
printf "%s\n" "$HFST_MINIMIZE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-minus", so it can be a program name with args.
set dummy hfst-minus; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_MINUS+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_MINUS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_MINUS="$HFST_MINUS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_MINUS="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_MINUS" && ac_cv_path_HFST_MINUS="false"
  ;;
esac
fi
HFST_MINUS=$ac_cv_path_HFST_MINUS
if test -n "$HFST_MINUS"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_MINUS" >&5
printf "%s\n" "$HFST_MINUS" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-multiply", so it can be a program name with args.
set dummy hfst-multiply; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_MULTIPLY+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_MULTIPLY in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_MULTIPLY="$HFST_MULTIPLY" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_MULTIPLY="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_MULTIPLY" && ac_cv_path_HFST_MULTIPLY="false"
  ;;
esac
fi
HFST_MULTIPLY=$ac_cv_path_HFST_MULTIPLY
if test -n "$HFST_MULTIPLY"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_MULTIPLY" >&5
printf "%s\n" "$HFST_MULTIPLY" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-name", so it can be a program name with args.
set dummy hfst-name; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_NAME+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_NAME in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_NAME="$HFST_NAME" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_NAME="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_NAME" && ac_cv_path_HFST_NAME="false"
  ;;
esac
fi
HFST_NAME=$ac_cv_path_HFST_NAME
if test -n "$HFST_NAME"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_NAME" >&5
printf "%s\n" "$HFST_NAME" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-optimized-lookup", so it can be a program name with args.
set dummy hfst-optimized-lookup; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_OPTIMIZED_LOOKUP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_OPTIMIZED_LOOKUP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_OPTIMIZED_LOOKUP="$HFST_OPTIMIZED_LOOKUP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_OPTIMIZED_LOOKUP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_OPTIMIZED_LOOKUP" && ac_cv_path_HFST_OPTIMIZED_LOOKUP="false"
  ;;
esac
fi
HFST_OPTIMIZED_LOOKUP=$ac_cv_path_HFST_OPTIMIZED_LOOKUP
if test -n "$HFST_OPTIMIZED_LOOKUP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_OPTIMIZED_LOOKUP" >&5
printf "%s\n" "$HFST_OPTIMIZED_LOOKUP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-pair-test", so it can be a program name with args.
set dummy hfst-pair-test; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PAIR_TEST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PAIR_TEST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PAIR_TEST="$HFST_PAIR_TEST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PAIR_TEST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PAIR_TEST" && ac_cv_path_HFST_PAIR_TEST="false"
  ;;
esac
fi
HFST_PAIR_TEST=$ac_cv_path_HFST_PAIR_TEST
if test -n "$HFST_PAIR_TEST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PAIR_TEST" >&5
printf "%s\n" "$HFST_PAIR_TEST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-proc", so it can be a program name with args.
set dummy hfst-proc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PROC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PROC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PROC="$HFST_PROC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PROC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PROC" && ac_cv_path_HFST_PROC="false"
  ;;
esac
fi
HFST_PROC=$ac_cv_path_HFST_PROC
if test -n "$HFST_PROC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PROC" >&5
printf "%s\n" "$HFST_PROC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-pmatch2fst", so it can be a program name with args.
set dummy hfst-pmatch2fst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PMATCH2FST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PMATCH2FST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PMATCH2FST="$HFST_PMATCH2FST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PMATCH2FST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PMATCH2FST" && ac_cv_path_HFST_PMATCH2FST="false"
  ;;
esac
fi
HFST_PMATCH2FST=$ac_cv_path_HFST_PMATCH2FST
if test -n "$HFST_PMATCH2FST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PMATCH2FST" >&5
printf "%s\n" "$HFST_PMATCH2FST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-project", so it can be a program name with args.
set dummy hfst-project; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PROJECT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PROJECT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PROJECT="$HFST_PROJECT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PROJECT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PROJECT" && ac_cv_path_HFST_PROJECT="false"
  ;;
esac
fi
HFST_PROJECT=$ac_cv_path_HFST_PROJECT
if test -n "$HFST_PROJECT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PROJECT" >&5
printf "%s\n" "$HFST_PROJECT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-prune-alphabet", so it can be a program name with args.
set dummy hfst-prune-alphabet; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PRUNE_ALPHABET+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PRUNE_ALPHABET in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PRUNE_ALPHABET="$HFST_PRUNE_ALPHABET" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PRUNE_ALPHABET="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PRUNE_ALPHABET" && ac_cv_path_HFST_PRUNE_ALPHABET="false"
  ;;
esac
fi
HFST_PRUNE_ALPHABET=$ac_cv_path_HFST_PRUNE_ALPHABET
if test -n "$HFST_PRUNE_ALPHABET"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PRUNE_ALPHABET" >&5
printf "%s\n" "$HFST_PRUNE_ALPHABET" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-push-weights", so it can be a program name with args.
set dummy hfst-push-weights; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_PUSH_WEIGHTS+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_PUSH_WEIGHTS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_PUSH_WEIGHTS="$HFST_PUSH_WEIGHTS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_PUSH_WEIGHTS="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_PUSH_WEIGHTS" && ac_cv_path_HFST_PUSH_WEIGHTS="false"
  ;;
esac
fi
HFST_PUSH_WEIGHTS=$ac_cv_path_HFST_PUSH_WEIGHTS
if test -n "$HFST_PUSH_WEIGHTS"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_PUSH_WEIGHTS" >&5
printf "%s\n" "$HFST_PUSH_WEIGHTS" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-regexp2fst", so it can be a program name with args.
set dummy hfst-regexp2fst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_REGEXP2FST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_REGEXP2FST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_REGEXP2FST="$HFST_REGEXP2FST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_REGEXP2FST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_REGEXP2FST" && ac_cv_path_HFST_REGEXP2FST="false"
  ;;
esac
fi
HFST_REGEXP2FST=$ac_cv_path_HFST_REGEXP2FST
if test -n "$HFST_REGEXP2FST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_REGEXP2FST" >&5
printf "%s\n" "$HFST_REGEXP2FST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-remove-epsilons", so it can be a program name with args.
set dummy hfst-remove-epsilons; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_REMOVE_EPSILONS+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_REMOVE_EPSILONS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_REMOVE_EPSILONS="$HFST_REMOVE_EPSILONS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_REMOVE_EPSILONS="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_REMOVE_EPSILONS" && ac_cv_path_HFST_REMOVE_EPSILONS="false"
  ;;
esac
fi
HFST_REMOVE_EPSILONS=$ac_cv_path_HFST_REMOVE_EPSILONS
if test -n "$HFST_REMOVE_EPSILONS"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_REMOVE_EPSILONS" >&5
printf "%s\n" "$HFST_REMOVE_EPSILONS" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-repeat", so it can be a program name with args.
set dummy hfst-repeat; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_REPEAT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_REPEAT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_REPEAT="$HFST_REPEAT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_REPEAT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_REPEAT" && ac_cv_path_HFST_REPEAT="false"
  ;;
esac
fi
HFST_REPEAT=$ac_cv_path_HFST_REPEAT
if test -n "$HFST_REPEAT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_REPEAT" >&5
printf "%s\n" "$HFST_REPEAT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-reverse", so it can be a program name with args.
set dummy hfst-reverse; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_REVERSE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_REVERSE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_REVERSE="$HFST_REVERSE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_REVERSE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_REVERSE" && ac_cv_path_HFST_REVERSE="false"
  ;;
esac
fi
HFST_REVERSE=$ac_cv_path_HFST_REVERSE
if test -n "$HFST_REVERSE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_REVERSE" >&5
printf "%s\n" "$HFST_REVERSE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-reweight", so it can be a program name with args.
set dummy hfst-reweight; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_REWEIGHT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_REWEIGHT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_REWEIGHT="$HFST_REWEIGHT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_REWEIGHT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_REWEIGHT" && ac_cv_path_HFST_REWEIGHT="false"
  ;;
esac
fi
HFST_REWEIGHT=$ac_cv_path_HFST_REWEIGHT
if test -n "$HFST_REWEIGHT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_REWEIGHT" >&5
printf "%s\n" "$HFST_REWEIGHT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-split", so it can be a program name with args.
set dummy hfst-split; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_SPLIT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_SPLIT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_SPLIT="$HFST_SPLIT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_SPLIT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_SPLIT" && ac_cv_path_HFST_SPLIT="false"
  ;;
esac
fi
HFST_SPLIT=$ac_cv_path_HFST_SPLIT
if test -n "$HFST_SPLIT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_SPLIT" >&5
printf "%s\n" "$HFST_SPLIT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-strings2fst", so it can be a program name with args.
set dummy hfst-strings2fst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_STRINGS2FST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_STRINGS2FST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_STRINGS2FST="$HFST_STRINGS2FST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_STRINGS2FST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_STRINGS2FST" && ac_cv_path_HFST_STRINGS2FST="false"
  ;;
esac
fi
HFST_STRINGS2FST=$ac_cv_path_HFST_STRINGS2FST
if test -n "$HFST_STRINGS2FST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_STRINGS2FST" >&5
printf "%s\n" "$HFST_STRINGS2FST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-substitute", so it can be a program name with args.
set dummy hfst-substitute; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_SUBSTITUTE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_SUBSTITUTE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_SUBSTITUTE="$HFST_SUBSTITUTE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_SUBSTITUTE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_SUBSTITUTE" && ac_cv_path_HFST_SUBSTITUTE="false"
  ;;
esac
fi
HFST_SUBSTITUTE=$ac_cv_path_HFST_SUBSTITUTE
if test -n "$HFST_SUBSTITUTE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_SUBSTITUTE" >&5
printf "%s\n" "$HFST_SUBSTITUTE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-subtract", so it can be a program name with args.
set dummy hfst-subtract; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_SUBTRACT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_SUBTRACT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_SUBTRACT="$HFST_SUBTRACT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_SUBTRACT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_SUBTRACT" && ac_cv_path_HFST_SUBTRACT="false"
  ;;
esac
fi
HFST_SUBTRACT=$ac_cv_path_HFST_SUBTRACT
if test -n "$HFST_SUBTRACT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_SUBTRACT" >&5
printf "%s\n" "$HFST_SUBTRACT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-summarize", so it can be a program name with args.
set dummy hfst-summarize; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_SUMMARIZE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_SUMMARIZE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_SUMMARIZE="$HFST_SUMMARIZE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_SUMMARIZE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_SUMMARIZE" && ac_cv_path_HFST_SUMMARIZE="false"
  ;;
esac
fi
HFST_SUMMARIZE=$ac_cv_path_HFST_SUMMARIZE
if test -n "$HFST_SUMMARIZE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_SUMMARIZE" >&5
printf "%s\n" "$HFST_SUMMARIZE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-tokenize", so it can be a program name with args.
set dummy hfst-tokenize; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_TOKENISE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_TOKENISE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_TOKENISE="$HFST_TOKENISE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_TOKENISE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_TOKENISE" && ac_cv_path_HFST_TOKENISE="false"
  ;;
esac
fi
HFST_TOKENISE=$ac_cv_path_HFST_TOKENISE
if test -n "$HFST_TOKENISE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_TOKENISE" >&5
printf "%s\n" "$HFST_TOKENISE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-twolc", so it can be a program name with args.
set dummy hfst-twolc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_TWOLC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_TWOLC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_TWOLC="$HFST_TWOLC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_TWOLC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_TWOLC" && ac_cv_path_HFST_TWOLC="false"
  ;;
esac
fi
HFST_TWOLC=$ac_cv_path_HFST_TWOLC
if test -n "$HFST_TWOLC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_TWOLC" >&5
printf "%s\n" "$HFST_TWOLC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-txt2fst", so it can be a program name with args.
set dummy hfst-txt2fst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_TXT2FST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_TXT2FST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_TXT2FST="$HFST_TXT2FST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_TXT2FST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_TXT2FST" && ac_cv_path_HFST_TXT2FST="false"
  ;;
esac
fi
HFST_TXT2FST=$ac_cv_path_HFST_TXT2FST
if test -n "$HFST_TXT2FST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_TXT2FST" >&5
printf "%s\n" "$HFST_TXT2FST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "hfst-xfst", so it can be a program name with args.
set dummy hfst-xfst; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_XFST+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_XFST in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_XFST="$HFST_XFST" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_XFST="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_XFST" && ac_cv_path_HFST_XFST="false"
  ;;
esac
fi
HFST_XFST=$ac_cv_path_HFST_XFST
if test -n "$HFST_XFST"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_XFST" >&5
printf "%s\n" "$HFST_XFST" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



# hfst-ospell is a separate package:
# Extract the first word of "hfst-ospell", so it can be a program name with args.
set dummy hfst-ospell; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_HFST_OSPELL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $HFST_OSPELL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HFST_OSPELL="$HFST_OSPELL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_hfst
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_HFST_OSPELL="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_HFST_OSPELL" && ac_cv_path_HFST_OSPELL="false"
  ;;
esac
fi
HFST_OSPELL=$ac_cv_path_HFST_OSPELL
if test -n "$HFST_OSPELL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HFST_OSPELL" >&5
printf "%s\n" "$HFST_OSPELL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



if test x$with_hfst != xno
then :

_gtd_hfst_min_version=$_required_hfst_version
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether hfst is at least $_gtd_hfst_min_version and has the required tools" >&5
printf %s "checking whether hfst is at least $_gtd_hfst_min_version and has the required tools... " >&6; }
if test x$HFST_INFO != xfalse; then
    if $HFST_INFO --atleast-version=$_gtd_hfst_min_version ; then
        if test x$HFST_COMPOSE         = "xfalse" \
             -o x$HFST_DETERMINIZE     = "xfalse" \
             -o x$HFST_FST2FST         = "xfalse" \
             -o x$HFST_INVERT          = "xfalse" \
             -o x$HFST_LEXC            = "xfalse" \
             -o x$HFST_LOOKUP          = "xfalse" \
             -o x$HFST_MINIMIZE        = "xfalse" \
             -o x$HFST_REGEXP2FST      = "xfalse" \
             -o x$HFST_REMOVE_EPSILONS = "xfalse" \
             -o x$HFST_SUBSTITUTE      = "xfalse" \
             -o x$HFST_TWOLC           = "xfalse" \
             -o x$HFST_XFST            = "xfalse" \
             ; then
            gt_prog_hfst=no
            as_fn_error $? "One of the required Hfst tools were not found. For details, see above." "$LINENO" 5
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
            gt_prog_hfst=yes
        fi
    else
        as_fn_error $? "You requested --with-hfst: hfst is too old. OR: no other fst tools were found (Xerox, Foma)." "$LINENO" 5
    fi
else
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
    gt_prog_hfst=no
    if test $with_hfst != "no"; then
        as_fn_error $? "You requested --with-hfst, but hfst is too old or not installed" "$LINENO" 5
    fi
fi

else $as_nop
  gt_prog_hfst=no
fi
 if test "x$gt_prog_hfst" = "xyes"; then
  CAN_HFST_TRUE=
  CAN_HFST_FALSE='#'
else
  CAN_HFST_TRUE='#'
  CAN_HFST_FALSE=
fi


# You can specify the fst transducer format (=backend) for hfst
# - default is 'openfst-tropical'

# Check whether --with-backend-format was given.
if test ${with_backend_format+y}
then :
  withval=$with_backend_format; with_backend=$withval
else $as_nop
  with_backend=$DEFAULT_HFST_BACKEND
fi

HFST_FORMAT_NAME=$with_backend

 if test "$with_backend" == openfst-tropical; then
  WITH_OFST_TROPICAL_TRUE=
  WITH_OFST_TROPICAL_FALSE='#'
else
  WITH_OFST_TROPICAL_TRUE='#'
  WITH_OFST_TROPICAL_FALSE=
fi

 if test "$with_backend" == openfst-log; then
  WITH_OFST_LOG_TRUE=
  WITH_OFST_LOG_FALSE='#'
else
  WITH_OFST_LOG_TRUE='#'
  WITH_OFST_LOG_FALSE=
fi

 if test "$with_backend" == sfst; then
  WITH_SFST_TRUE=
  WITH_SFST_FALSE='#'
else
  WITH_SFST_TRUE='#'
  WITH_SFST_FALSE=
fi

 if test "$with_backend" == foma; then
  WITH_FOMA_TRUE=
  WITH_FOMA_FALSE='#'
else
  WITH_FOMA_TRUE='#'
  WITH_FOMA_FALSE=
fi




# Tests and sets up Voikko

# Check whether --with-voikko was given.
if test ${with_voikko+y}
then :
  withval=$with_voikko; with_voikko=$withval
else $as_nop
  with_voikko=yes
fi

# Extract the first word of "voikkospell", so it can be a program name with args.
set dummy voikkospell; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VOIKKOSPELL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VOIKKOSPELL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VOIKKOSPELL="$VOIKKOSPELL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_voikko
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VOIKKOSPELL="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VOIKKOSPELL" && ac_cv_path_VOIKKOSPELL="false"
  ;;
esac
fi
VOIKKOSPELL=$ac_cv_path_VOIKKOSPELL
if test -n "$VOIKKOSPELL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VOIKKOSPELL" >&5
printf "%s\n" "$VOIKKOSPELL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "voikkohyphenate", so it can be a program name with args.
set dummy voikkohyphenate; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VOIKKOHYPHENATE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VOIKKOHYPHENATE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VOIKKOHYPHENATE="$VOIKKOHYPHENATE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_voikko
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VOIKKOHYPHENATE="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VOIKKOHYPHENATE" && ac_cv_path_VOIKKOHYPHENATE="false"
  ;;
esac
fi
VOIKKOHYPHENATE=$ac_cv_path_VOIKKOHYPHENATE
if test -n "$VOIKKOHYPHENATE"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VOIKKOHYPHENATE" >&5
printf "%s\n" "$VOIKKOHYPHENATE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "voikkogc", so it can be a program name with args.
set dummy voikkogc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VOIKKOGC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VOIKKOGC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VOIKKOGC="$VOIKKOGC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_voikko
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VOIKKOGC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VOIKKOGC" && ac_cv_path_VOIKKOGC="false"
  ;;
esac
fi
VOIKKOGC=$ac_cv_path_VOIKKOGC
if test -n "$VOIKKOGC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VOIKKOGC" >&5
printf "%s\n" "$VOIKKOGC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "voikkovfstc", so it can be a program name with args.
set dummy voikkovfstc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VOIKKOVFSTC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VOIKKOVFSTC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VOIKKOVFSTC="$VOIKKOVFSTC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_voikko
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VOIKKOVFSTC="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VOIKKOVFSTC" && ac_cv_path_VOIKKOVFSTC="false"
  ;;
esac
fi
VOIKKOVFSTC=$ac_cv_path_VOIKKOVFSTC
if test -n "$VOIKKOVFSTC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VOIKKOVFSTC" >&5
printf "%s\n" "$VOIKKOVFSTC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable voikko building" >&5
printf %s "checking whether to enable voikko building... " >&6; }
if test x$with_voikko != xno
then :

    if test "x$VOIKKOSPELL"      != xfalse -a \
                "x$VOIKKOHYPHENATE"  != xfalse -a \
                "x$VOIKKOGC"         != xfalse -a \
                "x$VOIKKOVFSTC"      != xfalse
then :
  gt_prog_voikko=yes
else $as_nop
  gt_prog_voikko=no
fi

else $as_nop
  gt_prog_voikko=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_prog_voikko" >&5
printf "%s\n" "$gt_prog_voikko" >&6; }
 if test "x$gt_prog_voikko" != xno; then
  CAN_VFST_TRUE=
  CAN_VFST_FALSE='#'
else
  CAN_VFST_TRUE='#'
  CAN_VFST_FALSE=
fi



# Tests and sets up vislcg3

# Check whether --with-vislcg3 was given.
if test ${with_vislcg3+y}
then :
  withval=$with_vislcg3; with_vislcg3=$withval
else $as_nop
  with_vislcg3=check
fi

# Extract the first word of "vislcg3", so it can be a program name with args.
set dummy vislcg3; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VISLCG3+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VISLCG3 in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VISLCG3="$VISLCG3" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_vislcg3
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VISLCG3="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VISLCG3" && ac_cv_path_VISLCG3="no"
  ;;
esac
fi
VISLCG3=$ac_cv_path_VISLCG3
if test -n "$VISLCG3"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VISLCG3" >&5
printf "%s\n" "$VISLCG3" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "cg-comp", so it can be a program name with args.
set dummy cg-comp; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_VISLCG3_COMP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $VISLCG3_COMP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_VISLCG3_COMP="$VISLCG3_COMP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_vislcg3
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_VISLCG3_COMP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_VISLCG3_COMP" && ac_cv_path_VISLCG3_COMP="no"
  ;;
esac
fi
VISLCG3_COMP=$ac_cv_path_VISLCG3_COMP
if test -n "$VISLCG3_COMP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VISLCG3_COMP" >&5
printf "%s\n" "$VISLCG3_COMP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "cg-relabel", so it can be a program name with args.
set dummy cg-relabel; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_CG_RELABEL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $CG_RELABEL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CG_RELABEL="$CG_RELABEL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_vislcg3
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_CG_RELABEL="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_CG_RELABEL" && ac_cv_path_CG_RELABEL="no"
  ;;
esac
fi
CG_RELABEL=$ac_cv_path_CG_RELABEL
if test -n "$CG_RELABEL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CG_RELABEL" >&5
printf "%s\n" "$CG_RELABEL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "cg-mwesplit", so it can be a program name with args.
set dummy cg-mwesplit; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_CG_MWESPLIT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $CG_MWESPLIT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CG_MWESPLIT="$CG_MWESPLIT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_vislcg3
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_CG_MWESPLIT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_CG_MWESPLIT" && ac_cv_path_CG_MWESPLIT="no"
  ;;
esac
fi
CG_MWESPLIT=$ac_cv_path_CG_MWESPLIT
if test -n "$CG_MWESPLIT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CG_MWESPLIT" >&5
printf "%s\n" "$CG_MWESPLIT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



if test "x$VISLCG3" != xno
then :

_giella_core_vislcg3_min_version=1.0.0
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vislcg3 is at least $_giella_core_vislcg3_min_version" >&5
printf %s "checking whether vislcg3 is at least $_giella_core_vislcg3_min_version... " >&6; }
_vislcg3_version=$( ${VISLCG3} --version 2>&1 | grep -Eo '[0-9]+\.[0-9.]+' )



  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.

  ax_compare_version_A=`echo "$_vislcg3_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


  ax_compare_version_B=`echo "$_giella_core_vislcg3_min_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


    ax_compare_version=`echo "x$ax_compare_version_A
x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`



    if test "$ax_compare_version" = "true" ; then
    gt_prog_vislcg3=yes
                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes - $_vislcg3_version" >&5
printf "%s\n" "yes - $_vislcg3_version" >&6; }

    else gt_prog_vislcg3=no
                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no - $_vislcg3_version" >&5
printf "%s\n" "no - $_vislcg3_version" >&6; }

  fi


else $as_nop
  gt_prog_vislcg3=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we can enable vislcg3 targets" >&5
printf %s "checking whether we can enable vislcg3 targets... " >&6; }
if test "x$gt_prog_vislcg3" != xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi
 if test "x$gt_prog_vislcg3" != xno; then
  CAN_VISLCG_TRUE=
  CAN_VISLCG_FALSE='#'
else
  CAN_VISLCG_TRUE='#'
  CAN_VISLCG_FALSE=
fi



# Tests and sets up XML to lexc conversion

# Check whether --with-saxon was given.
if test ${with_saxon+y}
then :
  withval=$with_saxon; with_saxon=$withval
else $as_nop
  with_saxon=check
fi

# Extract the first word of "saxonb-xslt saxon9 saxon8 saxon", so it can be a program name with args.
set dummy saxonb-xslt saxon9 saxon8 saxon; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_SAXON+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $SAXON in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SAXON="$SAXON" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_saxon
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_SAXON="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_SAXON" && ac_cv_path_SAXON="false"
  ;;
esac
fi
SAXON=$ac_cv_path_SAXON
if test -n "$SAXON"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $SAXON" >&5
printf "%s\n" "$SAXON" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "java", so it can be a program name with args.
set dummy java; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_JV+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $JV in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_JV="$JV" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_JV="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_JV" && ac_cv_path_JV="false"
  ;;
esac
fi
JV=$ac_cv_path_JV
if test -n "$JV"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $JV" >&5
printf "%s\n" "$JV" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


as_ac_File=`printf "%s\n" "ac_cv_file_$HOME/lib/saxon9he.jar" | $as_tr_sh`
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $HOME/lib/saxon9he.jar" >&5
printf %s "checking for $HOME/lib/saxon9he.jar... " >&6; }
if eval test \${$as_ac_File+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  test "$cross_compiling" = yes &&
  as_fn_error $? "cannot check for file existence when cross compiling" "$LINENO" 5
if test -r "$HOME/lib/saxon9he.jar"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
eval ac_res=\$$as_ac_File
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
if eval test \"x\$"$as_ac_File"\" = x"yes"
then :
  SAXONJAR=$HOME/lib/saxon9he.jar

else $as_nop
  as_ac_File=`printf "%s\n" "ac_cv_file_$HOME/lib/saxon9.jar" | $as_tr_sh`
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $HOME/lib/saxon9.jar" >&5
printf %s "checking for $HOME/lib/saxon9.jar... " >&6; }
if eval test \${$as_ac_File+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  test "$cross_compiling" = yes &&
  as_fn_error $? "cannot check for file existence when cross compiling" "$LINENO" 5
if test -r "$HOME/lib/saxon9.jar"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
eval ac_res=\$$as_ac_File
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
if eval test \"x\$"$as_ac_File"\" = x"yes"
then :
  SAXONJAR=$HOME/lib/saxon9.jar

else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for /opt/local/share/java/saxon9he.jar" >&5
printf %s "checking for /opt/local/share/java/saxon9he.jar... " >&6; }
if test ${ac_cv_file__opt_local_share_java_saxon9he_jar+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  test "$cross_compiling" = yes &&
  as_fn_error $? "cannot check for file existence when cross compiling" "$LINENO" 5
if test -r "/opt/local/share/java/saxon9he.jar"; then
  ac_cv_file__opt_local_share_java_saxon9he_jar=yes
else
  ac_cv_file__opt_local_share_java_saxon9he_jar=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_file__opt_local_share_java_saxon9he_jar" >&5
printf "%s\n" "$ac_cv_file__opt_local_share_java_saxon9he_jar" >&6; }
if test "x$ac_cv_file__opt_local_share_java_saxon9he_jar" = xyes
then :
  SAXONJAR=/opt/local/share/java/saxon9he.jar

else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for /usr/share/java/Saxon-HE.jar" >&5
printf %s "checking for /usr/share/java/Saxon-HE.jar... " >&6; }
if test ${ac_cv_file__usr_share_java_Saxon_HE_jar+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  test "$cross_compiling" = yes &&
  as_fn_error $? "cannot check for file existence when cross compiling" "$LINENO" 5
if test -r "/usr/share/java/Saxon-HE.jar"; then
  ac_cv_file__usr_share_java_Saxon_HE_jar=yes
else
  ac_cv_file__usr_share_java_Saxon_HE_jar=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_file__usr_share_java_Saxon_HE_jar" >&5
printf "%s\n" "$ac_cv_file__usr_share_java_Saxon_HE_jar" >&6; }
if test "x$ac_cv_file__usr_share_java_Saxon_HE_jar" = xyes
then :
  SAXONJAR=/usr/share/java/Saxon-HE.jar

else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for /usr/share/java/saxon.jar" >&5
printf %s "checking for /usr/share/java/saxon.jar... " >&6; }
if test ${ac_cv_file__usr_share_java_saxon_jar+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  test "$cross_compiling" = yes &&
  as_fn_error $? "cannot check for file existence when cross compiling" "$LINENO" 5
if test -r "/usr/share/java/saxon.jar"; then
  ac_cv_file__usr_share_java_saxon_jar=yes
else
  ac_cv_file__usr_share_java_saxon_jar=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_file__usr_share_java_saxon_jar" >&5
printf "%s\n" "$ac_cv_file__usr_share_java_saxon_jar" >&6; }
if test "x$ac_cv_file__usr_share_java_saxon_jar" = xyes
then :
  SAXONJAR=/usr/share/java/saxon.jar

else $as_nop
  _saxonjar=no
fi


fi

fi

fi


fi

if test "x$with_saxon" != xno
then :

_saxon_min_version="8.0"
_saxon_version=$( java -jar $SAXONJAR -? 2>&1 | fgrep -i 'saxon' | grep -Eo '[0-9]+\.[0-9.]+' )
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the Saxon JAR is at least $_saxon_min_version" >&5
printf %s "checking whether the Saxon JAR is at least $_saxon_min_version... " >&6; }



  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.

  ax_compare_version_A=`echo "$_saxon_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


  ax_compare_version_B=`echo "$_saxon_min_version" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                     -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
                     -e 's/[^0-9]//g'`


    ax_compare_version=`echo "x$ax_compare_version_A
x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version_A}/true/;s/x${ax_compare_version_B}/false/;1q"`



    if test "$ax_compare_version" = "true" ; then
    _saxonjar=yes
                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes - $_saxon_version" >&5
printf "%s\n" "yes - $_saxon_version" >&6; }

    else _saxonjar=no
                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no - $_saxon_version" >&5
printf "%s\n" "no - $_saxon_version" >&6; }

  fi


else $as_nop
  _saxonjar=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we can enable xslt2 transformations" >&5
printf %s "checking whether we can enable xslt2 transformations... " >&6; }
if test x$with_saxon != xno
then :

    if test "x$SAXON" != xfalse
then :
  gt_prog_saxon=yes
else $as_nop
  gt_prog_saxon=no
fi
    if test x$JV != xfalse
then :
  gt_prog_java=yes
else $as_nop
  gt_prog_java=no
fi
    if test x$gt_prog_java != xno -a x$_saxonjar != xno
then :
  gt_prog_xslt=yes
else $as_nop
  gt_prog_xslt=no
fi

else $as_nop
  gt_prog_xslt=no
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_prog_xslt" >&5
printf "%s\n" "$gt_prog_xslt" >&6; }
 if test "x$gt_prog_saxon" != xno; then
  CAN_SAXON_TRUE=
  CAN_SAXON_FALSE='#'
else
  CAN_SAXON_TRUE='#'
  CAN_SAXON_FALSE=
fi

 if test "x$gt_prog_java" != xno -a "x$_saxonjar" != xno; then
  CAN_JAVA_TRUE=
  CAN_JAVA_FALSE='#'
else
  CAN_JAVA_TRUE='#'
  CAN_JAVA_FALSE=
fi



# Adds --enable/disable-morphology, -speller, -hyphenation, etc.
# This should be the last step so that all program variables are available
# to the enable checks

# Foma-speller requires gzip, Voikko requires zip:
# Extract the first word of "zip", so it can be a program name with args.
set dummy zip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_ZIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $ZIP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_ZIP="$ZIP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_zip
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_ZIP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_ZIP" && ac_cv_path_ZIP="false"
  ;;
esac
fi
ZIP=$ac_cv_path_ZIP
if test -n "$ZIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZIP" >&5
printf "%s\n" "$ZIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "gzip", so it can be a program name with args.
set dummy gzip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_GZIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $GZIP in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GZIP="$GZIP" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_gzip
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_GZIP="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_GZIP" && ac_cv_path_GZIP="false"
  ;;
esac
fi
GZIP=$ac_cv_path_GZIP
if test -n "$GZIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GZIP" >&5
printf "%s\n" "$GZIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


for ac_prog in tar gtar
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_TAR+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_tar
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_TAR="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
printf "%s\n" "$TAR" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$TAR" && break
done
test -n "$TAR" || TAR="false"

# Extract the first word of "patgen", so it can be a program name with args.
set dummy patgen; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PATGEN+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PATGEN in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATGEN="$PATGEN" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_patgen
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PATGEN="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_PATGEN" && ac_cv_path_PATGEN="false"
  ;;
esac
fi
PATGEN=$ac_cv_path_PATGEN
if test -n "$PATGEN"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PATGEN" >&5
printf "%s\n" "$PATGEN" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PERL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PERL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PERL="$PERL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_perl
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PERL="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_PERL" && ac_cv_path_PERL="false"
  ;;
esac
fi
PERL=$ac_cv_path_PERL
if test -n "$PERL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PERL" >&5
printf "%s\n" "$PERL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


# Extract the first word of "xz", so it can be a program name with args.
set dummy xz; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_XZ+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $XZ in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_XZ="$XZ" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR$with_xz
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_XZ="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_XZ" && ac_cv_path_XZ="false"
  ;;
esac
fi
XZ=$ac_cv_path_XZ
if test -n "$XZ"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $XZ" >&5
printf "%s\n" "$XZ" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


 if test "x$ac_cv_prog_XZ" != xfalse; then
  CAN_XZ_TRUE=
  CAN_XZ_FALSE='#'
else
  CAN_XZ_TRUE='#'
  CAN_XZ_FALSE=
fi


############ (Hfst) compilation optimisation: ############
# Enable hyperminimisation of the lexical transducer - default is 'no'
# Check whether --enable-hyperminimisation was given.
if test ${enable_hyperminimisation+y}
then :
  enableval=$enable_hyperminimisation; enable_hyperminimisation=$enableval
else $as_nop
  enable_hyperminimisation=$DEFAULT_HYPERMIN
fi

 if test "x$enable_hyperminimisation" != xno; then
  WANT_HYPERMINIMISATION_TRUE=
  WANT_HYPERMINIMISATION_FALSE='#'
else
  WANT_HYPERMINIMISATION_TRUE='#'
  WANT_HYPERMINIMISATION_FALSE=
fi


# Enable symbol alignment of the lexical transducer - default is 'no'
# Check whether --enable-alignment was given.
if test ${enable_alignment+y}
then :
  enableval=$enable_alignment; enable_alignment=$enableval
else $as_nop
  enable_alignment=yes
fi

 if test "x$enable_alignment" != xno; then
  WANT_LEXC_ALIGNMENT_TRUE=
  WANT_LEXC_ALIGNMENT_FALSE='#'
else
  WANT_LEXC_ALIGNMENT_TRUE='#'
  WANT_LEXC_ALIGNMENT_FALSE=
fi


#enable_twostep_intersect
# Check whether --enable-twostep-intersect was given.
if test ${enable_twostep_intersect+y}
then :
  enableval=$enable_twostep_intersect; enable_twostep_intersect=$enableval
else $as_nop
  enable_twostep_intersect=no
fi

 if test "x$enable_twostep_intersect" != xno; then
  WANT_TWOSTEP_INTERSECT_TRUE=
  WANT_TWOSTEP_INTERSECT_FALSE='#'
else
  WANT_TWOSTEP_INTERSECT_TRUE='#'
  WANT_TWOSTEP_INTERSECT_FALSE=
fi


#enable_reversed_intersect
# Check whether --enable-reversed-intersect was given.
if test ${enable_reversed_intersect+y}
then :
  enableval=$enable_reversed_intersect; enable_reversed_intersect=$enableval
else $as_nop
  enable_reversed_intersect=$DEFAULT_REVERCI
fi

 if test "x$enable_reversed_intersect" != xno; then
  WANT_REVERSED_INTERSECT_TRUE=
  WANT_REVERSED_INTERSECT_FALSE='#'
else
  WANT_REVERSED_INTERSECT_TRUE='#'
  WANT_REVERSED_INTERSECT_FALSE=
fi


############ Tool switches: ############
# Enable all stable tools in one go:
# Check whether --enable-ci was given.
if test ${enable_ci+y}
then :
  enableval=$enable_ci; enable_ci=$enableval
else $as_nop
  enable_ci=no
fi

# Must zero out enableval, otherwise it will carry its value to the next use,
# so you can't test whether something was enabled due to defaults or to active enabling:
enableval=''

# Check whether --enable-all_tools was given.
if test ${enable_all_tools+y}
then :
  enableval=$enable_all_tools; enable_all_tools=$enableval
else $as_nop
  enable_all_tools=no
fi

enableval=''

# Enable morphological analysers - default is 'yes'
# Check whether --enable-analysers was given.
if test ${enable_analysers+y}
then :
  enableval=$enable_analysers; enable_analysers=$enableval
else $as_nop
  if test "x$enable_all_tools" != xno
then :
  enable_analysers=$enable_all_tools
else $as_nop
  enable_analysers=$DEFAULT_ANALYSERS
fi

fi

if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_analysers=no
fi
 if test "x$enable_analysers" != xno; then
  WANT_MORPHOLOGY_TRUE=
  WANT_MORPHOLOGY_FALSE='#'
else
  WANT_MORPHOLOGY_TRUE='#'
  WANT_MORPHOLOGY_FALSE=
fi

enableval=''

# Enable morphological generators - default is 'yes'
# Check whether --enable-generators was given.
if test ${enable_generators+y}
then :
  enableval=$enable_generators; enable_generators=$enableval
else $as_nop
  if test "x$enable_all_tools" != xno
then :
  enable_generators=$enable_all_tools
else $as_nop
  enable_generators=$DEFAULT_GENERATORS
fi

fi

if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_generators=no
fi
 if test "x$enable_generators" != xno; then
  WANT_GENERATION_TRUE=
  WANT_GENERATION_FALSE='#'
else
  WANT_GENERATION_TRUE='#'
  WANT_GENERATION_FALSE=
fi

enableval=''

# Enable glossing morphological analysers - default is 'no'
# Check whether --enable-glossers was given.
if test ${enable_glossers+y}
then :
  enableval=$enable_glossers; enable_glossers=$enableval
else $as_nop
  enable_glossers=no
fi

if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_glossers=no
fi
 if test "x$enable_glossers" != xno; then
  WANT_GLOSSERS_TRUE=
  WANT_GLOSSERS_FALSE='#'
else
  WANT_GLOSSERS_TRUE='#'
  WANT_GLOSSERS_FALSE=
fi

enableval=''

# Enable text transcriptors - default is 'yes'
# Check whether --enable-transcriptors was given.
if test ${enable_transcriptors+y}
then :
  enableval=$enable_transcriptors; enable_transcriptors=$enableval
else $as_nop
  enable_transcriptors=yes
fi

if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_transcriptors=no
fi
 if test "x$enable_transcriptors" != xno; then
  WANT_TRANSCRIPTORS_TRUE=
  WANT_TRANSCRIPTORS_FALSE='#'
else
  WANT_TRANSCRIPTORS_TRUE='#'
  WANT_TRANSCRIPTORS_FALSE=
fi

enableval=''

# Enable syntactic parsing - default is 'yes'
# Check whether --enable-syntax was given.
if test ${enable_syntax+y}
then :
  enableval=$enable_syntax; enable_syntax=$enableval
else $as_nop
  enable_syntax=yes
fi

if test "x$enable_syntax" = "xyes" -a "x$gt_prog_vislcg3" = "xno"
then :
  enable_syntax=no
              as_fn_error $? "vislcg3 tools missing or too old, please install or disable syntax tools!" "$LINENO" 5
fi
if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_syntax=no
fi
 if test "x$enable_syntax" != xno; then
  WANT_SYNTAX_TRUE=
  WANT_SYNTAX_FALSE='#'
else
  WANT_SYNTAX_TRUE='#'
  WANT_SYNTAX_FALSE=
fi

enableval=''
# $gt_prog_vislcg3

# Enable grammar checkers - default is 'no' (via $enable_all_tools)
# Check whether --enable-grammarchecker was given.
if test ${enable_grammarchecker+y}
then :
  enableval=$enable_grammarchecker; enable_grammarchecker=$enableval
else $as_nop
  enable_grammarchecker=$enable_all_tools
fi

if test "x$enable_grammarchecker" = "xyes" -a "x$gt_prog_vislcg3" = "xno"
then :
  enable_grammarchecker=no
       as_fn_error $? "vislcg3 missing or too old - required for the grammar checker" "$LINENO" 5
else $as_nop
  if test "x$enable_grammarchecker" = "xyes" -a "x$DIVVUN_VALIDATE_SUGGEST" = "xno"
then :
  enable_grammarchecker=no
           as_fn_error $? "divvun-validate-suggest required for building grammar checkers" "$LINENO" 5
fi
      if test "x$enable_grammarchecker" = "xyes" -a "x$DIVVUN_CHECKER" = "xno"
then :
  enable_grammarchecker=no
           as_fn_error $? "divvun-checker required for testing grammar checkers" "$LINENO" 5
fi
fi
if test "x$enable_ci" = "xyes" -a "x$enableval" = "x"
then :
  enable_grammarchecker=no
fi
 if test "x$enable_grammarchecker" != xno; then
  WANT_GRAMCHECK_TRUE=
  WANT_GRAMCHECK_FALSE='#'
else
  WANT_GRAMCHECK_TRUE='#'
  WANT_GRAMCHECK_FALSE=
fi

enableval=''

# Enable all spellers - default is 'no'
# Check whether --enable-spellers was given.
if test ${enable_spellers+y}
then :
  enableval=$enable_spellers; enable_spellers=$enableval
else $as_nop
  enable_spellers=$enable_all_tools
fi

if test "x$enable_grammarchecker" != xno
then :
  enable_spellers=yes
fi
if test "x$enable_spellers" != xno -a "x$BC" = xfalse
then :
  as_fn_error $? "counting statistics for spell-checkers requires bc, install or disable spellers" "$LINENO" 5
fi
 if test "x$enable_spellers" != xno; then
  WANT_SPELLERS_TRUE=
  WANT_SPELLERS_FALSE='#'
else
  WANT_SPELLERS_TRUE='#'
  WANT_SPELLERS_FALSE=
fi


# Enable hfst desktop spellers - default is 'yes' (but dependent on
# --enable-spellers)
# Check whether --enable-hfst-desktop-spellers was given.
if test ${enable_hfst_desktop_spellers+y}
then :
  enableval=$enable_hfst_desktop_spellers; enable_desktop_hfstspellers=$enableval
else $as_nop
  enable_desktop_hfstspellers=yes
fi

if test "x$enable_spellers" = xno -o "x$gt_prog_hfst" = xno
then :
  enable_desktop_hfstspellers=no
else $as_nop
  if test "x$ZIP" = "xfalse"
then :
  enable_desktop_hfstspellers=no
              as_fn_error $? "zip missing - required for desktop zhfst spellers" "$LINENO" 5
fi
fi
 if test "x$enable_desktop_hfstspellers" != xno; then
  WANT_HFST_DESKTOP_SPELLER_TRUE=
  WANT_HFST_DESKTOP_SPELLER_FALSE='#'
else
  WANT_HFST_DESKTOP_SPELLER_TRUE='#'
  WANT_HFST_DESKTOP_SPELLER_FALSE=
fi


# Enable minimised fst-spellers by default:
# Check whether --enable-minimised-spellers was given.
if test ${enable_minimised_spellers+y}
then :
  enableval=$enable_minimised_spellers; enable_minimised_spellers=$enableval
else $as_nop
  enable_minimised_spellers=$DEFAULT_SPELLER_MINIMISATION
fi

if test "x$enable_minimised_spellers" != "xyes"
then :
  HFST_MINIMIZE_SPELLER="$ac_cv_path_HFST_REMOVE_EPSILONS \$(HFST_FLAGS) \$(MORE_VERBOSITY) "

else $as_nop
  HFST_MINIMIZE_SPELLER="$ac_cv_path_HFST_REMOVE_EPSILONS \$(HFST_FLAGS) \$(MORE_VERBOSITY) \
                                         | $ac_cv_path_HFST_DETERMINIZE --encode-weights \$(HFST_FLAGS) \$(MORE_VERBOSITY) \
                                         | $ac_cv_path_HFST_MINIMIZE    --encode-weights \$(HFST_FLAGS) \$(MORE_VERBOSITY) "

fi

# Enable Foma-based spellers, requires gzip - default is no
# Check whether --enable-fomaspeller was given.
if test ${enable_fomaspeller+y}
then :
  enableval=$enable_fomaspeller; enable_fomaspeller=$enableval
else $as_nop
  enable_fomaspeller=no
fi

if test "x$enable_fomaspeller" = "xyes" -a "x$gt_prog_hfst" != xno
then :
  if test "x$GZIP" = "xfalse"
then :
  enable_fomaspeller=no
              as_fn_error $? "gzip missing - required for foma spellers" "$LINENO" 5
fi
fi
 if test "x$enable_fomaspeller" != xno; then
  CAN_FOMA_SPELLER_TRUE=
  CAN_FOMA_SPELLER_FALSE='#'
else
  CAN_FOMA_SPELLER_TRUE='#'
  CAN_FOMA_SPELLER_FALSE=
fi


# Enable hfst mobile spellers - default is 'no' (dependent on --enable-spellers)
# Check whether --enable-hfst-mobile-speller was given.
if test ${enable_hfst_mobile_speller+y}
then :
  enableval=$enable_hfst_mobile_speller; enable_mobile_hfstspeller=$enableval
else $as_nop
  enable_mobile_hfstspeller=$enable_all_tools
fi

if test "x$enable_spellers" = xno -o "x$gt_prog_hfst" = xno
then :
  enable_mobile_hfstspeller=no
else $as_nop
  if test "x$XZ" = "xfalse"
then :
  enable_mobile_hfstspeller=no
              as_fn_error $? "xz is missing - required for mobile zhfst spellers" "$LINENO" 5
fi
fi
 if test "x$enable_mobile_hfstspeller" != xno; then
  WANT_HFST_MOBILE_SPELLER_TRUE=
  WANT_HFST_MOBILE_SPELLER_FALSE='#'
else
  WANT_HFST_MOBILE_SPELLER_TRUE='#'
  WANT_HFST_MOBILE_SPELLER_FALSE=
fi


# Enable Vfst-based spellers - default is no
# Check whether --enable-vfstspeller was given.
if test ${enable_vfstspeller+y}
then :
  enableval=$enable_vfstspeller; enable_vfstspeller=$enableval
else $as_nop
  enable_vfstspeller=no
fi

if test "x$enable_vfstspeller" = "xyes" -a "x$enable_mobile_hfstspeller" = xno
then :
  enable_vfstspeller=no
fi
 if test "x$enable_vfstspeller" != xno; then
  WANT_VFST_SPELLER_TRUE=
  WANT_VFST_SPELLER_FALSE='#'
else
  WANT_VFST_SPELLER_TRUE='#'
  WANT_VFST_SPELLER_FALSE=
fi


## Disable Hunspell production by default:
#AC_ARG_ENABLE([hunspell],
#              [AS_HELP_STRING([--enable-hunspell],
#                              [enable hunspell building (dependent on --enable-spellers) [default=no]])],
#              [enable_hunspell=$enableval],
#              [enable_hunspell=no])
#AS_IF([test "x$enable_spellers" = xno], [enable_hunspell=no])
#AM_CONDITIONAL([WANT_HUNSPELL], [test "x$enable_hunspell" != xno])

# Enable pattern hyphenator - default is 'no'; requires fst hyphenator
# Check whether --enable-pattern-hyphenators was given.
if test ${enable_pattern_hyphenators+y}
then :
  enableval=$enable_pattern_hyphenators; enable_pattern_hyphenators=$enableval
else $as_nop
  enable_pattern_hyphenators=no
fi

if test "x$enable_pattern_hyphenators" = "xyes" -a "x$PATGEN" = "xfalse"
then :
  enable_pattern_hyphenators=no
       as_fn_error $? "patgen required for building pattern hyphenators" "$LINENO" 5
fi

# Enable fst hyphenator - default is 'no'
# Check whether --enable-fst-hyphenator was given.
if test ${enable_fst_hyphenator+y}
then :
  enableval=$enable_fst_hyphenator; enable_fst_hyphenator=$enableval
else $as_nop
  enable_fst_hyphenator=$enable_all_tools
fi

# Automatically enable the fst hyphenator if pattern hyphenator is enabled:
if test "x$enable_pattern_hyphenators" = "xyes"
then :
  enable_fst_hyphenator=yes
fi
 if test "x$enable_fst_hyphenator" != xno; then
  WANT_FST_HYPHENATOR_TRUE=
  WANT_FST_HYPHENATOR_FALSE='#'
else
  WANT_FST_HYPHENATOR_TRUE='#'
  WANT_FST_HYPHENATOR_FALSE=
fi


# Set up conditional for pattern hyphenators:
 if test "x$enable_pattern_hyphenators" != xno; then
  WANT_PATTERN_HYPHENATORS_TRUE=
  WANT_PATTERN_HYPHENATORS_FALSE='#'
else
  WANT_PATTERN_HYPHENATORS_TRUE='#'
  WANT_PATTERN_HYPHENATORS_FALSE=
fi


# Enable dictionary transducers - default is 'no'
# Check whether --enable-dicts was given.
if test ${enable_dicts+y}
then :
  enableval=$enable_dicts; enable_dicts=$enableval
else $as_nop
  enable_dicts=$enable_all_tools
fi

 if test "x$enable_dicts" != xno; then
  WANT_DICTIONARIES_TRUE=
  WANT_DICTIONARIES_FALSE='#'
else
  WANT_DICTIONARIES_TRUE='#'
  WANT_DICTIONARIES_FALSE=
fi


# Enable Oahpa transducers - default is 'no'
# Check whether --enable-oahpa was given.
if test ${enable_oahpa+y}
then :
  enableval=$enable_oahpa; enable_oahpa=$enableval
else $as_nop
  enable_oahpa=$enable_all_tools
fi

 if test "x$enable_oahpa" != xno; then
  WANT_OAHPA_TRUE=
  WANT_OAHPA_FALSE='#'
else
  WANT_OAHPA_TRUE='#'
  WANT_OAHPA_FALSE=
fi


# Enable L2 fst's for Oahpa:
# Check whether --enable-L2 was given.
if test ${enable_L2+y}
then :
  enableval=$enable_L2; enable_L2=$enableval
else $as_nop
  enable_L2=no
fi

if test x$enable_oahpa = xno
then :
  enable_L2=no
else $as_nop
  if test x$enable_L2 != xno -a \
      "$(find ${srcdir}/src -name "*-L2.*" | head -n 1)" = ""
then :
  as_fn_error $? "You asked for the L2 analyser, but no L2 files were found" "$LINENO" 5
fi
fi
 if test "x$enable_L2" != xno; then
  WANT_L2_TRUE=
  WANT_L2_FALSE='#'
else
  WANT_L2_TRUE='#'
  WANT_L2_FALSE=
fi


# Enable downcasing error fst's for Oahpa:
# Check whether --enable-downcaseerror was given.
if test ${enable_downcaseerror+y}
then :
  enableval=$enable_downcaseerror; enable_downcaseerror=$enableval
else $as_nop
  enable_downcaseerror=no
fi

if test x$enable_oahpa = xno
then :
  enable_downcaseerror=no
fi
 if test "x$enable_downcaseerror" != xno; then
  WANT_DOWNCASEERROR_TRUE=
  WANT_DOWNCASEERROR_FALSE='#'
else
  WANT_DOWNCASEERROR_TRUE='#'
  WANT_DOWNCASEERROR_FALSE=
fi


# Enable IPA conversion - default is 'no'
# Check whether --enable-phonetic was given.
if test ${enable_phonetic+y}
then :
  enableval=$enable_phonetic; enable_phonetic=$enableval
else $as_nop
  enable_phonetic=no
fi

 if test "x$enable_phonetic" != xno; then
  WANT_PHONETIC_TRUE=
  WANT_PHONETIC_FALSE='#'
else
  WANT_PHONETIC_TRUE='#'
  WANT_PHONETIC_FALSE=
fi


# Enable Apertium transducers - default is 'no'
# Check whether --enable-apertium was given.
if test ${enable_apertium+y}
then :
  enableval=$enable_apertium; enable_apertium=$enableval
else $as_nop
  enable_apertium=$enable_all_tools
fi

if test "x$enable_apertium" = "xyes" -a "x$new_enough_python_available" = "xno"
then :
  enable_apertium=no
       as_fn_error $? "Python3 missing or too old, Python 3.5 or newer required" "$LINENO" 5
fi
if test "x$enable_apertium" = "xyes" -a "x$CG_RELABEL" = "xno"
then :
  enable_apertium=no
       as_fn_error $? "Apertium enabled but cg-relabel not found. Please install Vislcg3." "$LINENO" 5
fi
 if test "x$enable_apertium" != xno; then
  WANT_APERTIUM_TRUE=
  WANT_APERTIUM_FALSE='#'
else
  WANT_APERTIUM_TRUE='#'
  WANT_APERTIUM_FALSE=
fi


# Enable CG-based MT - default is 'no'
# Check whether --enable-cgmt was given.
if test ${enable_cgmt+y}
then :
  enableval=$enable_cgmt; enable_cgmt=$enableval
else $as_nop
  enable_cgmt=no
fi

if test "x$enable_cgmt" = "xyes" -a "x$GTPRIV" = "x"
then :
  as_fn_error $? "\$\$GTPRIV not set! CG-based MT requires access to closed-source tools in GTPRIV" "$LINENO" 5
fi
if test x$enable_tokenisers = xno -a x$enable_cgmt = xyes
then :
  as_fn_error $? "You need to enable tokenisers to build CG-based MT" "$LINENO" 5
fi
 if test "x$enable_cgmt" != xno; then
  CAN_CGMT_TRUE=
  CAN_CGMT_FALSE='#'
else
  CAN_CGMT_TRUE='#'
  CAN_CGMT_FALSE=
fi


# Enable building of abbr.txt:
# Check whether --enable-abbr was given.
if test ${enable_abbr+y}
then :
  enableval=$enable_abbr; enable_abbr=$enableval
else $as_nop
  enable_abbr=no
fi

if test x$enable_abbr != xno -a \
    "$(find ${srcdir}/src/fst/stems/ -name "abbreviations.lexc" | head -n 1)" = ""
then :
  as_fn_error $? "You asked for abbr.txt generation, but have no file \
src/fst/stems/abbreviations.lexc" "$LINENO" 5
fi
if test x$enable_abbr = xyes -a x$enable_generators = xno
then :
  as_fn_error $? "You need to enable generators to build the abbr file" "$LINENO" 5
fi
 if test "x$enable_abbr" != xno; then
  WANT_ABBR_TRUE=
  WANT_ABBR_FALSE='#'
else
  WANT_ABBR_TRUE='#'
  WANT_ABBR_FALSE=
fi


# Enable building tokenisers - default is 'no'
# Check whether --enable-tokenisers was given.
if test ${enable_tokenisers+y}
then :
  enableval=$enable_tokenisers; enable_tokenisers=$enableval
else $as_nop
  enable_tokenisers=$enable_all_tools
fi

if test x$enable_tokenisers = xyes -a x$enable_analysers = xno
then :
  as_fn_error $? "You need to enable analysers to build tokenisers" "$LINENO" 5
fi
 if test "x$enable_tokenisers" != xno; then
  WANT_TOKENISERS_TRUE=
  WANT_TOKENISERS_FALSE='#'
else
  WANT_TOKENISERS_TRUE='#'
  WANT_TOKENISERS_FALSE=
fi


# Enable analyser tool - default is 'no' (via $enable_all_tools)
# Check whether --enable-analyser-tool was given.
if test ${enable_analyser_tool+y}
then :
  enableval=$enable_analyser_tool; enable_analyser_tool=$enableval
else $as_nop
  enable_analyser_tool=$enable_all_tools
fi

if test "x$enable_analyser_tool" = "xyes" -a "x$gt_prog_vislcg3" = "xno"
then :
  enable_analyser_tool=no
       as_fn_error $? "vislcg3 missing or too old - required for the analyser tool" "$LINENO" 5
fi
if test x$enable_tokenisers = xno -a x$enable_analyser_tool = xyes
then :
  as_fn_error $? "You need to enable tokenisers to build the analyser tool" "$LINENO" 5
fi
 if test "x$enable_analyser_tool" != xno; then
  WANT_ANL_TOOL_TRUE=
  WANT_ANL_TOOL_FALSE='#'
else
  WANT_ANL_TOOL_TRUE='#'
  WANT_ANL_TOOL_FALSE=
fi


# Enable building morphers - default is 'no'
# Check whether --enable-morpher was given.
if test ${enable_morpher+y}
then :
  enableval=$enable_morpher; enable_morpher=$enableval
else $as_nop
  enable_morpher=no
fi

 if test "x$enable_morpher" != xno; then
  WANT_MORPHER_TRUE=
  WANT_MORPHER_FALSE='#'
else
  WANT_MORPHER_TRUE='#'
  WANT_MORPHER_FALSE=
fi


# Enable dialect-specific analysers and tools, such as spellers:
# Check whether --enable-dialects was given.
if test ${enable_dialects+y}
then :
  enableval=$enable_dialects; enable_dialects=$enableval
else $as_nop
  enable_dialects=no
fi

if test "x$enable_dialects" = "xyes" -a "x$DIALECTS" = "x"
then :
  enable_dialects=no
       as_fn_error $? "You have not defined any dialects. Please see the documentation." "$LINENO" 5
fi
 if test "x$enable_dialects" != xno; then
  WANT_DIALECTS_TRUE=
  WANT_DIALECTS_FALSE='#'
else
  WANT_DIALECTS_TRUE='#'
  WANT_DIALECTS_FALSE=
fi


# Enable dialect-specific analysers and tools, such as spellers:
# Check whether --enable-custom-fsts was given.
if test ${enable_custom_fsts+y}
then :
  enableval=$enable_custom_fsts; enable_custom_fsts=$enableval
else $as_nop
  enable_custom_fsts=$DEFAULT_CUSTOM_FSTS
fi

 if test "x$enable_custom_fsts" != xno; then
  WANT_CUSTOM_FSTS_TRUE=
  WANT_CUSTOM_FSTS_FALSE='#'
else
  WANT_CUSTOM_FSTS_TRUE='#'
  WANT_CUSTOM_FSTS_FALSE=
fi


# Enable TTS transcriptors - default is 'no' (via $enable_all_tools)
# Check whether --enable-tts was given.
if test ${enable_tts+y}
then :
  enableval=$enable_tts; enable_tts=$enableval
else $as_nop
  enable_tts=$enable_all_tools
fi

if test x$enable_tts = xyes -a x$enable_transcriptors = xno
then :
  as_fn_error $? "You need to enable transcriptors to build tts" "$LINENO" 5
fi
if test x$enable_tts = xyes -a x$enable_phonetic = xno
then :
  as_fn_error $? "You need to enable phonetic to build tts" "$LINENO" 5
fi
 if test "x$enable_tts" != xno; then
  WANT_TTS_TRUE=
  WANT_TTS_FALSE='#'
else
  WANT_TTS_TRUE='#'
  WANT_TTS_FALSE=
fi

enableval=''




# Call a function that lists all files that should be processed by autoconf:

# List all non-script files processed by Autoconf.
ac_config_files="$ac_config_files Makefile giella-myv.pc manifest.toml src/Makefile src/filters/Makefile src/hyphenation/Makefile src/fst/Makefile src/orthography/Makefile src/phonetics/Makefile src/cg3/Makefile src/tagsets/Makefile src/transcriptions/Makefile docs/Makefile test/Makefile test/tools/Makefile test/tools/hyphenators/Makefile test/tools/hyphenators/fstbased/Makefile test/tools/hyphenators/patternbased/Makefile test/tools/mt/Makefile test/tools/mt/apertium/Makefile test/tools/spellcheckers/Makefile test/tools/spellcheckers/fstbased/Makefile test/tools/spellcheckers/fstbased/desktop/Makefile test/tools/spellcheckers/fstbased/desktop/hfst/Makefile test/tools/spellcheckers/fstbased/mobile/Makefile test/src/Makefile test/src/morphology/Makefile test/src/orthography/Makefile test/src/phonology/Makefile test/src/syntax/Makefile tools/Makefile tools/analysers/Makefile tools/analysers/pipespec.xml tools/grammarcheckers/Makefile tools/grammarcheckers/pipespec.xml tools/grammarcheckers/filters/Makefile tools/grammarcheckers/tests/Makefile tools/hyphenators/Makefile tools/hyphenators/filters/Makefile tools/mt/Makefile tools/mt/filters/Makefile tools/mt/apertium/Makefile tools/mt/apertium/filters/Makefile tools/mt/apertium/tagsets/Makefile tools/mt/cgbased/Makefile tools/tokenisers/Makefile tools/tokenisers/filters/Makefile tools/shellscripts/Makefile tools/spellcheckers/Makefile tools/spellcheckers/filters/Makefile tools/spellcheckers/weights/Makefile tools/tts/Makefile tools/tts/pipespec.xml tools/tts/test/Makefile"

# Add one AC_CONFIG_FILES for each script file that needs processing. This gives
# the most pleasant user experience and most readable autoconf code to maintain.
# Spell checker tests, all languages:
ac_config_files="$ac_config_files test/tools/spellcheckers/test-zhfst-file.sh"

ac_config_files="$ac_config_files test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh"

ac_config_files="$ac_config_files test/run-yaml-testcases.sh"

ac_config_files="$ac_config_files test/run-morph-tester.sh"

# Phonology tests, all languages:
ac_config_files="$ac_config_files test/src/phonology/pair-test-positive.sh"

ac_config_files="$ac_config_files test/src/phonology/pair-test-negative.sh"

ac_config_files="$ac_config_files test/src/phonology/pair-test-hfst.sh"

# Lemma generation tests, all languages:
ac_config_files="$ac_config_files test/src/morphology/generate-adjective-lemmas.sh"

ac_config_files="$ac_config_files test/src/morphology/generate-noun-lemmas.sh"

ac_config_files="$ac_config_files test/src/morphology/generate-propernoun-lemmas.sh"

ac_config_files="$ac_config_files test/src/morphology/generate-verb-lemmas.sh"

# Lemma acceptance test for spellers, all languages:
ac_config_files="$ac_config_files test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh"

# Shorthand shell scripts instead of the old-type aliases - all languages:
ac_config_files="$ac_config_files tools/shellscripts/umyv-gt.sh"

# Devtools shell scripts should also be handled by autotools:
ac_config_files="$ac_config_files devtools/check_analysis_regressions.sh"

ac_config_files="$ac_config_files devtools/test_ospell-office_suggestions.sh"

ac_config_files="$ac_config_files devtools/test_voikkospell_suggestions.sh"

ac_config_files="$ac_config_files devtools/test_grammar_checker.sh"




##########################################################
##### BEGIN: Add language-specific list of files to ######
########## be processed by autoconf below here: ##########

############ END: Language-specific scripts. #############

# This must be near the end of all configure.ac files:
cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, we kill variables containing newlines.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(
  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done

  (set) 2>&1 |
    case $as_nl`(ac_space=' '; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      # `set' does not quote correctly, so add quotes: double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \.
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;; #(
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
) |
  sed '
     /^ac_cv_env_/b end
     t clear
     :clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test ${\1+y} || &/
     t end
     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     :end' >>confcache
if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
  if test -w "$cache_file"; then
    if test "x$cache_file" != "x/dev/null"; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
printf "%s\n" "$as_me: updating cache $cache_file" >&6;}
      if test ! -f "$cache_file" || test -h "$cache_file"; then
	cat confcache >"$cache_file"
      else
        case $cache_file in #(
        */* | ?:*)
	  mv -f confcache "$cache_file"$$ &&
	  mv -f "$cache_file"$$ "$cache_file" ;; #(
        *)
	  mv -f confcache "$cache_file" ;;
	esac
      fi
    fi
  else
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
printf "%s\n" "$as_me: not updating unwritable cache $cache_file" >&6;}
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

# Transform confdefs.h into DEFS.
# Protect against shell expansion while executing Makefile rules.
# Protect against Makefile macro expansion.
#
# If the first sed substitution is executed (which looks for macros that
# take arguments), then branch to the quote section.  Otherwise,
# look for a macro that doesn't take arguments.
ac_script='
:mline
/\\$/{
 N
 s,\\\n,,
 b mline
}
t clear
:clear
s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*([^)]*)\)[	 ]*\(.*\)/-D\1=\2/g
t quote
s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)/-D\1=\2/g
t quote
b any
:quote
s/[	 `~#$^&*(){}\\|;'\''"<>?]/\\&/g
s/\[/\\&/g
s/\]/\\&/g
s/\$/$$/g
H
:any
${
	g
	s/^\n//
	s/\n/ /g
	p
}
'
DEFS=`sed -n "$ac_script" confdefs.h`


ac_libobjs=
ac_ltlibobjs=
U=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`printf "%s\n" "$ac_i" | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking that generated files are newer than configure" >&5
printf %s "checking that generated files are newer than configure... " >&6; }
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }

if test -z "${HAVE_ALT_WSS_TRUE}" && test -z "${HAVE_ALT_WSS_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_ALT_WSS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_AREAS_TRUE}" && test -z "${HAVE_AREAS_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_AREAS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_ALT_ORTHS_TRUE}" && test -z "${HAVE_ALT_ORTHS_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_ALT_ORTHS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_ALT_ORTH_PROOFTOOLS_TRUE}" && test -z "${WANT_ALT_ORTH_PROOFTOOLS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_ALT_ORTH_PROOFTOOLS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${DEFAULT_CASE_HANDLING_TRUE}" && test -z "${DEFAULT_CASE_HANDLING_FALSE}"; then
  as_fn_error $? "conditional \"DEFAULT_CASE_HANDLING\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_DIALECTS_TRUE}" && test -z "${HAVE_DIALECTS_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_DIALECTS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${SKIP_PHONOLOGY_TRUE}" && test -z "${SKIP_PHONOLOGY_FALSE}"; then
  as_fn_error $? "conditional \"SKIP_PHONOLOGY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${LEXREF_IN_PHONOLOGY_TRUE}" && test -z "${LEXREF_IN_PHONOLOGY_FALSE}"; then
  as_fn_error $? "conditional \"LEXREF_IN_PHONOLOGY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_YAML_TEST_TRUE}" && test -z "${CAN_YAML_TEST_FALSE}"; then
  as_fn_error $? "conditional \"CAN_YAML_TEST\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_FORREST_VALIDATE_TRUE}" && test -z "${CAN_FORREST_VALIDATE_FALSE}"; then
  as_fn_error $? "conditional \"CAN_FORREST_VALIDATE\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_LOCALSYNC_TRUE}" && test -z "${CAN_LOCALSYNC_FALSE}"; then
  as_fn_error $? "conditional \"CAN_LOCALSYNC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_REMOTE_SYNC_TRUE}" && test -z "${CAN_REMOTE_SYNC_FALSE}"; then
  as_fn_error $? "conditional \"CAN_REMOTE_SYNC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_MERGE_TRUE}" && test -z "${CAN_MERGE_FALSE}"; then
  as_fn_error $? "conditional \"CAN_MERGE\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_XFST_TRUE}" && test -z "${CAN_XFST_FALSE}"; then
  as_fn_error $? "conditional \"CAN_XFST\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_FOMA_TRUE}" && test -z "${CAN_FOMA_FALSE}"; then
  as_fn_error $? "conditional \"CAN_FOMA\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAS_FOMA_TRUE}" && test -z "${HAS_FOMA_FALSE}"; then
  as_fn_error $? "conditional \"HAS_FOMA\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_HFST_TRUE}" && test -z "${CAN_HFST_FALSE}"; then
  as_fn_error $? "conditional \"CAN_HFST\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_OFST_TROPICAL_TRUE}" && test -z "${WITH_OFST_TROPICAL_FALSE}"; then
  as_fn_error $? "conditional \"WITH_OFST_TROPICAL\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_OFST_LOG_TRUE}" && test -z "${WITH_OFST_LOG_FALSE}"; then
  as_fn_error $? "conditional \"WITH_OFST_LOG\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_SFST_TRUE}" && test -z "${WITH_SFST_FALSE}"; then
  as_fn_error $? "conditional \"WITH_SFST\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_FOMA_TRUE}" && test -z "${WITH_FOMA_FALSE}"; then
  as_fn_error $? "conditional \"WITH_FOMA\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_VFST_TRUE}" && test -z "${CAN_VFST_FALSE}"; then
  as_fn_error $? "conditional \"CAN_VFST\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_VISLCG_TRUE}" && test -z "${CAN_VISLCG_FALSE}"; then
  as_fn_error $? "conditional \"CAN_VISLCG\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_SAXON_TRUE}" && test -z "${CAN_SAXON_FALSE}"; then
  as_fn_error $? "conditional \"CAN_SAXON\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_JAVA_TRUE}" && test -z "${CAN_JAVA_FALSE}"; then
  as_fn_error $? "conditional \"CAN_JAVA\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_XZ_TRUE}" && test -z "${CAN_XZ_FALSE}"; then
  as_fn_error $? "conditional \"CAN_XZ\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_HYPERMINIMISATION_TRUE}" && test -z "${WANT_HYPERMINIMISATION_FALSE}"; then
  as_fn_error $? "conditional \"WANT_HYPERMINIMISATION\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_LEXC_ALIGNMENT_TRUE}" && test -z "${WANT_LEXC_ALIGNMENT_FALSE}"; then
  as_fn_error $? "conditional \"WANT_LEXC_ALIGNMENT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_TWOSTEP_INTERSECT_TRUE}" && test -z "${WANT_TWOSTEP_INTERSECT_FALSE}"; then
  as_fn_error $? "conditional \"WANT_TWOSTEP_INTERSECT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_REVERSED_INTERSECT_TRUE}" && test -z "${WANT_REVERSED_INTERSECT_FALSE}"; then
  as_fn_error $? "conditional \"WANT_REVERSED_INTERSECT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_MORPHOLOGY_TRUE}" && test -z "${WANT_MORPHOLOGY_FALSE}"; then
  as_fn_error $? "conditional \"WANT_MORPHOLOGY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_GENERATION_TRUE}" && test -z "${WANT_GENERATION_FALSE}"; then
  as_fn_error $? "conditional \"WANT_GENERATION\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_GLOSSERS_TRUE}" && test -z "${WANT_GLOSSERS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_GLOSSERS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_TRANSCRIPTORS_TRUE}" && test -z "${WANT_TRANSCRIPTORS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_TRANSCRIPTORS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_SYNTAX_TRUE}" && test -z "${WANT_SYNTAX_FALSE}"; then
  as_fn_error $? "conditional \"WANT_SYNTAX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_GRAMCHECK_TRUE}" && test -z "${WANT_GRAMCHECK_FALSE}"; then
  as_fn_error $? "conditional \"WANT_GRAMCHECK\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_SPELLERS_TRUE}" && test -z "${WANT_SPELLERS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_SPELLERS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_HFST_DESKTOP_SPELLER_TRUE}" && test -z "${WANT_HFST_DESKTOP_SPELLER_FALSE}"; then
  as_fn_error $? "conditional \"WANT_HFST_DESKTOP_SPELLER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_FOMA_SPELLER_TRUE}" && test -z "${CAN_FOMA_SPELLER_FALSE}"; then
  as_fn_error $? "conditional \"CAN_FOMA_SPELLER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_HFST_MOBILE_SPELLER_TRUE}" && test -z "${WANT_HFST_MOBILE_SPELLER_FALSE}"; then
  as_fn_error $? "conditional \"WANT_HFST_MOBILE_SPELLER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_VFST_SPELLER_TRUE}" && test -z "${WANT_VFST_SPELLER_FALSE}"; then
  as_fn_error $? "conditional \"WANT_VFST_SPELLER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_FST_HYPHENATOR_TRUE}" && test -z "${WANT_FST_HYPHENATOR_FALSE}"; then
  as_fn_error $? "conditional \"WANT_FST_HYPHENATOR\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_PATTERN_HYPHENATORS_TRUE}" && test -z "${WANT_PATTERN_HYPHENATORS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_PATTERN_HYPHENATORS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_DICTIONARIES_TRUE}" && test -z "${WANT_DICTIONARIES_FALSE}"; then
  as_fn_error $? "conditional \"WANT_DICTIONARIES\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_OAHPA_TRUE}" && test -z "${WANT_OAHPA_FALSE}"; then
  as_fn_error $? "conditional \"WANT_OAHPA\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_L2_TRUE}" && test -z "${WANT_L2_FALSE}"; then
  as_fn_error $? "conditional \"WANT_L2\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_DOWNCASEERROR_TRUE}" && test -z "${WANT_DOWNCASEERROR_FALSE}"; then
  as_fn_error $? "conditional \"WANT_DOWNCASEERROR\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_PHONETIC_TRUE}" && test -z "${WANT_PHONETIC_FALSE}"; then
  as_fn_error $? "conditional \"WANT_PHONETIC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_APERTIUM_TRUE}" && test -z "${WANT_APERTIUM_FALSE}"; then
  as_fn_error $? "conditional \"WANT_APERTIUM\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CAN_CGMT_TRUE}" && test -z "${CAN_CGMT_FALSE}"; then
  as_fn_error $? "conditional \"CAN_CGMT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_ABBR_TRUE}" && test -z "${WANT_ABBR_FALSE}"; then
  as_fn_error $? "conditional \"WANT_ABBR\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_TOKENISERS_TRUE}" && test -z "${WANT_TOKENISERS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_TOKENISERS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_ANL_TOOL_TRUE}" && test -z "${WANT_ANL_TOOL_FALSE}"; then
  as_fn_error $? "conditional \"WANT_ANL_TOOL\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_MORPHER_TRUE}" && test -z "${WANT_MORPHER_FALSE}"; then
  as_fn_error $? "conditional \"WANT_MORPHER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_DIALECTS_TRUE}" && test -z "${WANT_DIALECTS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_DIALECTS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_CUSTOM_FSTS_TRUE}" && test -z "${WANT_CUSTOM_FSTS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_CUSTOM_FSTS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_TTS_TRUE}" && test -z "${WANT_TTS_FALSE}"; then
  as_fn_error $? "conditional \"WANT_TTS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi

: "${CONFIG_STATUS=./config.status}"
ac_write_fail=0
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
printf "%s\n" "$as_me: creating $CONFIG_STATUS" >&6;}
as_write_fail=0
cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=\${CONFIG_SHELL-$SHELL}
export SHELL
_ASEOF
cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error



# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
_ASEOF
test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Giella myv $as_me 0.2.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

_ACEOF

case $ac_config_files in *"
"*) set x $ac_config_files; shift; ac_config_files=$*;;
esac



cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
# Files that config.status was made for.
config_files="$ac_config_files"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE

Configuration files:
$config_files

Report bugs to <feedback@divvun.no>.
Giella myv home page: <http://divvun.no>."

_ACEOF
ac_cs_config=`printf "%s\n" "$ac_configure_args" | sed "$ac_safe_unquote"`
ac_cs_config_escaped=`printf "%s\n" "$ac_cs_config" | sed "s/^ //; s/'/'\\\\\\\\''/g"`
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_cs_config='$ac_cs_config_escaped'
ac_cs_version="\\
Giella myv config.status 0.2.0
configured by $0, generated by GNU Autoconf 2.71,
  with options \\"\$ac_cs_config\\"

Copyright (C) 2021 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='$ac_pwd'
srcdir='$srcdir'
INSTALL='$INSTALL'
MKDIR_P='$MKDIR_P'
AWK='$AWK'
test -n "\$AWK" || AWK=awk
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h |  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
if \$ac_cs_recheck; then
  set X $SHELL '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=$SHELL \$*" >&6
  CONFIG_SHELL='$SHELL'
  export CONFIG_SHELL
  exec "\$@"
fi

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1

# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "giella-myv.pc") CONFIG_FILES="$CONFIG_FILES giella-myv.pc" ;;
    "manifest.toml") CONFIG_FILES="$CONFIG_FILES manifest.toml" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "src/filters/Makefile") CONFIG_FILES="$CONFIG_FILES src/filters/Makefile" ;;
    "src/hyphenation/Makefile") CONFIG_FILES="$CONFIG_FILES src/hyphenation/Makefile" ;;
    "src/fst/Makefile") CONFIG_FILES="$CONFIG_FILES src/fst/Makefile" ;;
    "src/orthography/Makefile") CONFIG_FILES="$CONFIG_FILES src/orthography/Makefile" ;;
    "src/phonetics/Makefile") CONFIG_FILES="$CONFIG_FILES src/phonetics/Makefile" ;;
    "src/cg3/Makefile") CONFIG_FILES="$CONFIG_FILES src/cg3/Makefile" ;;
    "src/tagsets/Makefile") CONFIG_FILES="$CONFIG_FILES src/tagsets/Makefile" ;;
    "src/transcriptions/Makefile") CONFIG_FILES="$CONFIG_FILES src/transcriptions/Makefile" ;;
    "docs/Makefile") CONFIG_FILES="$CONFIG_FILES docs/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/tools/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/Makefile" ;;
    "test/tools/hyphenators/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/hyphenators/Makefile" ;;
    "test/tools/hyphenators/fstbased/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/hyphenators/fstbased/Makefile" ;;
    "test/tools/hyphenators/patternbased/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/hyphenators/patternbased/Makefile" ;;
    "test/tools/mt/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/mt/Makefile" ;;
    "test/tools/mt/apertium/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/mt/apertium/Makefile" ;;
    "test/tools/spellcheckers/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/Makefile" ;;
    "test/tools/spellcheckers/fstbased/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/Makefile" ;;
    "test/tools/spellcheckers/fstbased/desktop/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/desktop/Makefile" ;;
    "test/tools/spellcheckers/fstbased/desktop/hfst/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/desktop/hfst/Makefile" ;;
    "test/tools/spellcheckers/fstbased/mobile/Makefile") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/mobile/Makefile" ;;
    "test/src/Makefile") CONFIG_FILES="$CONFIG_FILES test/src/Makefile" ;;
    "test/src/morphology/Makefile") CONFIG_FILES="$CONFIG_FILES test/src/morphology/Makefile" ;;
    "test/src/orthography/Makefile") CONFIG_FILES="$CONFIG_FILES test/src/orthography/Makefile" ;;
    "test/src/phonology/Makefile") CONFIG_FILES="$CONFIG_FILES test/src/phonology/Makefile" ;;
    "test/src/syntax/Makefile") CONFIG_FILES="$CONFIG_FILES test/src/syntax/Makefile" ;;
    "tools/Makefile") CONFIG_FILES="$CONFIG_FILES tools/Makefile" ;;
    "tools/analysers/Makefile") CONFIG_FILES="$CONFIG_FILES tools/analysers/Makefile" ;;
    "tools/analysers/pipespec.xml") CONFIG_FILES="$CONFIG_FILES tools/analysers/pipespec.xml" ;;
    "tools/grammarcheckers/Makefile") CONFIG_FILES="$CONFIG_FILES tools/grammarcheckers/Makefile" ;;
    "tools/grammarcheckers/pipespec.xml") CONFIG_FILES="$CONFIG_FILES tools/grammarcheckers/pipespec.xml" ;;
    "tools/grammarcheckers/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/grammarcheckers/filters/Makefile" ;;
    "tools/grammarcheckers/tests/Makefile") CONFIG_FILES="$CONFIG_FILES tools/grammarcheckers/tests/Makefile" ;;
    "tools/hyphenators/Makefile") CONFIG_FILES="$CONFIG_FILES tools/hyphenators/Makefile" ;;
    "tools/hyphenators/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/hyphenators/filters/Makefile" ;;
    "tools/mt/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/Makefile" ;;
    "tools/mt/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/filters/Makefile" ;;
    "tools/mt/apertium/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/apertium/Makefile" ;;
    "tools/mt/apertium/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/apertium/filters/Makefile" ;;
    "tools/mt/apertium/tagsets/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/apertium/tagsets/Makefile" ;;
    "tools/mt/cgbased/Makefile") CONFIG_FILES="$CONFIG_FILES tools/mt/cgbased/Makefile" ;;
    "tools/tokenisers/Makefile") CONFIG_FILES="$CONFIG_FILES tools/tokenisers/Makefile" ;;
    "tools/tokenisers/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/tokenisers/filters/Makefile" ;;
    "tools/shellscripts/Makefile") CONFIG_FILES="$CONFIG_FILES tools/shellscripts/Makefile" ;;
    "tools/spellcheckers/Makefile") CONFIG_FILES="$CONFIG_FILES tools/spellcheckers/Makefile" ;;
    "tools/spellcheckers/filters/Makefile") CONFIG_FILES="$CONFIG_FILES tools/spellcheckers/filters/Makefile" ;;
    "tools/spellcheckers/weights/Makefile") CONFIG_FILES="$CONFIG_FILES tools/spellcheckers/weights/Makefile" ;;
    "tools/tts/Makefile") CONFIG_FILES="$CONFIG_FILES tools/tts/Makefile" ;;
    "tools/tts/pipespec.xml") CONFIG_FILES="$CONFIG_FILES tools/tts/pipespec.xml" ;;
    "tools/tts/test/Makefile") CONFIG_FILES="$CONFIG_FILES tools/tts/test/Makefile" ;;
    "test/tools/spellcheckers/test-zhfst-file.sh") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/test-zhfst-file.sh" ;;
    "test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh" ;;
    "test/run-yaml-testcases.sh") CONFIG_FILES="$CONFIG_FILES test/run-yaml-testcases.sh" ;;
    "test/run-morph-tester.sh") CONFIG_FILES="$CONFIG_FILES test/run-morph-tester.sh" ;;
    "test/src/phonology/pair-test-positive.sh") CONFIG_FILES="$CONFIG_FILES test/src/phonology/pair-test-positive.sh" ;;
    "test/src/phonology/pair-test-negative.sh") CONFIG_FILES="$CONFIG_FILES test/src/phonology/pair-test-negative.sh" ;;
    "test/src/phonology/pair-test-hfst.sh") CONFIG_FILES="$CONFIG_FILES test/src/phonology/pair-test-hfst.sh" ;;
    "test/src/morphology/generate-adjective-lemmas.sh") CONFIG_FILES="$CONFIG_FILES test/src/morphology/generate-adjective-lemmas.sh" ;;
    "test/src/morphology/generate-noun-lemmas.sh") CONFIG_FILES="$CONFIG_FILES test/src/morphology/generate-noun-lemmas.sh" ;;
    "test/src/morphology/generate-propernoun-lemmas.sh") CONFIG_FILES="$CONFIG_FILES test/src/morphology/generate-propernoun-lemmas.sh" ;;
    "test/src/morphology/generate-verb-lemmas.sh") CONFIG_FILES="$CONFIG_FILES test/src/morphology/generate-verb-lemmas.sh" ;;
    "test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh") CONFIG_FILES="$CONFIG_FILES test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh" ;;
    "tools/shellscripts/umyv-gt.sh") CONFIG_FILES="$CONFIG_FILES tools/shellscripts/umyv-gt.sh" ;;
    "devtools/check_analysis_regressions.sh") CONFIG_FILES="$CONFIG_FILES devtools/check_analysis_regressions.sh" ;;
    "devtools/test_ospell-office_suggestions.sh") CONFIG_FILES="$CONFIG_FILES devtools/test_ospell-office_suggestions.sh" ;;
    "devtools/test_voikkospell_suggestions.sh") CONFIG_FILES="$CONFIG_FILES devtools/test_voikkospell_suggestions.sh" ;;
    "devtools/test_grammar_checker.sh") CONFIG_FILES="$CONFIG_FILES devtools/test_grammar_checker.sh" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
_ACEOF


{
  echo "cat >conf$$subs.awk <<_ACEOF" &&
  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
  echo "_ACEOF"
} >conf$$subs.sh ||
  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
ac_delim='%!_!# '
for ac_last_try in false false false false false :; do
  . ./conf$$subs.sh ||
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5

  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
  if test $ac_delim_n = $ac_delim_num; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done
rm -f conf$$subs.sh

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
cat >>"\$ac_tmp/subs1.awk" <<\\_ACAWK &&
_ACEOF
sed -n '
h
s/^/S["/; s/!.*/"]=/
p
g
s/^[^!]*!//
:repl
t repl
s/'"$ac_delim"'$//
t delim
:nl
h
s/\(.\{148\}\)..*/\1/
t more1
s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
p
n
b repl
:more1
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t nl
:delim
h
s/\(.\{148\}\)..*/\1/
t more2
s/["\\]/\\&/g; s/^/"/; s/$/"/
p
b
:more2
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t delim
' <conf$$subs.awk | sed '
/^[^""]/{
  N
  s/\n//
}
' >>$CONFIG_STATUS || ac_write_fail=1
rm -f conf$$subs.awk
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACAWK
cat >>"\$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
_ACEOF

# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}'
fi

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
fi # test -n "$CONFIG_FILES"


eval set X "  :F $CONFIG_FILES      "
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  ac_datarootdir_hack='
  s&@datadir@&$datadir&g
  s&@docdir@&$docdir&g
  s&@infodir@&$infodir&g
  s&@localedir@&$localedir&g
  s&@mandir@&$mandir&g
  s&\\\${datarootdir}&$datarootdir&g' ;;
esac
_ACEOF

# Neutralize VPATH when `$srcdir' = `.'.
# Shell code in configure.ac might set extrasub.
# FIXME: do we really want to maintain this feature?
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_sed_extra="$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;



  esac


  case $ac_file$ac_mode in
    "test/tools/spellcheckers/test-zhfst-file.sh":F) \
      chmod a+x test/tools/spellcheckers/test-zhfst-file.sh ;;
    "test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh":F) \
      chmod a+x test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh ;;
    "test/run-yaml-testcases.sh":F) \
      chmod a+x test/run-yaml-testcases.sh ;;
    "test/run-morph-tester.sh":F) \
      chmod a+x test/run-morph-tester.sh ;;
    "test/src/phonology/pair-test-positive.sh":F) \
      chmod a+x test/src/phonology/pair-test-positive.sh ;;
    "test/src/phonology/pair-test-negative.sh":F) \
      chmod a+x test/src/phonology/pair-test-negative.sh ;;
    "test/src/phonology/pair-test-hfst.sh":F) \
      chmod a+x test/src/phonology/pair-test-hfst.sh ;;
    "test/src/morphology/generate-adjective-lemmas.sh":F) \
      chmod a+x test/src/morphology/generate-adjective-lemmas.sh ;;
    "test/src/morphology/generate-noun-lemmas.sh":F) \
      chmod a+x test/src/morphology/generate-noun-lemmas.sh ;;
    "test/src/morphology/generate-propernoun-lemmas.sh":F) \
      chmod a+x test/src/morphology/generate-propernoun-lemmas.sh ;;
    "test/src/morphology/generate-verb-lemmas.sh":F) \
      chmod a+x test/src/morphology/generate-verb-lemmas.sh ;;
    "test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh":F) \
      chmod a+x test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh ;;
    "tools/shellscripts/umyv-gt.sh":F) \
      chmod a+x tools/shellscripts/umyv-gt.sh ;;
    "devtools/check_analysis_regressions.sh":F) \
      chmod a+x devtools/check_analysis_regressions.sh ;;
    "devtools/test_ospell-office_suggestions.sh":F) \
      chmod a+x devtools/test_ospell-office_suggestions.sh ;;
    "devtools/test_voikkospell_suggestions.sh":F) \
      chmod a+x devtools/test_voikkospell_suggestions.sh ;;
    "devtools/test_grammar_checker.sh":F) \
      chmod a+x devtools/test_grammar_checker.sh ;;

  esac
done # for ac_tag


as_fn_exit 0
_ACEOF
ac_clean_files=$ac_clean_files_save

test $ac_write_fail = 0 ||
  as_fn_error $? "write failure creating $CONFIG_STATUS" "$LINENO" 5


# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || as_fn_exit 1
fi
if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
fi


# Prints the informative blurb at the end of ./configure command

cat<<EOF

  -- specialised fst’s (off by default): --
  * dictionary fst’s enabled: $enable_dicts
  * Oahpa transducers enabled: $enable_oahpa
    * L2 analyser: $enable_L2
    * downcase error analyser: $enable_downcaseerror
  * generate abbr.txt: $enable_abbr
  * build glossing fst’s: $enable_glossers
  * build dialect specific fst’s: $enable_dialects
  * custom fst’s: $enable_custom_fsts

  -- Tools (off by default): --
  * phonetic/IPA conversion enabled: $enable_phonetic
  * CG-based MT enabled: $enable_cgmt
  * Apertium MT fst’s enabled: $enable_apertium
  * build tokenisers: $enable_tokenisers
  * build morphololgical segmenter: $enable_morpher
  * build analyser tool: $enable_analyser_tool
  * build text-to-speech support: $enable_tts

  -- Proofing tools (off by default): --
  * hyphenators:
    * fst hyphenator enabled: $enable_fst_hyphenator
    * pattern hyphenator enabled (requires fst hyph): $enable_fst_hyphenator
  * spellers (zhfst files) enabled: $enable_spellers
    * desktop spellers:
      * installable packages enabled: $enable_desktop_hfstspellers
      * foma speller enabled: $enable_fomaspeller
    * mobile spellers (off by default, even with spellers enabled):
      * hfst speller enabled: $enable_mobile_hfstspeller
      * vfst speller enabled: $enable_vfstspeller
  * grammar checker enabled: $enable_grammarchecker

-- Building $PACKAGE_STRING (more specialised build targets listed above):

  -- Fst build tools: Xerox, Hfst or Foma - at least one must be installed
  * build Xerox fst’s: $gt_prog_xfst (default: $DEFAULT_XFST)
  * build HFST fst’s: $gt_prog_hfst (default: $DEFAULT_HFST)
  * build Foma fst’s: $gt_prog_foma (default: $DEFAULT_FOMA)

  -- basic packages (on by default): --
  * analysers enabled: $enable_analysers
  * generators enabled: $enable_generators
  * transcriptors enabled: $enable_transcriptors
  * syntactic tools enabled: $enable_syntax
  * yaml tests enabled: $enable_yamltests
  * generated documentation enabled: always

For more ./configure options, run ./configure --help

To build, test and install:
    make
    make check
    make install
EOF
if test x$gt_prog_xslt = xno -a \
      "$(find ${srcdir}/src/fst/stems -name "*.xml" | head -n 1)" != ""
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: You have XML source files, but XML transformation to LexC is
disabled. Please check the output of configure to locate any problems. The LexC
files will still compile though.
" >&5
printf "%s\n" "$as_me: WARNING: You have XML source files, but XML transformation to LexC is
disabled. Please check the output of configure to locate any problems. The LexC
files will still compile though.
" >&2;}
fi

if test x$can_local_sync = xno -a x$can_wget_giella_libs = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Could not find GIELLA_LIBS, rsync or wget - speller installers will not be built, only zhfst files." >&5
printf "%s\n" "$as_me: WARNING: Could not find GIELLA_LIBS, rsync or wget - speller installers will not be built, only zhfst files." >&2;}
fi

if test x$can_wget_giella_libs = xyes
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: Could not find GIELLA_LIBS, but found wget - speller installers will be built, but requires a live Internet connection." >&5
printf "%s\n" "$as_me: Could not find GIELLA_LIBS, but found wget - speller installers will be built, but requires a live Internet connection." >&6;}
fi

# Notify of fallback to Hfst
if test "x$fallback_to_hfst" != x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $fallback_to_hfst" >&5
printf "%s\n" "$as_me: $fallback_to_hfst" >&6;}
fi

# Notify of fallback to Foma
if test "x$fallback_to_foma" != x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $fallback_to_foma" >&5
printf "%s\n" "$as_me: $fallback_to_foma" >&6;}
fi

if test "x$enable_yamltests" = "xno"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: YAML testing could not be automatically enabled. To enable it, on MacOSX please do:

sudo port install python35 py35-pip
sudo pip-3.5 install PyYAML

On other systems, install python 3.5+ and the corresponding py-yaml using suitable tools for those systems." >&5
printf "%s\n" "$as_me: WARNING: YAML testing could not be automatically enabled. To enable it, on MacOSX please do:

sudo port install python35 py35-pip
sudo pip-3.5 install PyYAML

On other systems, install python 3.5+ and the corresponding py-yaml using suitable tools for those systems." >&2;}
fi



